import { StatusBar } from 'expo-status-bar';
import { StyleSheet, Image, Text, View, ImageBackground, SafeAreaView, TouchableOpacity, TextInput } from 'react-native';
import { NavigationContainer, useNavigation, useRoute } from '@react-navigation/native';
import { createNativeStackNavigator } from '@react-navigation/native-stack';
import * as ImagePicker from 'expo-image-picker';
import React, { useState, useEffect } from 'react';

import WelcomePage from './welcome.js';
import RegisterPage from './register.js';
import LoginPage from './login.js';
import HomePage from './home.js';
import FacilityPage from './facility.js';
import ProfilePage from './profile.js';
import BadmintonPage from './badminton.js';
import BasketballPage from './basketball.js';
import VolleyballPage from './volleyball.js';
import BookingPage from './booking.js';
import BookingdetailsPage from './bookingdetails.js';
import PaymentDetailsPage from './PaymentDetails.js';
import PayPalPaymentPage from './PaypalPayment.js';



const Stack = createNativeStackNavigator();

export default function App() {
  const [isCameraPermissionGranted, setIsCameraPermissionGranted] = useState(false); 

  useEffect(() => {
    (async () => {
      const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();
      setIsCameraPermissionGranted(status === 'granted');
    })();
  }, []); 

  return (
    <NavigationContainer>
      <Stack.Navigator screenOptions={{
        headerShown: false,
      }}>
        <Stack.Screen name="WelcomePage" component={WelcomePage} />
        <Stack.Screen name="RegisterPage" component={RegisterPage} />
        <Stack.Screen name="LoginPage" component={LoginPage} />
        <Stack.Screen name="HomePage" component={HomePage} />
        <Stack.Screen name="FacilityPage" component={FacilityPage} />
        <Stack.Screen name="ProfilePage" component={ProfilePage} />
        <Stack.Screen name="BadmintonPage" component={BadmintonPage} />
        <Stack.Screen name="BasketballPage" component={BasketballPage} />
        <Stack.Screen name="VolleyballPage" component={VolleyballPage} />
        <Stack.Screen name="BookingPage" component={BookingPage} />
        
        <Stack.Screen name="PaymentDetailsPage" component={PaymentDetailsPage} />

        
        <Stack.Screen name="BookingdetailsPage" component={BookingdetailsPage} />
        <Stack.Screen name="PaypalPaymentPage" component={PayPalPaymentPage} />
        
      </Stack.Navigator>
    </NavigationContainer>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#fff',
  },
  
});

import { StatusBar } from 'expo-status-bar';
import { StyleSheet, Image, Text, View, ImageBackground, SafeAreaView, TouchableOpacity, TextInput, ScrollView } from 'react-native';
import { useNavigation } from '@react-navigation/native';

export default function BadmintonPage() {
  const navigation = useNavigation();
  return (
    <SafeAreaView style={styles.container}>
     
     
      <ImageBackground source={require('./assets/background.jpg')} style={styles.image}>
      
        <View style={styles.overlay} />
        <Text style={styles.text}>BADMINTON COURT</Text>
        <View style={styles.redRectangle} />
        
        <View style={styles.scrollViewContent}>
          <View style={styles.courtContainer}>
            <Image source={require('./assets/badminton.png')} style={styles.courtImage} />
            <Text style={styles.courtTitle}>BADMINTON-WHOLE COURT</Text>
            <Text style={styles.subcourtTitle}>For additional hours, kindly make another booking</Text>
            <Text style={styles.prizeText}>1 HOUR  ₱500.00</Text>
            <View style={styles.buttonRow}>
              <TouchableOpacity style={styles.bookButton} onPress={() => navigation.navigate('BookingPage', {
                courtTitle: 'BADMINTON-WHOLE COURT',
                prizeText: '₱500.00'
              })}>
                <Text style={styles.buttonText}>BOOK NOW</Text>
              </TouchableOpacity>
              <View style={styles.eventInfo}>
                <Text style={styles.eventInfoText}>Book This For Your Event</Text>
              </View>
            </View>
          </View>
          <View style={styles.courtContainer}>
            <Image source={require('./assets/badminton.png')} style={styles.courtImage} />
            <Text style={styles.courtTitle}>BADMINTON-HALF COURT</Text>
            <Text style={styles.subcourtTitle}>For additional hours, kindly make another booking</Text>
            <Text style={styles.prizeText}>1 HOUR  ₱300.00</Text>
            <View style={styles.buttonRow}>
              <TouchableOpacity style={styles.bookButton} onPress={() => navigation.navigate('BookingPage', {
                courtTitle: 'BADMINTON-HALF COURT',
                prizeText: '₱300.00'
              })}>
                <Text style={styles.buttonText}>BOOK NOW</Text>
              </TouchableOpacity>
              <View style={styles.eventInfo}>
                <Text style={styles.eventInfoText}>Book This For Your Event</Text>
              </View>
            </View>
          </View>
          
        </View>
        <View style={styles.redRectangle1}>
          <View style={styles.bottomRow}>
            <TouchableOpacity style={styles.bottomButton} onPress={() => navigation.goBack()}>
              <Image source={require('./assets/backspace.png')} style={styles.bottomImage} />
            </TouchableOpacity>
            <TouchableOpacity style={styles.bottomButton} onPress={() => navigation.navigate('HomePage')}>
              <Image source={require('./assets/home.png')} style={styles.bottomImage} />
            </TouchableOpacity>
            <TouchableOpacity style={styles.bottomButton} onPress={() => navigation.navigate('Calendar')}>
              <Image source={require('./assets/calendar.png')} style={styles.bottomImage} />
            </TouchableOpacity>
            <TouchableOpacity style={styles.bottomButton} onPress={() => navigation.navigate('ProfilePage')}>
              <Image source={require('./assets/profile.png')} style={styles.bottomImage} />
            </TouchableOpacity>
          </View>
        </View>
      </ImageBackground>
    </SafeAreaView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
  },
  scrollViewContent: {
    alignItems: 'center',
    padding: 20,
  },
  courtContainer: {
    width: '90%',
    backgroundColor: 'rgba(255, 255, 255, 0.8)',
    padding: 20,
    borderRadius: 10,
    marginBottom: 40,
    alignItems: 'center',
  },
  courtImage: {
    width: 316,
    height: 117,
    marginBottom: 5,
  },
  courtTitle: {
    fontSize: 12,
    fontWeight: 'bold',
    marginBottom: 5,
  },
  subcourtTitle: {
    fontSize: 12,
    fontWeight: 'regular',
    marginBottom: 5,
    textAlign: 'center',
  },
  buttonRow: {
    flexDirection: 'row', 
    alignItems: 'center', 
  },
  bookButton: {
    backgroundColor: '#800000',
    padding: 10,
    borderRadius: 5,
    marginTop: 10,
    width: '35%',
  },
  buttonText: {
    color: 'white',
    fontSize: 12,
    textAlign: 'center',
  },
  image: {
    flex: 1,
    resizeMode: 'cover',
    width: '100%',
    height: '100%',
  },
  overlay: {
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    bottom: 0,
    backgroundColor: '#800000',
    opacity: 0.5,
  },
  text: {
    color: 'white',
    fontSize: 20,
    textAlign: 'center',
    left: 5,
    marginTop: '20%',
  },
  eventInfo: {
    backgroundColor: '#8C8C8C',
    padding: 10,
    borderRadius: 5,
    marginLeft: 10, 
    width: '60%',
    marginTop: 10,
  },
  eventInfoText: {
    color: 'white',
    fontSize: 12,
  },
  redRectangle: {
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    height: 70,
    backgroundColor: '#800000',
  },
  redRectangle1: {
    position: 'absolute',
    bottom: 0,
    left: 0,
    right: 0,
    height: 60,
    backgroundColor: '#800000',
    flexDirection: 'row',
    justifyContent: 'space-around',
    alignItems: 'center',
  },
  bottomRow: {
    flexDirection: 'row',
    justifyContent: 'space-around',
  },
  bottomButton: {
    padding: 10,
  },
  bottomImage: {
    width: 30,
    height: 30,
    marginHorizontal: 30,
  },
});

import { StatusBar } from 'expo-status-bar';
import { StyleSheet, Image, Text, View, ImageBackground, SafeAreaView, TouchableOpacity, TextInput, ScrollView } from 'react-native';
import { useNavigation } from '@react-navigation/native';
import React, { useState } from 'react';

export default function BasketballPage() {
    const navigation = useNavigation();
    return (
        <SafeAreaView style={styles.container}>
            <ImageBackground source={require('./assets/background.jpg')} style={styles.image}>
                <View style={styles.overlay} />
                <Text style={styles.text}>BASKETBALL COURT</Text>
                <View style={styles.redRectangle} />

                <View style={styles.scrollViewContent}>
                    <View style={styles.courtContainer}>
                        <Image source={require('./assets/basketball.png')} style={styles.courtImage} />
                        <Text style={styles.courtTitle}>BASKETBALL-WHOLE COURT</Text>
                        <Text style={styles.subcourtTitle}>For additional hours, kindly make another booking</Text>
                        <Text style={styles.prizeText}>1 HOUR  ₱500.00</Text>
                        <View style={styles.buttonRow}>
                            <TouchableOpacity style={styles.bookButton} onPress={() => navigation.navigate('BookingPage', {
                                courtTitle: 'BASKETBALL-WHOLE COURT',
                                prizeText: '₱500.00'
                            })}>
                                <Text style={styles.buttonText}>BOOK NOW</Text>
                            </TouchableOpacity>
                            <View style={styles.eventInfo}>
                                <Text style={styles.eventInfoText}>Book This For Your Event</Text>
                            </View>
                        </View>
                    </View>
                    <View style={styles.courtContainer}>
                        <Image source={require('./assets/basketball.png')} style={styles.courtImage} />
                        <Text style={styles.courtTitle}>BASKETBALL-HALF COURT</Text>
                        <Text style={styles.subcourtTitle}>For additional hours, kindly make another booking</Text>
                        <Text style={styles.prizeText}>1 HOUR  ₱300.00</Text>
                        <View style={styles.buttonRow}>
                            <TouchableOpacity style={styles.bookButton} onPress={() => navigation.navigate('BookingPage', {
                                courtTitle: 'BASKETBALL-HALF COURT',
                                prizeText: '₱300.00'
                            })}>
                                <Text style={styles.buttonText}>BOOK NOW</Text>
                            </TouchableOpacity>
                            <View style={styles.eventInfo}>
                                <Text style={styles.eventInfoText}>Book This For Your Event</Text>
                            </View>
                        </View>
                    </View>

                </View>
                <View style={styles.redRectangle1}>
                    <View style={styles.bottomRow}>
                        <TouchableOpacity style={styles.bottomButton} onPress={() => navigation.goBack()}>
                            <Image source={require('./assets/backspace.png')} style={styles.bottomImage} />
                        </TouchableOpacity>
                        <TouchableOpacity style={styles.bottomButton} onPress={() => navigation.navigate('HomePage')}>
                            <Image source={require('./assets/home.png')} style={styles.bottomImage} />
                        </TouchableOpacity>
                        <TouchableOpacity style={styles.bottomButton} onPress={() => navigation.navigate('Calendar')}>
                            <Image source={require('./assets/calendar.png')} style={styles.bottomImage} />
                        </TouchableOpacity>
                        <TouchableOpacity style={styles.bottomButton} onPress={() => navigation.navigate('ProfilePage')}>
                            <Image source={require('./assets/profile.png')} style={styles.bottomImage} />
                        </TouchableOpacity>
                    </View>
                </View>
            </ImageBackground>
        </SafeAreaView>
    );
}

const styles = StyleSheet.create({
    container: {
        flex: 1,
        justifyContent: 'center',
        alignItems: 'center',
    },
    scrollViewContent: {
        alignItems: 'center',
        padding: 20,
    },
    courtContainer: {
        width: '90%',
        backgroundColor: 'rgba(255, 255, 255, 0.8)',
        padding: 20,
        borderRadius: 10,
        marginBottom: 40,
        alignItems: 'center',
    },
    courtImage: {
        width: 316,
        height: 117,
        marginBottom: 5,
    },
    courtTitle: {
        fontSize: 12,
        fontWeight: 'bold',
        marginBottom: 5,
    },
    subcourtTitle: {
        fontSize: 12,
        fontWeight: 'regular',
        marginBottom: 5,
        textAlign: 'center',
    },
    buttonRow: {
        flexDirection: 'row', 
        alignItems: 'center',
    },
    bookButton: {
        backgroundColor: '#800000',
        padding: 10,
        borderRadius: 5,
        marginTop: 10,
        width: '35%',
    },
    buttonText: {
        color: 'white',
        fontSize: 12,
        textAlign: 'center',
    },
    image: {
        flex: 1,
        resizeMode: 'cover',
        width: '100%',
        height: '100%',
    },
    overlay: {
        position: 'absolute',
        top: 0,
        left: 0,
        right: 0,
        bottom: 0,
        backgroundColor: '#800000',
        opacity: 0.5,
    },
    text: {
        color: 'white',
        fontSize: 20,
        textAlign: 'center',
        left: 5,
        marginTop: '20%',
    },
    eventInfo: {
        backgroundColor: '#8C8C8C',
        padding: 10,
        borderRadius: 5,
        marginLeft: 10, 
        width: '60%',
        marginTop: 10,
    },
    eventInfoText: {
        color: 'white',
        fontSize: 12,
    },
    redRectangle: {
        position: 'absolute',
        top: 0,
        left: 0,
        right: 0,
        height: 70,
        backgroundColor: '#800000',
    },
    redRectangle1: {
        position: 'absolute',
        bottom: 0,
        left: 0,
        right: 0,
        height: 60,
        backgroundColor: '#800000',
        flexDirection: 'row',
        justifyContent: 'space-around',
        alignItems: 'center',
    },
    bottomRow: {
        flexDirection: 'row',
        justifyContent: 'space-around',
    },
    bottomButton: {
        padding: 10,
    },
    bottomImage: {
        width: 30,
        height: 30,
        marginHorizontal: 30,
    },
});

import { StatusBar } from 'expo-status-bar';
import { StyleSheet, Image, Text, View, ImageBackground, SafeAreaView, TouchableOpacity, TextInput, ScrollView, Alert, Button } from 'react-native';
import { useNavigation, useRoute } from '@react-navigation/native';
import React, { useState } from 'react';
import DateTimePicker from '@react-native-community/datetimepicker';

export default function BookingPage() {
    const navigation = useNavigation();
    const route = useRoute();

    const courtTitle = route.params?.courtTitle || '';
    const prizeText = route.params?.prizeText || '';
    const [prize, setPrize] = useState(prizeText.split(' ')[1]);

    const [date, setDate] = useState(new Date());
    const [mode, setMode] = useState('date');
    const [show, setShow] = useState(false);
    const [selectedTimeSlot, setSelectedTimeSlot] = useState(null);
    const [name, setName] = useState('');
    const [email, setEmail] = useState('');
    const [showTimeSlots, setShowTimeSlots] = useState(false);

    const timeSlots = [
        '6:00 AM - 7:00 AM',
        '7:00 AM - 8:00 AM',
        '8:00 AM - 9:00 AM',
        '9:00 AM - 10:00 AM',
        '10:00 AM - 11:00 AM',
        '6:00 PM - 7:00 PM',
        '7:00 PM - 8:00 PM',
        '8:00 PM - 9:00 PM',
        '9:00 PM - 10:00 PM',
        '10:00 PM - 11:00 PM',
    ];

    const onChange = (event, selectedDate) => {
        if (selectedDate) {
            setDate(selectedDate);
        }
        setShow(false);
    };

    const showMode = (currentMode) => {
        setMode(currentMode);
        setShow(true);
    };

    const showDatepicker = () => {
        showMode('date');
    };

    const showTimepicker = () => {
        showMode('time');
    };

    const handleBooking = async () => {
        try {
            //This check is crucial.  It ensures handleBooking is only called when ready
            if (!selectedTimeSlot || !date) {
                Alert.alert('Error', 'Please select a date and time slot.');
                return;
            }

            const response = await fetch('http://192.168.1.187:3000/bookings', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    courtTitle: courtTitle,
                    prize: prizeText,
                    date: date,
                    timeSlot: selectedTimeSlot,
                    name: name,
                    email: email,
                }),
            });

            console.log("Data being passed to BookingdetailsPage:", {
                courtTitle: courtTitle,
                prizeText: prizeText,
                selectedDate: date,
                selectedTime: selectedTimeSlot,
            });

            // Check for successful response
            if (response.ok) {
                const data = await response.json();
                console.log('Booking successful:', data);

                // Navigate to PaymentDetailsPage with the data
                navigation.navigate('PaymentDetailsPage', {
                    bookingId: data.bookingId, // Assuming your API returns a booking ID
                    courtTitle: courtTitle,
                    prizeText: prizeText,
                    selectedDate: date,
                    selectedTime: selectedTimeSlot,
                    name: name,
                    email: email,
                });
            } else {
                const errorData = await response.json();
                let errorMessage = 'Booking failed. Please try again.';
                if (errorData && errorData.message) {
                    errorMessage = errorData.message;
                }
                Alert.alert('Error', errorMessage);
            }
        } catch (error) {
            console.error('Booking error:', error);
            Alert.alert('Error', 'Booking failed. Please try again.');
        }
    };

    const isBookingEnabled = selectedTimeSlot && date;

    return (
        <SafeAreaView style={styles.container}>
            <ImageBackground source={require('./assets/background.jpg')} style={styles.image}>
                <View style={styles.overlay} />
                <View style={styles.redRectangle} />
                <Image source={require('./assets/logo.png')} style={styles.logo} />

                <View style={styles.formContainer}>
                    <ScrollView contentContainerStyle={styles.formContent}>
                        <View style={styles.content}>
                            <View style={styles.courtInfo}>
                                <Text style={styles.courtTitle}>{courtTitle}</Text>
                                <Text style={styles.prizeText}>{prizeText}</Text>
                            </View>

                            <Text style={styles.chooseDateText}>CHOOSE DATE:</Text>
                            <TouchableOpacity onPress={showDatepicker} style={styles.datePickerButton}>
                                <Text style={styles.datePickerButtonText}>{date.toLocaleDateString()}</Text>
                            </TouchableOpacity>
                            {show && (
                                <DateTimePicker
                                    value={date}
                                    mode={mode}
                                    is24Hour={true}
                                    display="default"
                                    onChange={onChange}
                                />
                            )}

                            <Text style={styles.chooseDateText}>CHOOSE TIME SLOT:</Text>
                            <TouchableOpacity
                                style={[styles.timeSlotButton, selectedTimeSlot && styles.selectedTimeSlot]}
                                onPress={() => setShowTimeSlots(!showTimeSlots)}
                            >
                                <Text style={styles.timeSlotButtonText}>{selectedTimeSlot || 'Select Time Slot'}</Text>
                            </TouchableOpacity>
                            {showTimeSlots && (
                                <View style={styles.timeSlotDropdown}>
                                    {timeSlots.map((timeSlot, index) => (
                                        <TouchableOpacity
                                            key={index}
                                            style={styles.timeSlotDropdownItem}
                                            onPress={() => {
                                                setSelectedTimeSlot(timeSlot);
                                                setShowTimeSlots(false);
                                            }}
                                        >
                                            <Text style={styles.timeSlotDropdownItemText}>{timeSlot}</Text>
                                        </TouchableOpacity>
                                    ))}
                                </View>
                            )}

                            <View style={styles.inputContainer}>
                                <Text style={styles.inputLabel}>Name:</Text>
                                <TextInput
                                    style={styles.input}
                                    value={name}
                                    onChangeText={setName}
                                />
                            </View>

                            <View style={styles.inputContainer}>
                                <Text style={styles.inputLabel}>Email:</Text>
                                <TextInput
                                    style={styles.input}
                                    value={email}
                                    onChangeText={setEmail}
                                    keyboardType="email-address"
                                />
                            </View>

                            <TouchableOpacity style={styles.submitButton} onPress={handleBooking} disabled={!isBookingEnabled}>
                                <Text style={styles.submitButtonText}>Submit Booking</Text>
                            </TouchableOpacity>
                        </View>
                    </ScrollView>
                </View>

                <View style={styles.redRectangle1}>
                    <View style={styles.bottomRow}>
                        <TouchableOpacity style={styles.bottomButton} onPress={() => navigation.goBack()}>
                            <Image source={require('./assets/backspace.png')} style={styles.bottomImage} />
                        </TouchableOpacity>
                        <TouchableOpacity style={styles.bottomButton} onPress={() => navigation.navigate('HomePage')}>
                            <Image source={require('./assets/home.png')} style={styles.bottomImage} />
                        </TouchableOpacity>
                        <TouchableOpacity style={styles.bottomButton} onPress={() => navigation.navigate('Calendar')}>
                            <Image source={require('./assets/calendar.png')} style={styles.bottomImage} />
                        </TouchableOpacity>
                        <TouchableOpacity style={styles.bottomButton} onPress={() => navigation.navigate('ProfilePage')}>
                            <Image source={require('./assets/profile.png')} style={styles.bottomImage} />
                        </TouchableOpacity>
                    </View>
                </View>
            </ImageBackground>
        </SafeAreaView>
    );
};

const styles = StyleSheet.create({
    container: {
        flex: 1,
    },
    formContainer: {
        flex: 1,
        width: '90%',
        backgroundColor: 'white',
        padding: 50,
        borderRadius: 10,
        justifyContent: 'center',
        alignItems: 'center',
        marginTop: 170,
        marginLeft: 25,
    },
    formContent: {
        flexGrow: 1,
        justifyContent: 'center',
        alignItems: 'center',
    },
    content: {
        flex: 1,
    },
    chooseDateText: {
        fontSize: 16,
        fontWeight: 'bold',
        marginTop: 20,
    },
    datePickerButton: {
        backgroundColor: '#800000',
        padding: 10,
        borderRadius: 5,
        marginTop: 10,
        width: 150,
    },
    datePickerButtonText: {
        color: 'white',
        fontSize: 16,
    },
    inputContainer: {
        marginTop: 15,
        width: 300,
    },
    inputLabel: {
        fontSize: 16,
        marginBottom: 5,
    },
    input: {
        borderWidth: 1,
        borderColor: '#ccc',
        padding: 10,
        borderRadius: 5,
    },
    submitButton: {
        backgroundColor: '#800000',
        padding: 15,
        borderRadius: 5,
        alignItems: 'center',
        marginTop: 20,
        width: 200,
    },
    submitButtonText: {
        color: 'white',
        fontSize: 18,
        fontWeight: 'bold',
    },
    redRectangle: {
        position: 'absolute',
        top: 0,
        left: 0,
        right: 0,
        height: 70,
        backgroundColor: '#800000',
    },
    redRectangle1: {
        position: 'absolute',
        bottom: 0,
        left: 0,
        right: 0,
        height: 60,
        backgroundColor: '#800000',
        flexDirection: 'row',
        justifyContent: 'space-around',
        alignItems: 'center',
    },
    bottomRow: {
        flexDirection: 'row',
        justifyContent: 'space-around',
    },
    bottomButton: {
        padding: 10,
    },
    bottomImage: {
        width: 30,
        height: 30,
        marginHorizontal: 30,
    },
    logo: {
        position: 'absolute',
        top: 70,
        left: '40%',
        width: 94,
        height: 98,
        resizeMode: 'contain',
    },
    overlay: {
        position: 'absolute',
        top: 0,
        left: 0,
        right: 0,
        bottom: 0,
        backgroundColor: '#800000',
        opacity: 0.5,
    },
    image: {
        flex: 1,
        resizeMode: 'cover',
        width: '100%',
        height: '100%',
    },
    timeSlotContainer: {
        flexDirection: 'row',
        flexWrap: 'wrap',
        justifyContent: 'center',
        marginTop: 10,
    },
    timeSlotButton: {
        backgroundColor: '#800000',
        padding: 10,
        borderRadius: 5,
        margin: 5,
        width: 150,
    },
    timeSlotButtonText: {
        color: 'white',
        fontSize: 16,
        textAlign: 'center',
    },
    selectedTimeSlot: {
        backgroundColor: '#800000',
    },
    timeSlotDropdown: {
        backgroundColor: 'white',
        borderWidth: 1,
        borderColor: '#ccc',
        borderRadius: 5,
        marginTop: 5,
        width: 150,
        position: 'absolute',
        zIndex: 1,
    },
    timeSlotDropdownItem: {
        padding: 10,
    },
    timeSlotDropdownItemText: {
        fontSize: 16,
    },
    courtInfo: {
        alignItems: 'center',
        marginVertical: 20,
    },
    courtTitle: {
        fontSize: 22,
        fontWeight: 'bold',
    },
    prizeText: {
        fontSize: 18,
        marginVertical: 10,
        color: '#888',
    },
    gcashImage: {
        width: 150,
        height: 50,
        marginTop: 5,
        padding: 10,

        borderColor: '#ccc',
    },
});

import React from 'react';
import { StyleSheet, Text, View, SafeAreaView, TouchableOpacity, ImageBackground, Image } from 'react-native';
import { useNavigation } from '@react-navigation/native';

export default function BookingdetailsPage({ route }) {
    const navigation = useNavigation();

    // Validate params
    const { courtTitle, prizeText, selectedDate, selectedTime } = route.params || {};

    if (!route.params) {
        return (
            <SafeAreaView style={styles.container}>
                <Text style={styles.errorText}>Error: Booking details not provided.</Text>
                <TouchableOpacity
                    style={styles.button}
                    onPress={() => navigation.navigate('HomePage')}
                >
                    <Text style={styles.buttonText}>Back to Home</Text>
                </TouchableOpacity>
            </SafeAreaView>
        );
    }

    return (
        <SafeAreaView style={styles.container}>
            <ImageBackground source={require('./assets/background.jpg')} style={styles.backgroundImage}>
                <View style={styles.overlay}>
                    <View style={styles.whiteContainer}>
                        <Text style={styles.header}>Booking Confirmation</Text>

                        <View style={styles.detailsContainer}>
                            <View style={styles.detailRow}>
                                <Text style={styles.label}>Court:</Text>
                                <Text style={styles.value}>{courtTitle}</Text>
                            </View>

                            <View style={styles.detailRow}>
                                <Text style={styles.label}>Price:</Text>
                                <Text style={styles.value}>{prizeText}</Text>
                            </View>

                            <View style={styles.detailRow}>
                                <Text style={styles.label}>Date:</Text>
                                <Text style={styles.value}>{selectedDate?.toDateString()}</Text>
                            </View>

                            <View style={styles.detailRow}>
                                <Text style={styles.label}>Time:</Text>
                                <Text style={styles.value}>{selectedTime}</Text>
                            </View>
                        </View>

                        <TouchableOpacity
                            style={styles.button}
                            onPress={() => navigation.navigate('HomePage')}
                        >
                            <Text style={styles.buttonText}>Back to Home</Text>
                        </TouchableOpacity>
                    </View>
                </View>
            </ImageBackground>

            <View style={styles.redRectangle1}>
                <View style={styles.bottomRow}>
                    <TouchableOpacity style={styles.bottomButton} onPress={() => navigation.goBack()}>
                        <Image source={require('./assets/backspace.png')} style={styles.bottomImage} />
                    </TouchableOpacity>
                    <TouchableOpacity style={styles.bottomButton} onPress={() => navigation.navigate('HomePage')}>
                        <Image source={require('./assets/home.png')} style={styles.bottomImage} />
                    </TouchableOpacity>
                    <TouchableOpacity style={styles.bottomButton} onPress={() => navigation.navigate('Calendar')}>
                        <Image source={require('./assets/calendar.png')} style={styles.bottomImage} />
                    </TouchableOpacity>
                    <TouchableOpacity style={styles.bottomButton} onPress={() => navigation.navigate('ProfilePage')}>
                        <Image source={require('./assets/profile.png')} style={styles.bottomImage} />
                    </TouchableOpacity>
                </View>
            </View>
        </SafeAreaView>
    );
}

const styles = StyleSheet.create({
    container: {
        flex: 1,
    },
    backgroundImage: {
        flex: 1,
        resizeMode: 'cover',
    },
    overlay: {
        flex: 1,
        justifyContent: 'center',
        alignItems: 'center',
        padding: 20,
        backgroundColor: 'rgba(255, 255, 255, 0.8)',
    },
    whiteContainer: {
        backgroundColor: 'white',
        padding: 20,
        borderRadius: 10,
        width: '80%',
    },
    header: {
        fontSize: 24,
        fontWeight: 'bold',
        textAlign: 'center',
        marginBottom: 20,
        color: '#800000',
    },
    detailsContainer: {
        marginVertical: 20,
    },
    detailRow: {
        flexDirection: 'row',
        justifyContent: 'space-between',
        marginBottom: 15,
        paddingBottom: 10,
        borderBottomWidth: 1,
        borderBottomColor: '#eee',
    },
    label: {
        fontSize: 16,
        fontWeight: 'bold',
        color: '#333',
    },
    value: {
        fontSize: 16,
        color: '#666',
    },
    button: {
        backgroundColor: '#800000',
        padding: 15,
        borderRadius: 5,
        marginTop: 20,
    },
    buttonText: {
        color: 'white',
        textAlign: 'center',
        fontSize: 16,
        fontWeight: 'bold',
    },
    redRectangle1: {
        position: 'absolute',
        bottom: 0,
        left: 0,
        right: 0,
        height: 60,
        backgroundColor: '#800000',
        flexDirection: 'row',
        justifyContent: 'space-around',
        alignItems: 'center',
    },
    bottomRow: {
        flexDirection: 'row',
        justifyContent: 'space-around',
    },
    bottomButton: {
        padding: 10,
    },
    bottomImage: {
        width: 30,
        height: 30,
        marginHorizontal: 30,
    },
    errorText: {
        color: 'red',
        fontSize: 18,
        textAlign: 'center',
        marginVertical: 20,
    },
});

// ... (Your existing code: App.js, HomePage, RegisterPage, LoginPage, etc.) ...

// CourtDetails.js (New component)
function CourtDetails({ route }) {
  const navigation = useNavigation();
  const courtId = route.params.courtId; // Access courtId from navigation params

  // Example: Display court details based on courtId
  let courtName, courtImage, courtDescription;
  if (courtId === 'court1') {
    courtName = 'Court 1';
    courtImage = require('./assets/court1.jpg');
    courtDescription = 'Indoor Basketball Court';
  } else if (courtId === 'court2') {
    courtName = 'Court 2';
    courtImage = require('./assets/court2.jpg');
    courtDescription = 'Indoor Tennis Court';
  }

  return (
    <SafeAreaView style={styles.container}>
      <Image source={courtImage} style={styles.courtImage} />
      <Text style={styles.courtName}>{courtName}</Text>
      <Text style={styles.courtDescription}>{courtDescription}</Text>
      <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('FacilityPage')}>
        <Text style={styles.buttonText}>Back to Facilities</Text>
      </TouchableOpacity>
    </SafeAreaView>
  );
}

// ... (Your existing styles) ... 

const styles = StyleSheet.create({
  // ... (Your existing styles) ...
  courtImage: {
    width: '100%',
    height: 200,
    resizeMode: 'cover',
    marginBottom: 20,
  },
  courtName: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 10,
  },
  courtDescription: {
    fontSize: 16,
    marginBottom: 20,
  },
});

import { StatusBar } from 'expo-status-bar';
import { StyleSheet, Image, Text, View, ImageBackground, SafeAreaView, TouchableOpacity, TextInput, ScrollView } from 'react-native';
import { useNavigation } from '@react-navigation/native';

export default function FacilityPage() {
  const navigation = useNavigation();
  return (
    <SafeAreaView style={styles.container}>
     
      <ImageBackground source={require('./assets/background.jpg')} style={styles.image}>
        <View style={styles.overlay} />
        <View style={styles.redRectangle} />
        <Text style={styles.text}>FEATURED COURTS</Text>
        <ScrollView contentContainerStyle={styles.scrollViewContent}>
          <View style={styles.courtContainer}>
            <Image source={require('./assets/basketball.png')} style={styles.courtImage} />
            <Text style={styles.courtTitle}>Basketball Court</Text>
            <View style={styles.buttonRow}>
              <TouchableOpacity style={styles.bookButton} onPress={() => navigation.navigate('BasketballPage')}>
                <Text style={styles.buttonText}>BOOK NOW</Text>
              </TouchableOpacity>
              <View style={styles.eventInfo}>
                <Text style={styles.eventInfoText}>Book This For Your Event</Text>
              </View>
            </View>
          </View>
          <View style={styles.courtContainer}>
            <Image source={require('./assets/badminton.png')} style={styles.courtImage} />
            <Text style={styles.courtTitle}>Badminton Court</Text>
            <View style={styles.buttonRow}>
              <TouchableOpacity style={styles.bookButton} onPress={() => navigation.navigate('BadmintonPage')}>
                <Text style={styles.buttonText}>BOOK NOW</Text>
              </TouchableOpacity>
              <View style={styles.eventInfo}>
                <Text style={styles.eventInfoText}>Book This For Your Event</Text>
              </View>
            </View>
          </View>
          <View style={styles.courtContainer}>
            <Image source={require('./assets/volleyball.png')} style={styles.courtImage} />
            <Text style={styles.courtTitle}>Volleyball Court</Text>
            <View style={styles.buttonRow}>
              <TouchableOpacity style={styles.bookButton} onPress={() => navigation.navigate('VolleyballPage')}>
                <Text style={styles.buttonText}>BOOK NOW</Text>
              </TouchableOpacity>
              <View style={styles.eventInfo}>
                <Text style={styles.eventInfoText}>Book This For Your Event</Text>
              </View>
            </View>
          </View>
        </ScrollView>
        <View style={styles.redRectangle1}>
          <View style={styles.bottomRow}>
            <TouchableOpacity style={styles.bottomButton} onPress={() => navigation.navigate('HomePage')}>
              <Image source={require('./assets/backspace.png')} style={styles.bottomImage} />
            </TouchableOpacity>
            <TouchableOpacity style={styles.bottomButton} onPress={() => navigation.navigate('HomePage')}>
              <Image source={require('./assets/home.png')} style={styles.bottomImage} />
            </TouchableOpacity>
            <TouchableOpacity style={styles.bottomButton} onPress={() => navigation.navigate('Calendar')}>
              <Image source={require('./assets/calendar.png')} style={styles.bottomImage} />
            </TouchableOpacity>
            <TouchableOpacity style={styles.bottomButton} onPress={() => navigation.navigate('ProfilePage')}>
              <Image source={require('./assets/profile.png')} style={styles.bottomImage} />
            </TouchableOpacity>
          </View>
        </View>
      </ImageBackground>
    </SafeAreaView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
  },
  scrollViewContent: {
    alignItems: 'center',
    padding: 20,
  },
  courtContainer: {
    width: '90%',
    backgroundColor: 'rgba(255, 255, 255, 0.8)',
    padding: 20,
    borderRadius: 10,
    marginBottom: 40,
    alignItems: 'center',
  },
  courtImage: {
    width: 316,
    height: 117,
    marginBottom: 5,
  },
  courtTitle: {
    fontSize: 12,
    fontWeight: 'bold',
    marginBottom: 5,
  },
  buttonRow: {
    flexDirection: 'row', 
    alignItems: 'center', 
  },
  bookButton: {
    backgroundColor: '#800000',
    padding: 10,
    borderRadius: 5,
    marginTop: 10,
    width: '35%',
  },
  buttonText: {
    color: 'white',
    fontSize: 12,
    textAlign: 'center',
  },
  image: {
    flex: 1,
    resizeMode: 'cover',
    width: '100%',
    height: '100%',
  },
  overlay: {
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    bottom: 0,
    backgroundColor: '#800000',
    opacity: 0.5,
  },
  text: {
    color: 'white',
    fontSize: 20,
    textAlign: 'center',
    left: 5,
    marginTop: '20%',
  },
  eventInfo: {
    backgroundColor: '#8C8C8C',
    padding: 10,
    borderRadius: 5,
    marginLeft: 10, 
    width: '60%',
    marginTop: 10,
  },
  eventInfoText: {
    color: 'white',
    fontSize: 12,
  },
  redRectangle: {
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    height: 70,
    backgroundColor: '#800000',
  },
  redRectangle1: {
    position: 'absolute',
    bottom: 0,
    left: 0,
    right: 0,
    height: 60,
    backgroundColor: '#800000',
    flexDirection: 'row',
    justifyContent: 'space-around',
    alignItems: 'center',
  },
  bottomRow: {
    flexDirection: 'row',
    justifyContent: 'space-around',
  },
  bottomButton: {
    padding: 10,
  },
  bottomImage: {
    width: 30,
    height: 30,
    marginHorizontal: 30,
  },
});

import { StatusBar } from 'expo-status-bar';
import { StyleSheet, Image, Text, View, ImageBackground, SafeAreaView, TouchableOpacity, TextInput } from 'react-native';
import { useNavigation } from '@react-navigation/native';

export default function HomePage() {
  const navigation = useNavigation(); 
  return (
    <SafeAreaView style={styles.container}>
      <ImageBackground source={require('./assets/background.jpg')} style={styles.image}>
        <View style={styles.overlay} />
        <Image source={require('./assets/logo.png')} style={styles.logo} />
        <View style={styles.textContainer}>
          <Text style={styles.text}>COVERED COURT RESERVATION</Text>
        </View>
        <View style={styles.subTextContainer}>
          <Text style={styles.subText}>WELCOME</Text>
        </View>
        <View style={styles.subTextContainer2}>
          <Text style={styles.subText2}>At Covered Court Reservation,
            We Believe Everyone Should Have Access To Quality
            Indoor Courts. Our User-Friendly Online Reservation System
            Puts You In Control Of Your Game Time, Allowing You To Choose
            The Perfect Date And Time For Your Next Game Or Event.
          </Text>
        </View>
        <TouchableOpacity style={styles.button} onPress={() => {
          navigation.navigate('FacilityPage'); 
        }}>
          <Text style={styles.buttonText}>BOOK NOW</Text>
        </TouchableOpacity>
        <View style={styles.redRectangle1}>
          <View style={styles.bottomRow}>
            <TouchableOpacity style={styles.bottomButton} onPress={() => navigation.navigate('HomePage')}>
              <Image source={require('./assets/backspace.png')} style={styles.bottomImage} />
            </TouchableOpacity>
            <TouchableOpacity style={styles.bottomButton} onPress={() => navigation.navigate('HomePage')}>
              <Image source={require('./assets/home.png')} style={styles.bottomImage} />
            </TouchableOpacity>
            <TouchableOpacity style={styles.bottomButton} onPress={() => navigation.navigate('Calendar')}>
              <Image source={require('./assets/calendar.png')} style={styles.bottomImage} />
            </TouchableOpacity>
            <TouchableOpacity style={styles.bottomButton} onPress={() => navigation.navigate('ProfilePage')}>
              <Image source={require('./assets/profile.png')} style={styles.bottomImage} />
            </TouchableOpacity>
          </View>
        </View>
      </ImageBackground>
    </SafeAreaView>
  );
}

const styles = StyleSheet.create({
  
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
  },
  image: {
    flex: 1,
    resizeMode: 'cover',
    width: '100%',
    height: '100%',
  },
  logo: {
    position: 'absolute',
    top: 149,
    left: '40%',
    width: 94,
    height: 98,
    resizeMode: 'contain',
  },
  textContainer: {
    position: 'absolute',
    top: '25%',
    
    textAlign: 'center',
    
  },
  text: {
    color: 'white',
    fontSize: 32,
    textAlign: 'center',
    marginTop: '10%',
    marginLeft: 65,
    marginRight: 10,
  },
  subTextContainer: {
    position: 'absolute',
    top: '45%',
    textAlign: 'center',
  },
  subText: {
    color: 'white',
    fontSize: 24,
    textAlign: 'center',
    left: 140,
  },
  subTextContainer2: {
    position: 'absolute',
    top: '50%',
  },
  subText2: {
    color: 'white',
    fontSize: 12,
    textAlign: 'center',
    marginLeft: 20,
    marginRight: 20,

  },
  overlay: {
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    bottom: 0,
    backgroundColor: '#800000',
    opacity: 0.5,
  },
  button: {
    position: 'absolute',
    bottom: '15%',
    left: '15%',
    backgroundColor: '#800000',
    padding: 15,
    borderRadius: 5,
    width: '70%',
    height: '10%',
  },
  buttonText: {
    color: 'white',
    fontSize: 26,
    textAlign: 'center',
    top: 5,
  },
  redRectangle1: {
    position: 'absolute',
    bottom: 0,
    left: 0,
    right: 0,
    height: 60,
    backgroundColor: '#800000',
    flexDirection: 'row',
    justifyContent: 'space-around',
    alignItems: 'center',
  },
  bottomRow: {
    flexDirection: 'row',
    justifyContent: 'space-around',
  },
  bottomButton: {
    padding: 10,
  },
  bottomImage: {
    width: 30,
    height: 30,
    marginHorizontal: 30,
  },
});

import React, { useState, useEffect } from 'react';
import { StyleSheet, Image, Text, View, ImageBackground, SafeAreaView, TouchableOpacity, TextInput, Alert } from 'react-native';
import { useNavigation } from '@react-navigation/native';
import AsyncStorage from '@react-native-async-storage/async-storage';
import axios from 'axios';
import { StatusBar } from 'expo-status-bar';

export default function LoginPage() {
  const navigation = useNavigation();
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [errorMessage, setErrorMessage] = useState('');
  const [loginMessage, setLoginMessage] = useState('');
  const [isLoading, setIsLoading] = useState(false);

  useEffect(() => {
    // Check for existing token on component mount
    const checkToken = async () => {
      try {
        const token = await AsyncStorage.getItem('token');
        if (token) {
          navigation.navigate('HomePage');
        }
      } catch (error) {
        console.error("Error checking token:", error);
      }
    };
    checkToken();
  }, [navigation]);

  const handleLogin = async () => {
    setErrorMessage('');
    setLoginMessage('');
    setIsLoading(true);

    if (!email || !password) {
      setErrorMessage('Please enter both email and password.');
      setIsLoading(false);
      return;
    }

    try {
      const response = await axios.post('http://192.168.1.187:3000/login', {
        email,
        password
      });

      if (response.data && response.data.accessToken) {
        await AsyncStorage.setItem('token', response.data.accessToken);
        setLoginMessage('Successfully Logged In!');
        setTimeout(() => {
          navigation.navigate('HomePage');
        }, 1000);
      } else {
        setErrorMessage(response.data.message || 'Invalid response from server. Please try again.');
      }
    } catch (error) {
      if (axios.isAxiosError(error)) {
        if (error.code === 'ECONNABORTED') {
          setErrorMessage('The request timed out. Please try again.');
        } else if (!error.response) {
          setErrorMessage('Network error. Please check your internet connection.');
        } else if (error.response.status === 401) {
          setErrorMessage('Invalid email or password. Please try again.');
        } else {
          setErrorMessage(`Server error (${error.response.status}): ${error.response?.data?.message || 'Unknown error'}`);
        }
      } else {
        setErrorMessage('An unexpected error occurred. Please try again later.');
      }
      console.error('Error during login:', error);
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <SafeAreaView style={styles.container}>
      <ImageBackground source={require('./assets/background.jpg')} style={styles.image}>
        <View style={styles.overlay} />
        <Image source={require('./assets/logo.png')} style={styles.logo} />
        <View style={styles.formContainer}>
          {errorMessage ? (
            <Text style={styles.errorMessage}>{errorMessage}</Text>
          ) : loginMessage ? (
            <Text style={styles.loginMessage}>{loginMessage}</Text>
          ) : null}
          <View style={styles.header}>
            <Text style={styles.headerText}>Log In</Text>
          </View>
          <View style={styles.inputContainer}>
            <Image source={require('./assets/profileicon.png')} style={styles.profileIcon} />
            <TextInput
              style={styles.input}
              placeholder="Enter your email"
              keyboardType="email-address"
              value={email}
              onChangeText={setEmail}
            />
          </View>
          <View style={styles.inputContainer}>
            <Image source={require('./assets/passwordicon.png')} style={styles.passwordIcon} />
            <TextInput
              style={styles.input}
              placeholder="Enter your password"
              secureTextEntry={true}
              value={password}
              onChangeText={setPassword}
            />
          </View>
          <TouchableOpacity style={styles.forgotPasswordLink} onPress={() => {
            navigation.navigate('HomePage');
          }}>
            <Text style={styles.forgotPasswordLinkText}>Forgot password?</Text>
          </TouchableOpacity>
          <TouchableOpacity
            style={[styles.submitButton, isLoading && styles.disabledButton]}
            onPress={handleLogin}
            disabled={isLoading}
          >
            <Text style={styles.submitButtonText}>
              {isLoading ? 'Logging in...' : 'Login'}
            </Text>
          </TouchableOpacity>
        </View>
      </ImageBackground>
      <StatusBar style="auto" />
    </SafeAreaView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
  },
  image: {
    flex: 1,
    resizeMode: 'cover',
    width: '100%',
    height: '100%',
  },
  logo: {
    position: 'absolute',
    top: '5%',
    left: '5%',
    width: '15%',
    height: '10%',
    resizeMode: 'contain',
  },
  overlay: {
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    bottom: 0,
    backgroundColor: '#800000',
    opacity: 0.5,
  },
  formContainer: {
    marginTop: 20,
    width: '80%',
    backgroundColor: 'white',
    padding: 20,
    borderRadius: 10,
    alignItems: 'center',
    justifyContent: 'center',
    position: 'absolute',
    top: '30%',
    left: '10%',
  },
  input: {
    borderWidth: 1,
    borderColor: 'gray',
    padding: 10,
    marginBottom: 10,
    borderRadius: 5,
    width: '80%',
  },
  submitButton: {
    backgroundColor: '#800000',
    padding: 10,
    borderRadius: 5,
    width: '80%',
    marginTop: 20,
  },
  submitButtonText: {
    color: 'white',
    textAlign: 'center',
  },
  disabledButton: {
    backgroundColor: '#cccccc',
  },
  inputContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    borderWidth: 1,
    borderColor: 'gray',
    padding: 10,
    marginBottom: 10,
    borderRadius: 5,
    width: '100%',
  },
  profileIcon: {
    width: 50,
    height: 50,
    marginRight: 10,
  },
  passwordIcon: {
    width: 50,
    height: 50,
    marginRight: 10,
  },
  forgotPasswordLink: {
    marginBottom: 20,
    marginTop: 20,
    textAlign: 'center',
  },
  forgotPasswordLinkText: {
    color: '#800000',
    textDecorationLine: 'underline',
    fontSize: 14,
  },
  header: {
    height: 70,
    marginBottom: 20,
    borderRadius: 10,
    alignItems: 'center',
    justifyContent: 'center',
    width: '100%',
  },
  headerText: {
    color: '#800000',
    fontSize: 50,
    fontWeight: 'bold',
  },
  errorMessage: {
    color: 'red',
    marginBottom: 10,
    textAlign: 'center',
  },
  loginMessage: {
    color: 'green',
    marginBottom: 10,
    textAlign: 'center',
  },
});

import React, { useState } from 'react';
import { StyleSheet, Text, View, SafeAreaView, TouchableOpacity, Alert, ActivityIndicator } from 'react-native';
import { useNavigation } from '@react-navigation/native';
import { WebView } from 'react-native-webview';
import axios from 'axios';

export default function PaymentDetailsPage({ route }) {
    const navigation = useNavigation();
    const { bookingId, courtTitle, prizeText, selectedDate, selectedTime, name, email } = route.params;
    const [approvalUrl, setApprovalUrl] = useState('');
    const [showWebView, setShowWebView] = useState(false);
    const [isLoading, setIsLoading] = useState(false);

    const handlePayment = async () => {
        try {
            setIsLoading(true);

            // Extract and validate amount
            const numericAmount = parseFloat(prizeText.replace(/[^0-9.]/g, '')); // Remove any non-numeric characters
            if (isNaN(numericAmount) || numericAmount <= 0) {
                Alert.alert('Invalid Amount', 'The price must be a valid number.');
                setIsLoading(false);
                return;
            }

            // Call backend to create a PayPal order
            const response = await axios.post('http://192.168.1.187:3000/create-paypal-order', {
                amount: numericAmount.toFixed(2), // Ensure two decimal places
            });

            const { approvalUrl } = response.data;

            if (approvalUrl) {
                setApprovalUrl(approvalUrl);
                setShowWebView(true);
            } else {
                Alert.alert('Error', 'Unable to generate PayPal approval URL.');
            }
        } catch (error) {
            console.error('Error creating PayPal order:', error.response?.data || error.message);
            Alert.alert('Error', 'Failed to initiate payment. Please try again later.');
        } finally {
            setIsLoading(false);
        }
    };

    const handleWebViewNavigationStateChange = async (navState) => {
        const { url } = navState;

        if (url.includes('success')) {
            setShowWebView(false);
            try {
                // Call backend to store payment details
                await axios.post('http://192.168.1.187:3000/api/payment/success', {
                    court: courtTitle,
                    date: selectedDate,
                    time: selectedTime,
                    price: parseFloat(prizeText.replace(/[^0-9.]/g, '')).toFixed(2),
                    username: name,
                    bookingID: bookingId,
                });

                Alert.alert('Payment Successful!', 'Your booking has been confirmed.');
                navigation.navigate('HomePage'); // Navigate to HomePage
            } catch (error) {
                console.error('Error storing payment:', error.response?.data || error.message);
                Alert.alert('Error', 'Payment successful, but failed to save booking details.');
            }
        } else if (url.includes('cancel')) {
            setShowWebView(false);
            Alert.alert('Payment Cancelled', 'The payment was not completed.');
        }
    };

    return (
        <SafeAreaView style={styles.container}>
            {showWebView ? (
                <View style={styles.webViewContainer}>
                    {isLoading && <ActivityIndicator size="large" color="#007bff" style={styles.loader} />}
                    <WebView
                        source={{ uri: approvalUrl }}
                        onNavigationStateChange={handleWebViewNavigationStateChange}
                        onLoadStart={() => setIsLoading(true)}
                        onLoadEnd={() => setIsLoading(false)}
                    />
                </View>
            ) : (
                <View style={styles.contentContainer}>
                    <Text style={styles.header}>Payment Details</Text>

                    <View style={styles.detailsContainer}>
                        <DetailRow label="Booking ID:" value={bookingId} />
                        <DetailRow label="Court:" value={courtTitle} />
                        <DetailRow label="Price:" value={prizeText} />
                        <DetailRow label="Date:" value={selectedDate.toDateString()} />
                        <DetailRow label="Time:" value={selectedTime} />
                        <DetailRow label="Name:" value={name} />
                        <DetailRow label="Email:" value={email} />
                    </View>

                    <TouchableOpacity style={styles.button} onPress={handlePayment} disabled={isLoading}>
                        <Text style={styles.buttonText}>Proceed to Payment</Text>
                    </TouchableOpacity>
                </View>
            )}
        </SafeAreaView>
    );
}

const DetailRow = ({ label, value }) => (
    <View style={styles.detailRow}>
        <Text style={styles.label}>{label}</Text>
        <Text style={styles.value}>{value}</Text>
    </View>
);

const styles = StyleSheet.create({
    container: { flex: 1, alignItems: 'center', justifyContent: 'center' },
    contentContainer: { backgroundColor: 'white', padding: 20, borderRadius: 10, width: '80%', maxWidth: 400 },
    header: { fontSize: 24, fontWeight: 'bold', marginBottom: 20, textAlign: 'center' },
    detailsContainer: { marginBottom: 20 },
    detailRow: { flexDirection: 'row', justifyContent: 'space-between', marginBottom: 10 },
    label: { fontWeight: 'bold' },
    value: { fontSize: 16 },
    button: { backgroundColor: '#007bff', padding: 15, borderRadius: 5, alignItems: 'center' },
    buttonText: { color: 'white', fontSize: 18, fontWeight: 'bold' },
    webViewContainer: { flex: 1, width: '100%' },
    loader: { position: 'absolute', top: '50%', left: '50%', transform: [{ translateX: -50 }, { translateY: -50 }], zIndex: 1 },
});


import React from 'react';
import { SafeAreaView, StyleSheet } from 'react-native';
import { WebView } from 'react-native-webview';

export default function PayPalPaymentPage({ route, navigation }) {
    const { returnURL, cancelURL, sandboxURL } = route.params;

    const handleNavigationStateChange = (event) => {
        if (event.url === returnURL) {
            // Payment successful
            navigation.navigate('BookingdetailsPage', { ...route.params });
        } else if (event.url === cancelURL) {
            // Payment canceled
            navigation.goBack();
        }
    };

    return (
        <SafeAreaView style={styles.container}>
            <WebView
                source={{ uri: sandboxURL }}
                onNavigationStateChange={handleNavigationStateChange}
                style={{ flex: 1 }}
            />
        </SafeAreaView>
    );
}

const styles = StyleSheet.create({
    container: {
        flex: 1,
    },
});

import React, { useState, useEffect } from 'react';
import { StyleSheet, Image, Text, View, SafeAreaView, TouchableOpacity, Alert } from 'react-native';
import { useNavigation } from '@react-navigation/native';
import * as ImagePicker from 'expo-image-picker';
import AsyncStorage from '@react-native-async-storage/async-storage';
import axios from 'axios';
import { StatusBar } from 'expo-status-bar';

export default function ProfilePage() {
  const navigation = useNavigation();
  const [imageUri, setImageUri] = useState(null);
  const [fullName, setFullName] = useState('');
  const [email, setEmail] = useState('');
  const [isLoading, setIsLoading] = useState(true); // Add loading state

  const pickImage = async () => {
    let result = await ImagePicker.launchImageLibraryAsync({
      mediaTypes: ImagePicker.MediaTypeOptions.Images,
      allowsEditing: true,
      aspect: [4, 3],
      quality: 1,
    });

    if (!result.canceled) {
      setImageUri(result.assets[0].uri);
    }
  };

  useEffect(() => {
    const fetchUserData = async () => {
      try {
        const token = await AsyncStorage.getItem('token');
        if (token) {
          
          const response = await axios.get('http://192.168.1.187:3000/profile', { // CORRECTED ENDPOINT
            headers: {
              Authorization: `Bearer ${token}`,
            },
          });

          if (response.status === 200 && response.data) {
            setFullName(response.data.fullName);
            setEmail(response.data.email);
          } else {
            Alert.alert('Error', response.data?.message || 'Failed to fetch user data.');
          }
        } else {
          Alert.alert('Error', 'You are not logged in. Please log in and try again.');
          navigation.navigate('LoginPage');
        }
      } catch (error) {
        console.error('Error fetching user data:', error);
        Alert.alert('Error', 'An error occurred while fetching user data. Please try again later.');
      } finally {
        setIsLoading(false); // Set loading to false
      }
    };

    fetchUserData();
  }, []); // Removed navigation dependency

  const handleLogout = async () => {
    try {
      await AsyncStorage.removeItem('token');
      navigation.navigate('LoginPage');
    } catch (error) {
      console.error('Error logging out:', error);
      Alert.alert('Error', 'An error occurred while logging out.');
    }
  };

  return (
    <SafeAreaView style={styles.container}>
      <StatusBar style="auto" />
      <View style={styles.profileContainer}>
        {imageUri ? (
          <Image source={{ uri: imageUri }} style={styles.profileIcon} />
        ) : (
          <TouchableOpacity onPress={pickImage} style={styles.profileIconContainer}>
            <Image source={require('./assets/profileicon.png')} style={styles.profileIcon} />
          </TouchableOpacity>
        )}
        <Text style={styles.profileName}>Name: {fullName || ''}</Text>
        <Text style={styles.profileEmail}>Email: {email || ''}</Text>
      </View>
      <TouchableOpacity style={styles.infoContainer} onPress={() => navigation.navigate('BookingdetailsPage')}>
        <Text style={styles.infoText}>BOOKING</Text>
      </TouchableOpacity>
      <TouchableOpacity style={styles.editButton} onPress={() => navigation.navigate('EditProfilePage')}>
        <Text style={styles.editButtonText}>Edit Profile</Text>
      </TouchableOpacity>
      <TouchableOpacity style={styles.logoutButton} onPress={handleLogout}>
        <Text style={styles.logoutButtonText}>Logout</Text>
      </TouchableOpacity>
      <View style={styles.redRectangle1}>
        <View style={styles.bottomRow}>
          <TouchableOpacity style={styles.bottomButton} onPress={() => navigation.navigate('HomePage')}>
            <Image source={require('./assets/backspace.png')} style={styles.bottomImage} />
          </TouchableOpacity>
          <TouchableOpacity style={styles.bottomButton} onPress={() => navigation.navigate('HomePage')}>
            <Image source={require('./assets/home.png')} style={styles.bottomImage} />
          </TouchableOpacity>
          <TouchableOpacity style={styles.bottomButton} onPress={() => navigation.navigate('Calendar')}>
            <Image source={require('./assets/calendar.png')} style={styles.bottomImage} />
          </TouchableOpacity>
          <TouchableOpacity style={styles.bottomButton} onPress={() => navigation.navigate('ProfilePage')}>
            <Image source={require('./assets/profile.png')} style={styles.bottomImage} />
          </TouchableOpacity>
        </View>
      </View>
    </SafeAreaView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    marginTop: 100,
    backgroundColor: '#f0f0f0',
  },
  profileContainer: {
    marginLeft: 20,
  },
  profileIconContainer: {
    width: 100,
    height: 100,
    borderRadius: 50,
    overflow: 'hidden',
    alignItems: 'center',
    justifyContent: 'center',
  },
  profileIcon: {
    width: 100,
    height: 100,
    borderRadius: 50,
  },
  profileName: {
    fontSize: 18,
    fontWeight: 'bold',
    marginTop: 10,
    color: '#333',
  },
  profileEmail: {
    fontSize: 16,
    marginTop: 5,
    color: '#666',
  },
  infoContainer: {
    marginTop: 10,
    marginLeft: 10,
    width: '80%',
    padding: 15,
    backgroundColor: '#f0f0f0',
    borderRadius: 5,
  },
  infoText: {
    fontSize: 18,
    color: '#333',
    marginBottom: 5,
  },
  editButton: {
    marginTop: '10%',
    backgroundColor: '#800000',
    borderRadius: 5,
    width: '35%',
    height: '5%',
    alignItems: 'center',
    justifyContent: 'center',
    marginLeft: 20,
  },
  editButtonText: {
    color: 'white',
    fontSize: 20,
  },
  logoutButton: {
    marginTop: '5%',
    backgroundColor: '#800000',
    borderRadius: 5,
    width: '30%',
    height: '5%',
    alignItems: 'center',
    justifyContent: 'center',
    marginLeft: 20,
  },
  logoutButtonText: {
    color: 'white',
    fontSize: 20,
  },
  redRectangle1: {
    position: 'absolute',
    bottom: 0,
    left: 0,
    right: 0,
    height: 60,
    backgroundColor: '#800000',
    flexDirection: 'row',
    justifyContent: 'space-around',
    alignItems: 'center',
  },
  bottomRow: {
    flexDirection: 'row',
    justifyContent: 'space-around',
  },
  bottomButton: {
    padding: 10,
  },
  bottomImage: {
    width: 30,
    height: 30,
    marginHorizontal: 30,
  },
});

import React, { useState } from 'react';
import { StyleSheet, Image, Text, View, SafeAreaView, TouchableOpacity, TextInput, Alert, ScrollView, ActivityIndicator } from 'react-native';
import { useNavigation } from '@react-navigation/native';
import axios from 'axios';

export default function RegisterPage() {
  const navigation = useNavigation();
  const [fullName, setFullName] = useState('');
  const [username, setUsername] = useState('');
  const [email, setEmail] = useState('');
  const [phoneNumber, setPhoneNumber] = useState('');
  const [password, setPassword] = useState('');
  const [confirmPassword, setConfirmPassword] = useState('');
  const [gender, setGender] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState('');

  const handleRegister = async () => {
    if (password !== confirmPassword) {
      setError('Passwords do not match');
      return;
    }
    if (!fullName || !username || !email || !phoneNumber || !password || !confirmPassword || !gender) {
      setError('Please complete all the details');
      return;
    }

    setIsLoading(true);
    setError('');

    try {
      const response = await axios.post('http://192.168.1.187:3000/register', {
        fullName,
        username,
        email,
        phoneNumber,
        password,
        gender
      });

      if (response.status === 201) {
        // Redirect to LoginPage after successful registration
        Alert.alert('Success', 'Registration successful', [
          { text: 'OK', onPress: () => navigation.navigate('LoginPage') }
        ]);
        // Reset the form fields
        resetForm();
      } else {
        handleErrorResponse(response.data);
      }
    } catch (error) {
      console.error('Registration error:', error);
      setError('Network request failed. Please check your connection and try again.');
    } finally {
      setIsLoading(false);
    }
  };

  const handleErrorResponse = (data) => {
    if (data.message) {
      if (data.message.includes('email already exists')) {
        setError('Email already exists. Please choose a different email.');
      } else {
        setError(data.message);
      }
    } else {
      setError('Registration failed. Please try again.');
    }
  };

  const resetForm = () => {
    setFullName('');
    setUsername('');
    setEmail('');
    setPhoneNumber('');
    setPassword('');
    setConfirmPassword('');
    setGender('');
  };

  return (
    <SafeAreaView style={styles.container}>
      <ScrollView contentContainerStyle={styles.scrollViewContent}>
        <View style={styles.redRectangle} />
        <Image source={require('./assets/logo.png')} style={styles.secondLogo} />
        <View style={styles.formContainer}>
          <Text style={styles.formLabel}>Full Name</Text>
          <TextInput
            style={styles.input}
            placeholder="Enter your full name"
            onChangeText={setFullName}
            value={fullName}
          />

          <Text style={styles.formLabel}>Username</Text>
          <TextInput
            style={styles.input}
            placeholder="Enter your username"
            onChangeText={setUsername}
            value={username}
          />

          <Text style={styles.formLabel}>Email</Text>
          <TextInput
            style={styles.input}
            placeholder="Enter your email"
            keyboardType="email-address"
            onChangeText={setEmail}
            value={email}
          />

          <Text style={styles.formLabel}>Phone Number</Text>
          <TextInput
            style={styles.input}
            placeholder="Enter your phone number"
            keyboardType="phone-pad"
            onChangeText={setPhoneNumber}
            value={phoneNumber}
          />

          <Text style={styles.formLabel}>Password</Text>
          <TextInput
            style={styles.input}
            placeholder="Enter your password"
            secureTextEntry={true}
            onChangeText={setPassword}
            value={password}
          />

          <Text style={styles.formLabel}>Confirm Password</Text>
          <TextInput
            style={styles.input}
            placeholder="Confirm your password"
            secureTextEntry={true}
            onChangeText={setConfirmPassword}
            value={confirmPassword}
          />

          <Text style={styles.formLabel}>Gender</Text>
          <TextInput
            style={styles.input}
            placeholder="Enter your gender"
            onChangeText={setGender}
            value={gender}
          />

          {error ? <Text style={styles.errorText}>{error}</Text> : null}

          <TouchableOpacity
            style={[styles.submitButton, isLoading && styles.disabledButton]}
            onPress={handleRegister}
            disabled={isLoading}
          >
            {isLoading ? (
              <ActivityIndicator color="white" />
            ) : (
              <Text style={styles.submitButtonText}>Register</Text>
            )}
          </TouchableOpacity>
          <TouchableOpacity
            style={styles.loginLink}
            onPress={() => navigation.navigate('LoginPage')}
          >
            <Text style={styles.loginLinkText}>Already have an account? Log in</Text>
          </TouchableOpacity>
        </View>
      </ScrollView>
    </SafeAreaView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#f5f5f5',
  },
  scrollViewContent: {
    flexGrow: 1,
    justifyContent: 'center',
    alignItems: 'center',
    paddingVertical: 20,
  },
  redRectangle: {
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    height: 70,
    backgroundColor: '#800000',
  },
  secondLogo: {
    width: 80,
    height: 80,
    resizeMode: 'contain',
    marginBottom: 5,
    marginTop: 50,
  },
  formContainer: {
    width: '90%',
    backgroundColor: 'white',
    padding: 20,
    borderRadius: 10,
    shadowColor: "#000",
    shadowOffset: {
      width: 0,
      height: 2,
    },
    shadowOpacity: 0.25,
    shadowRadius: 3.84,
    elevation: 5,
  },
  formLabel: {
    fontSize: 16,
    fontWeight: 'bold',
    marginBottom: 5,
    color: '#333',
  },
  input: {
    borderWidth: 1,
    borderColor: '#ddd',
    padding: 10,
    marginBottom: 15,
    borderRadius: 5,
    fontSize: 16,
  },
  submitButton: {
    backgroundColor: '#800000',
    padding: 15,
    borderRadius: 5,
    alignItems: 'center',
    marginTop: 10,
  },
  disabledButton: {
    backgroundColor: '#cccccc',
  },
  submitButtonText: {
    color: 'white',
    fontSize: 18,
    fontWeight: 'bold',
  },
  loginLink: {
    marginTop: 20,
    alignItems: 'center',
  },
  loginLinkText: {
    color: '#800000',
    fontSize: 16,
    textDecorationLine: 'underline',
  },
  errorText: {
    color: 'red',
    marginBottom: 10,
    fontSize: 14,
  },
});

import { StatusBar } from 'expo-status-bar';
import { StyleSheet, Image, Text, View, ImageBackground, SafeAreaView, TouchableOpacity, TextInput, ScrollView } from 'react-native';
import { useNavigation } from '@react-navigation/native';

export default function VolleyballPage() {
    const navigation = useNavigation();
    return (
        <SafeAreaView style={styles.container}>

            <ImageBackground source={require('./assets/background.jpg')} style={styles.image}>
                
                <View style={styles.overlay} />
                <Text style={styles.text}>VOLLEYBALL COURT</Text>
                <View style={styles.redRectangle} />

                <View style={styles.scrollViewContent}>
                    <View style={styles.courtContainer}>
                        <Image source={require('./assets/volleyball.png')} style={styles.courtImage} />
                        <Text style={styles.courtTitle}>VOLLEYBALL-WHOLE COURT</Text>
                        <Text style={styles.subcourtTitle}>For additional hours, kindly make another booking</Text>
                        <Text style={styles.prizeText}>1 HOUR  ₱500.00</Text>
                        <View style={styles.buttonRow}>
                            <TouchableOpacity style={styles.bookButton} onPress={() => navigation.navigate('BookingPage', {
                                courtTitle: 'VOLLEYBALL-WHOLE COURT',
                                prizeText: '₱500.00'
                                })}>
                                <Text style={styles.buttonText}>BOOK NOW</Text>
                            </TouchableOpacity>
                            <View style={styles.eventInfo}>
                                <Text style={styles.eventInfoText}>Book This For Your Event</Text>
                            </View>
                        </View>
                    </View>
                    <View style={styles.courtContainer}>
                        <Image source={require('./assets/volleyball.png')} style={styles.courtImage} />
                        <Text style={styles.courtTitle}>VOLLEYBALL-HALF COURT</Text>
                        <Text style={styles.subcourtTitle}>For additional hours, kindly make another booking</Text>
                        <Text style={styles.prizeText}>1 HOUR  ₱300.00</Text>
                        <View style={styles.buttonRow}>
                            <TouchableOpacity style={styles.bookButton} onPress={() => navigation.navigate('BookingPage', {
                                courtTitle: 'VOLLEYBALL-HALF COURT',
                                prizeText: '₱300.00'
                            })}>
                                <Text style={styles.buttonText}>BOOK NOW</Text>
                            </TouchableOpacity>
                            <View style={styles.eventInfo}>
                                <Text style={styles.eventInfoText}>Book This For Your Event</Text>
                            </View>
                        </View>
                    </View>

                </View>
                <View style={styles.redRectangle1}>
                    <View style={styles.bottomRow}>
                        <TouchableOpacity style={styles.bottomButton} onPress={() => navigation.goBack()}>
                            <Image source={require('./assets/backspace.png')} style={styles.bottomImage} />
                        </TouchableOpacity>
                        <TouchableOpacity style={styles.bottomButton} onPress={() => navigation.navigate('HomePage')}>
                            <Image source={require('./assets/home.png')} style={styles.bottomImage} />
                        </TouchableOpacity>
                        <TouchableOpacity style={styles.bottomButton} onPress={() => navigation.navigate('Calendar')}>
                            <Image source={require('./assets/calendar.png')} style={styles.bottomImage} />
                        </TouchableOpacity>
                        <TouchableOpacity style={styles.bottomButton} onPress={() => navigation.navigate('ProfilePage')}>
                            <Image source={require('./assets/profile.png')} style={styles.bottomImage} />
                        </TouchableOpacity>
                    </View>
                </View>
            </ImageBackground>
        </SafeAreaView>
    );
}

const styles = StyleSheet.create({
    container: {
        flex: 1,
        justifyContent: 'center',
        alignItems: 'center',
    },
    scrollViewContent: {
        alignItems: 'center',
        padding: 20,
    },
    courtContainer: {
        width: '90%',
        backgroundColor: 'rgba(255, 255, 255, 0.8)',
        padding: 20,
        borderRadius: 10,
        marginBottom: 40,
        alignItems: 'center',
    },
    courtImage: {
        width: 316,
        height: 117,
        marginBottom: 5,
    },
    courtTitle: {
        fontSize: 12,
        fontWeight: 'bold',
        marginBottom: 5,
    },
    subcourtTitle: {
        fontSize: 12,
        fontWeight: 'regular',
        marginBottom: 5,
        textAlign: 'center',
    },
    buttonRow: {
        flexDirection: 'row', 
        alignItems: 'center', 
    },
    bookButton: {
        backgroundColor: '#800000',
        padding: 10,
        borderRadius: 5,
        marginTop: 10,
        width: '35%',
    },
    buttonText: {
        color: 'white',
        fontSize: 12,
        textAlign: 'center',
    },
    image: {
        flex: 1,
        resizeMode: 'cover',
        width: '100%',
        height: '100%',
    },
    overlay: {
        position: 'absolute',
        top: 0,
        left: 0,
        right: 0,
        bottom: 0,
        backgroundColor: '#800000',
        opacity: 0.5,
    },
    text: {
        color: 'white',
        fontSize: 20,
        textAlign: 'center',
        left: 5,
        marginTop: '20%',
    },
    eventInfo: {
        backgroundColor: '#8C8C8C',
        padding: 10,
        borderRadius: 5,
        marginLeft: 10, 
        width: '60%',
        marginTop: 10,
    },
    eventInfoText: {
        color: 'white',
        fontSize: 12,
    },
    redRectangle: {
        position: 'absolute',
        top: 0,
        left: 0,
        right: 0,
        height: 70,
        backgroundColor: '#800000',
    },
    redRectangle1: {
        position: 'absolute',
        bottom: 0,
        left: 0,
        right: 0,
        height: 60,
        backgroundColor: '#800000',
        flexDirection: 'row',
        justifyContent: 'space-around',
        alignItems: 'center',
    },
    bottomRow: {
        flexDirection: 'row',
        justifyContent: 'space-around',
    },
    bottomButton: {
        padding: 10,
    },
    bottomImage: {
        width: 30,
        height: 30,
        marginHorizontal: 30,
    },
});

     import { StatusBar } from 'expo-status-bar';
     import { StyleSheet, Image, Text, View, ImageBackground, SafeAreaView, TouchableOpacity, TextInput } from 'react-native';
     import { useNavigation } from '@react-navigation/native';
     

     export default function WelcomePage() {
       const navigation = useNavigation(); 
       return (
         <SafeAreaView style={styles.container}>
           <ImageBackground source={require('./assets/background.jpg')} style={styles.image}>
             <View style={styles.overlay} /> 
             <Image source={require('./assets/logo.png')} style={styles.logo} />
             <View style={styles.textContainer}>
               <Text style={styles.text}>No Rain No Problem Secure Your Covered Court And Play On</Text>
             </View>
             <View style={styles.subTextContainer}>
               <Text style={styles.subText}>At Covered Court Reservation,
                We Believe Everyone Should Have Access To Quality 
                Indoor Courts. Our User-Friendly Online Reservation System 
                Puts You In Control Of Your Game Time, Allowing You To Choose 
                The Perfect Date And Time For Your Next Game Or Event.</Text>
             </View>
             <TouchableOpacity style={styles.button} onPress={() => {
               navigation.navigate('RegisterPage'); // Navigate to RegisterPage
             }}>
               <Text style={styles.buttonText}>Book Now</Text>
             </TouchableOpacity>
           </ImageBackground>
           <StatusBar style="auto" />
         </SafeAreaView>
       );
     }

     const styles = StyleSheet.create({
       // HomePage styles
       container: {
         flex: 1,
         justifyContent: 'center',
         alignItems: 'center',
       },
       image: {
         flex: 1,
         resizeMode: 'cover',
         width: '100%',
         height: '100%',
       },
       logo: {
         position: 'absolute',
         top: '5%', 
         left: '5%',
         width: '15%', 
         height: '10%', 
         resizeMode: 'contain', 
       },
       textContainer: {
         position: 'absolute', 
         top: '25%', 
         
         alignItems: 'center',
       },
       text: {
         color: 'white',
         fontSize: 32,
         textAlign: 'center', 
         fontStyle: 'Poppins',
         marginLeft: 40,
         
       },
       subTextContainer: {
         position: 'absolute', 
         top: '45%',
       },
       subText: {
         color: 'white',
         fontSize: 12,
         textAlign: 'center', 
         fontStyle: 'Poppins',
         marginLeft: 40,
         marginRight: 40,
       },
       overlay: {
         position: 'absolute',
         top: 0,
         left: 0,
         right: 0,
         bottom: 0,
         backgroundColor: '#800000', 
         opacity: 0.5, 
       },
       button: {
         position: 'absolute',
         bottom: '15%', 
         left: '15%',
         backgroundColor: '#800000', 
         padding: 15,
         borderRadius: 5,
         width: '70%',
         height: '10%',
       },
       buttonText: {
         color: 'white', 
         fontSize: 26,
         textAlign: 'center',
       },
     });
const express = require('express');
const { MongoClient } = require('mongodb');
const bcrypt = require('bcrypt');
const cors = require('cors');
const jwt = require('jsonwebtoken');
const mongoose = require('mongoose');
require('dotenv').config();
const paypal = require('@paypal/checkout-server-sdk');

const app = express();
app.use(express.json());
app.use(cors());

// MongoDB Connection
const uri = process.env.MONGO_URI || "mongodb+srv://iamkiethesbo:Nuisanc3@cluster0.jutx2.mongodb.net/?retryWrites=true&w=majority";
const client = new MongoClient(uri, {
  serverSelectionTimeoutMS: 5000,
  socketTimeoutMS: 45000,
});

const JWT_SECRET = process.env.JWT_SECRET;

// Define Mongoose Models
const orderSchema = new mongoose.Schema({
  orderID: { type: String, required: true, unique: true },
  status: { type: String, default: 'PAID' },
  amount: { type: Number, required: true },
  createdAt: { type: Date, default: Date.now },
});

const Order = mongoose.model('Order', orderSchema);

// User schema for registration
const userSchema = new mongoose.Schema({
  fullName: { type: String, required: true },
  username: { type: String, required: true, unique: true },
  email: { type: String, required: true, unique: true },
  phoneNumber: { type: String, required: true },
  password: { type: String, required: true },
  gender: { type: String, required: true },
});

const User = mongoose.model('User', userSchema);

// PayPal Environment
const environment = new paypal.core.SandboxEnvironment(
  process.env.PAYPAL_CLIENT_ID,
  process.env.PAYPAL_CLIENT_SECRET
);
const paypalClient = new paypal.core.PayPalHttpClient(environment);

// Route to Register User
app.post('/register', async (req, res) => {
  const { fullName, username, email, phoneNumber, password, gender } = req.body;

  if (!fullName || !username || !email || !phoneNumber || !password || !gender) {
    return res.status(400).json({ message: 'All fields are required' });
  }

  try {
    const existingUser = await User.findOne({ $or: [{ email }, { username }] });
    if (existingUser) {
      return res.status(400).json({ message: 'Email or username already exists' });
    }

    const hashedPassword = await bcrypt.hash(password, 10);

    const newUser = new User({
      fullName,
      username,
      email,
      phoneNumber,
      password: hashedPassword,
      gender,
    });

    await newUser.save();

    res.status(201).json({ message: 'User registered successfully' });
  } catch (error) {
    console.error('Error registering user:', error);
    res.status(500).json({ message: 'Registration failed', error: error.message });
  }
});

// Login Route - Added to handle user login
app.post('/login', async (req, res) => {
  const { email, password } = req.body;

  if (!email || !password) {
    return res.status(400).json({ message: 'Please provide email and password' });
  }

  try {
    const user = await User.findOne({ email });

    if (!user) {
      return res.status(401).json({ message: 'Invalid email or password' });
    }

    const isMatch = await bcrypt.compare(password, user.password);
    if (!isMatch) {
      return res.status(401).json({ message: 'Invalid email or password' });
    }

    const payload = { userId: user._id };
    const accessToken = jwt.sign(payload, JWT_SECRET, { expiresIn: '1h' });

    res.json({ accessToken });
  } catch (error) {
    console.error('Error logging in user:', error);
    res.status(500).json({ message: 'Login failed', error: error.message });
  }
});

// MongoDB Connection
async function run() {
  try {
    console.log("Attempting to connect to MongoDB...");
    await client.connect();
    console.log("Connected successfully to MongoDB");

    await mongoose.connect(uri, {});
    console.log('Connected to MongoDB using Mongoose');

    const PORT = process.env.PORT || 3000;
    app.listen(PORT, () => console.log(`Server running on port ${PORT}`));
  } catch (err) {
    console.error("Database connection error:", err);
    if (err.name === 'MongoServerSelectionError') {
      console.error("Failed to select a MongoDB server. Check your network or Atlas settings.");
    }
  }
}

run().catch(console.error);

// Graceful Shutdown
process.on('SIGINT', async () => {
  await client.close();
  console.log('MongoDB connection closed');
  process.exit(0);
});



WEBSITE HTML
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>COVERED COURT RESERVATION</title>
<link
href="https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,60
0;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap"
rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
rel="stylesheet">
<link href="courts.css" rel="stylesheet">
</head>
<body>
<nav class="navbar navbar-expand-lg navbar-dark bg-maroon">
<div class="container">
<a class="navbar-brand" href="#">
<img src="images/logo.png.png" alt="Covered Court Reservation Logo" width="50" height="50"
class="d-inline-block align-top">
COVERED COURT RESERVATION
</a>
<button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bstarget="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
<span class="navbar-toggler-icon"></span>
</button>
<div class="collapse navbar-collapse" id="navbarNav">
<ul class="navbar-nav ms-auto">
<li class="nav-item">
<a class="nav-link" href="home.php">HOME</a>
</li>
<li class="nav-item">
<a class="nav-link" href="courts.php">COURTS</a>
</li>
<li class="nav-item">
<a class="nav-link" href="aboutus.php">ABOUT US</a>
</li>
<li class="nav-item">
<a class="nav-link" href="inquire.php">INQUIRE</a>
</li>
</ul>
</div>
</div>
</nav>
<div class="container mt-5">
<h1 class="text-center mb-5">AVAILABLE COURTS</h1>
<div class="row">
<div class="col-md-4 mb-4">
<div class="card court-card">
<img src="images/basketball-court.png" class="card-img-top" alt="Basketball Court">
<div class="card-body">
<h5 class="card-title">BASKETBALL COURT</h5>
<p class="card-text">Available for whole court and half court bookings.</p>
<p class="card-text"><small class="text-muted">1HR - Whole Court ₱500.00 | Half Court
₱300.00</small></p>
</div>
</div>
</div>
<div class="col-md-4 mb-4">
<div class="card court-card">
<img src="images/badminton-court.png" class="card-img-top" alt="Badminton Court">
<div class="card-body">
<h5 class="card-title">BADMINTON COURT</h5>
<p class="card-text">Available for whole court and half court bookings.</p>
<p class="card-text"><small class="text-muted">1HR - Whole Court ₱500.00 | Half Court
₱300.00</small></p>
</div>
</div>
</div>
<div class="col-md-4 mb-4">
<div class="card court-card">
<img src="images/volleyball-court.png" class="card-img-top" alt="Volleyball Court">
<div class="card-body">
<h5 class="card-title">VOLLEYBALL COURT</h5>
<p class="card-text">Available for whole court and half court bookings.</p>
<p class="card-text"><small class="text-muted">1HR - Whole Court ₱500.00 | Half Court
₱300.00</small></p>
</div>
</div>
</div>
</div>
</div>
<footer class="footer py-5">
<div class="container">
<div class="row">
<div class="col-md-6">
<h5>SEARCH</h5>
<ul class="list-unstyled">
<li><a href="#">ALL BASKETBALL COURTS IN MONTALBAN RIZAL</a></li>
<li><a href="#">PRIVACY POLICY</a></li>
<li><a href="#">TERMS OF SERVICE</a></li>
</ul>
</div>
<div class="col-md-6">
<h5>SIGN UP FOR UPDATES</h5>
<p>Get notified with news and updates on court listings</p>
<form id="subscribe-form">
<div class="input-group mb-3">
<input type="email" class="form-control" placeholder="My email address" arialabel="Email address" aria-describedby="subscribe-button">
<button class="btn btn-outline-light" type="submit" id="subscribebutton">SUBSCRIBE</button>
</div>
</form>
</div>
</div>
<div class="row mt-4">
<div class="col-md-6">
<div class="social-icons">
<a href="#" class="me-3"><i class="bi bi-facebook"></i></a>
<a href="#" class="me-3"><i class="bi bi-twitter"></i></a>
<a href="#"><i class="bi bi-instagram"></i></a>
</div>
</div>
<div class="col-md-6 text-md-end">
<p>&copy; 2024 @COR-RIZAL</p>
</div>
</div>
</div>
</footer>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
CSS
:root {
--maroon: #800000;
--white: #ffffff;
--gray: #808080;
--black: #000000;
}
body {
font-family: Poppins, sans-serif;
color: var(--black);
background-image: linear-gradient(rgba(128, 0, 0, 0), rgba(128, 0, 0, 0.7)),
url("images/background.jpg");
background-size: cover;
background-attachment: fixed;
background-position: center;
}
.container {
text-align: center;
}
.container h1 {
font-weight: bold;
}
.container p {
font-weight: bold;
color: white;
}
/*NAVBAR - SECTION*/
.bg-maroon {
background-color: white;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
.navbar-brand {
color: black;
font-weight: bold;
}
.navbar-brand img {
margin-right: 5px;
}
.nav-link {
color: black;
}
.nav-link:hover {
color: var(--gray);
}
h1 {
color: var(--white);
}
main {
background-color: rgba(255, 255, 255, 0);
padding: 20px;
border-radius: 5px;
box-shadow: 0 0 10px rgba(0, 0, 0, 0);
margin-bottom: 3rem;
}
/*CAROUSEL - SECTION*/
.carousel-item {
height: 400px;
width: 100%;
}
.carousel-item img {
object-fit: cover;
height: 100%;
border-radius: 10px;
}
.carousel-caption {
background-color: rgba(0, 0, 0, 0.5);
padding: 20px;
border-radius: 5px;
}
.carousel-caption h5 {
color: var(--white);
font-weight: bold;
}
.carousel-caption p {
color: var(--white);
}
#courtCarousel {
margin-bottom: 3rem;
width: 100%;
max-width: 1200px;
margin-left: auto;
margin-right: auto;
border-radius: 10px;
box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
overflow: hidden;
}
p {
color: var(--black);
}
@media (max-width: 768px) {
.carousel-item {
height: 56.25vw;
min-height: 200px;
}
}
.ratio {
box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
border-radius: 10px;
overflow: hidden;
}
/*PLAY STORE AND AP STORE LOGO-SECTION*/
.app-store-links img {
transition: transform 0.3s ease;
}
.app-store-links img:hover {
transform: scale(1.05);
}
@media (max-width: 768px) {
.app-store-links {
flex-direction: column;
align-items: center;
}
.app-store-links a {
margin-bottom: 1rem;
}
}
.text-center {
text-align: center !important;
color: white;
}
/*LIVE STREAMING-SECTION*/
.live-streaming {
background-color: #ffffff9f;
padding: 4rem 0;
}
.live-streaming h2 {
color: #ffffff;
font-size: 2.5rem;
margin-bottom: 2rem;
}
.live-streaming h2 span {
color: #8b0000;
}
.text-primary {
--bs-text-opacity: 1;
color: maroon !important;
}
.live-stream-container {
background-color: #fff;
border-radius: 1rem;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
overflow: hidden;
}
.live-stream-placeholder {
background-color: #000;
aspect-ratio: 16 / 9;
display: flex;
align-items: center;
justify-content: center;
color: #fff;
font-size: 1.5rem;
position: relative;
}
.live-indicator {
position: absolute;
top: 1rem;
left: 1rem;
background-color: #dc3545;
color: #fff;
padding: 0.25rem 0.5rem;
border-radius: 0.25rem;
font-size: 0.875rem;
font-weight: bold;
}
.live-stream-info {
padding: 1.5rem;
}
.live-stream-info h3 {
margin-bottom: 1rem;
color: #333;
}
.live-stream-info p {
color: #666;
margin-bottom: 1rem;
}
.stream-stats {
display: flex;
justify-content: space-between;
margin-top: 1rem;
font-size: 0.875rem;
color: #666;
}
.upcoming-streams {
margin-top: 2rem;
}
.upcoming-stream-item {
border-bottom: 1px solid #e9ecef;
padding: 1rem 0;
}
.upcoming-stream-item:last-child {
border-bottom: none;
}
.btn-primary {
--bs-btn-color: #fff;
--bs-btn-bg: #63121a;
--bs-btn-border-color: #ffffff;
--bs-btn-hover-color: #fff;
--bs-btn-hover-bg: #7a0914;
--bs-btn-hover-border-color: #ffffff;
--bs-btn-focus-shadow-rgb: 49, 132, 253;
--bs-btn-active-color: #fff;
--bs-btn-active-bg: #ffffff;
--bs-btn-active-border-color: #ffffff;
--bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
--bs-btn-disabled-color: #fff;
--bs-btn-disabled-bg: #ffffff;
--bs-btn-disabled-border-color: #ffffff;
}
/*FOOTER-SECTION*/
.footer {
background-color: rgba(128, 0, 0, 0.481);
color: white;
}
.footer a {
color: white;
text-decoration: none;
}
.footer a:hover {
text-decoration: underline;
}
.footer h5 {
font-weight: bold;
margin-bottom: 1rem;
}
.footer ul {
padding-left: 0;
}
.footer li {
margin-bottom: 0.5rem;
}
.footer-links a {
text-decoration: none;
}
.footer-links a:hover {
text-decoration: none;
opacity: 0.8;
}
.social-icons a {
font-size: 1.5rem;
}
.col-md-6 {
color: white;
}
.text-md-end {
color: white;
}
ABOUT US
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>COVERED COURT RESERVATION</title>
<link
href="https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,
600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap"
rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
rel="stylesheet">
<link href="aboutus.css" rel="stylesheet">
</head>
<body>
<nav class="navbar navbar-expand-lg navbar-dark bg-maroon">
<div class="container">
<a class="navbar-brand" href="#">
<img src="images/logo.png.png" alt="Covered Court Reservation Logo" width="50"
height="50" class="d-inline-block align-top">
COVERED COURT RESERVATION
</a>
<button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bstarget="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle
navigation">
<span class="navbar-toggler-icon"></span>
</button>
<div class="collapse navbar-collapse" id="navbarNav">
<ul class="navbar-nav ms-auto">
<li class="nav-item">
<a class="nav-link" href="home.php">HOME</a>
</li>
<li class="nav-item">
<a class="nav-link" href="courts.php">COURTS</a>
</li>
<li class="nav-item">
<a class="nav-link" href="aboutus.php">ABOUT US</a>
</li>
<li class="nav-item">
<a class="nav-link" href="inquire.php">INQUIRE</a>
</li>
</ul>
</div>
</div>
</nav>
<header class="hero-section">
<div class="container h-100">
<div class="row h-100 align-items-center">
<div class="col-12 text-center">
<h1 class="fw-light">COVERED COURT RESERVATION</h1>
<p class="lead"></p>
</div>
</div>
</div>
</header>
<main class="container my-5">
<section class="row">
<div class="col-lg-6">
<h2 class="mb-4">ABOUT US</h2>
<p>At Covered Court Reservation, we believe everyone should have access to quality indoor
courts. Our user-friendly online reservation system puts you in control of your game time, allowing
you to choose the perfect date and time for your next game or event.
</p>
<p>Whether you're organizing a casual pick-up game with friends or hosting a tournament,
we have the space you need. With our flexible booking options, you can easily find a time slot that fits
your busy schedule. Our online system provides upfront court availability and facility details, making
it easy to make informed decisions.</p>
</div>
<div class="col-lg-6">
<img src="images/logo.png.png" alt="Elegant interior design" class="img-fluid rounded
shadow">
</div>
</section>
<section class="row mt-5">
<div class="col-12 text-center">
<h2 class="mb-4">Our Values</h2>
</div>
<div class="col-md-4">
<div class="card mb-4">
<div class="card-body text-center">
<h3 class="card-title h4">Innovation</h3>
<p class="card-text">We're constantly innovating to make your court reservation
experience smoother and more enjoyable.</p>
</div>
</div>
</div>
<div class="col-md-4">
<div class="card mb-4">
<div class="card-body text-center">
<h3 class="card-title h4">Accessibility</h3>
<p class="card-text"> We believe everyone deserves access to convenient court
reservations, regardless of their abilities.</p>
</div>
</div>
</div>
<div class="col-md-4">
<div class="card mb-4">
<div class="card-body text-center">
<h3 class="card-title h4">Reliability</h3>
<p class="card-text">Our team works tirelessly to ensure that your experience on our
platform is not just reliable but also seamless.</p>
</div>
</div>
</div>
</section>
<section class="row mt-5">
<div class="col-12 text-center">
<h2 class="mb-4">Meet Our Team</h2>
</div>
<div class="col-md-3 col-sm-6">
<div class="team-member text-center">
<img src="images/garcia.jpg" alt="Team member 1" class="rounded-circle mb-3">
<h3 class="h5">Christian Garcia</h3>
<p class="text-muted"></p>App Developer</p>
</div>
</div>
<div class="col-md-3 col-sm-6">
<div class="team-member text-center">
<img src="images/kieth.jpg" alt="Team member 2" class="rounded-circle mb-3">
<h3 class="h5">Kieth Eusebio</h3>
<p class="text-muted">Lead Designer & Web Developer</p>
</div>
</div>
<div class="col-md-3 col-sm-6">
<div class="team-member text-center">
<img src="images/roque.jpg" alt="Team member 3" class="rounded-circle mb-3">
<h3 class="h5">Diana Roque</h3>
<p class="text-muted">Assistant Designer & Manu Script</Script></p>
</div>
</div>
<div class="col-md-3 col-sm-6">
<div class="team-member text-center">
<img src="images/silvestre.jpg" alt="Team member 4" class="rounded-circle mb-3">
<h3 class="h5">Jimwell Silvestre</h3>
<p class="text-muted">Desktop Developer</p>
</div>
</div>
</section>
</main>
<footer class="footer py-5">
<div class="container">
<div class="row">
<div class="col-md-6">
<h5>SEARCH</h5>
<ul class="list-unstyled">
<li><a href="#">ALL BASKETBALL COURTS IN MONTALBAN RIZAL</a></li>
<li><a href="#">PRIVACY POLICY</a></li>
<li><a href="#">TERMS OF SERVICE</a></li>
</ul>
</div>
<div class="col-md-6">
<h5>SIGN UP FOR UPDATES</h5>
<p>Get notified with news and updates on court listings</p>
<form id="subscribe-form">
<div class="input-group mb-3">
<input type="email" class="form-control" placeholder="My email address" arialabel="Email address" aria-describedby="subscribe-button">
<button class="btn btn-outline-light" type="submit" id="subscribebutton">SUBSCRIBE</button>
</div>
</form>
</div>
</div>
<div class="row mt-4">
<div class="col-md-6">
<div class="social-icons">
<a href="#" class="me-3"><i class="bi bi-facebook"></i></a>
<a href="#" class="me-3"><i class="bi bi-twitter"></i></a>
<a href="#"><i class="bi bi-instagram"></i></a>
</div>
</div>
<div class="col-md-6 text-md-end">
<p>&copy; 2024 @COR-RIZAL</p>
</div>
</div>
</div>
<script
src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
CSS
:root {
--maroon: #800000;
--white: #ffffff;
--gray: #808080;
--black: #000000;
}
body {
font-family: "Popins", sans-serif;
color: var(--black);
background-image: linear-gradient(
rgba(255, 255, 255, 0),
rgba(122, 0, 0, 0.7)
),
url("images/background.jpg");
background-size: cover;
background-attachment: fixed;
background-position: center;
}
.bg-maroon {
background-color: white;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
.navbar-brand {
color: black;
font-weight: bold;
}
.navbar-brand img {
margin-right: 5px;
}
.nav-link {
color: black;
}
.nav-link:hover {
color: var(--gray);
}
.footer {
background-color: rgba(128, 0, 0, 0.481);
color: white;
}
.footer a {
color: white;
text-decoration: none;
}
.footer a:hover {
text-decoration: underline;
}
.footer h5 {
font-weight: bold;
margin-bottom: 1rem;
}
.footer ul {
padding-left: 0;
}
.footer li {
margin-bottom: 0.5rem;
}
.footer-links a {
text-decoration: none;
}
.footer-links a:hover {
text-decoration: none;
opacity: 0.8;
}
.social-icons a {
font-size: 1.5rem;
}
.col-md-6 {
color: white;
}
.text-md-end {
color: white;
}
body {
font-family: "Poppins", serif;
color: #333;
}
.navbar {
box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}
.navbar-brand {
font-family: "Poppins", serif;
font-size: 1.5rem;
}
body {
font-family: "Poppins", serif;
color: #ffffff;
}
.hero-section {
background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)),
url("images/background.jpg");
background-size: cover;
background-position: center;
height: 60vh;
color: #fff;
}
.hero-section h1 {
font-size: 3.5rem;
font-weight: 300;
text-shadow: 2px 2px 4px rgba(255, 253, 253, 0.5);
}
.hero-section p {
font-size: 1.5rem;
text-shadow: 1px 1px 2px rgba(255, 255, 255, 0.5);
}
h2 {
font-family: "Poppins", serif;
color: #ffffff;
margin-bottom: 1.5rem;
}
.card {
border: none;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
transition: transform 0.3s ease-in-out;
}
.card:hover {
transform: translateY(-5px);
}
.team-member {
margin-bottom: 2rem;
}
.team-member img {
width: 200px;
height: 200px;
object-fit: cover;
border: 5px solid #fff;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
.team-member h3 {
margin-top: 1rem;
font-family: "Poppins", serif;
}
@media (max-width: 767px) {
.team-member {
margin-bottom: 3rem;
}
}
.row h2 {
font-family: "Poppins", serif;
color: #ffffff;
margin-bottom: 2rem;
}
.team-member p {
color: #fcfcfc;
font-size: 0.9rem;
}
@media (max-width: 768px) {
.hero-section h1 {
font-size: 2.5rem;
}
.hero-section p {
font-size: 1.2rem;
}
}
.text-muted {
--bs-text-opacity: 1;
color: white !important;
}
COURTS
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>COVERED COURT RESERVATION</title>
<link
href="https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,
600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap"
rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
rel="stylesheet">
<link href="courts.css" rel="stylesheet">
</head>
<body>
<nav class="navbar navbar-expand-lg navbar-dark bg-maroon">
<div class="container">
<a class="navbar-brand" href="#">
<img src="images/logo.png.png" alt="Covered Court Reservation Logo" width="50"
height="50" class="d-inline-block align-top">
COVERED COURT RESERVATION
</a>
<button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bstarget="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle
navigation">
<span class="navbar-toggler-icon"></span>
</button>
<div class="collapse navbar-collapse" id="navbarNav">
<ul class="navbar-nav ms-auto">
<li class="nav-item">
<a class="nav-link" href="home.php">HOME</a>
</li>
<li class="nav-item">
<a class="nav-link" href="courts.php">COURTS</a>
</li>
<li class="nav-item">
<a class="nav-link" href="aboutus.php">ABOUT US</a>
</li>
<li class="nav-item">
<a class="nav-link" href="inquire.php">INQUIRE</a>
</li>
</ul>
</div>
</div>
</nav>
<div class="container mt-5">
<h1 class="text-center mb-5">AVAILABLE COURTS</h1>
<div class="row">
<div class="col-md-4 mb-4">
<div class="card court-card">
<img src="images/basketball-court.png" class="card-img-top" alt="Basketball Court">
<div class="card-body">
<h5 class="card-title">BASKETBALL COURT</h5>
<p class="card-text">Available for whole court and half court bookings.</p>
<p class="card-text"><small class="text-muted">1HR - Whole Court ₱500.00 | Half Court
₱300.00</small></p>
</div>
</div>
</div>
<div class="col-md-4 mb-4">
<div class="card court-card">
<img src="images/badminton-court.png" class="card-img-top" alt="Badminton Court">
<div class="card-body">
<h5 class="card-title">BADMINTON COURT</h5>
<p class="card-text">Available for whole court and half court bookings.</p>
<p class="card-text"><small class="text-muted">1HR - Whole Court ₱500.00 | Half Court
₱300.00</small></p>
</div>
</div>
</div>
<div class="col-md-4 mb-4">
<div class="card court-card">
<img src="images/volleyball-court.png" class="card-img-top" alt="Volleyball Court">
<div class="card-body">
<h5 class="card-title">VOLLEYBALL COURT</h5>
<p class="card-text">Available for whole court and half court bookings.</p>
<p class="card-text"><small class="text-muted">1HR - Whole Court ₱500.00 | Half Court
₱300.00</small></p>
</div>
</div>
</div>
</div>
</div>
<footer class="footer py-5">
<div class="container">
<div class="row">
<div class="col-md-6">
<h5>SEARCH</h5>
<ul class="list-unstyled">
<li><a href="#">ALL BASKETBALL COURTS IN MONTALBAN RIZAL</a></li>
<li><a href="#">PRIVACY POLICY</a></li>
<li><a href="#">TERMS OF SERVICE</a></li>
</ul>
</div>
<div class="col-md-6">
<h5>SIGN UP FOR UPDATES</h5>
<p>Get notified with news and updates on court listings</p>
<form id="subscribe-form">
<div class="input-group mb-3">
<input type="email" class="form-control" placeholder="My email address" arialabel="Email address" aria-describedby="subscribe-button">
<button class="btn btn-outline-light" type="submit" id="subscribebutton">SUBSCRIBE</button>
</div>
</form>
</div>
</div>
<div class="row mt-4">
<div class="col-md-6">
<div class="social-icons">
<a href="#" class="me-3"><i class="bi bi-facebook"></i></a>
<a href="#" class="me-3"><i class="bi bi-twitter"></i></a>
<a href="#"><i class="bi bi-instagram"></i></a>
</div>
</div>
<div class="col-md-6 text-md-end">
<p>&copy; 2024 @COR-RIZAL</p>
</div>
</div>
</div>
</footer>
<script
src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
CSS
:root {
--maroon: #800000;
--white: #ffffff;
--gray: #808080;
--black: #000000;
}
body {
font-family: Poppins, sans-serif;
color: var(--black);
background-image: linear-gradient(rgba(128, 0, 0, 0), rgba(128, 0, 0, 0.7)),
url("images/background.jpg");
background-size: cover;
background-attachment: fixed;
background-position: center;
}
.text-center {
text-align: center !important;
color: white;
}
.bg-maroon {
background-color: white;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
.navbar-brand {
color: black;
font-weight: bold;
}
.navbar-brand img {
margin-right: 5px;
}
.nav-link {
color: black;
}
.nav-link:hover {
color: var(--gray);
}
body {
background-color: #f8f9fa;
}
.court-card {
transition: transform 0.3s ease-in-out;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
.court-card:hover {
transform: translateY(-5px);
}
.card-img-top {
height: 200px;
object-fit: cover;
}
.card-title {
color: #080808;
font-weight: bold;
}
.card-text {
color: #6c757d;
}
.text-muted {
font-style: italic;
}
.footer {
background-color: rgba(128, 0, 0, 0.481);
color: white;
}
.footer a {
color: white;
text-decoration: none;
}
.footer a:hover {
text-decoration: underline;
}
.footer h5 {
font-weight: bold;
margin-bottom: 1rem;
}
.footer ul {
padding-left: 0;
}
.footer li {
margin-bottom: 0.5rem;
}
.footer-links a {
text-decoration: none;
}
.footer-links a:hover {
text-decoration: none;
opacity: 0.8;
}
.social-icons a {
font-size: 1.5rem;
}
.col-md-6 {
color: white;
}
.text-md-end {
color: white;
}




ADMIN DESIGN
<Global.Microsoft.VisualBasic.CompilerServices.DesignerGenerated()> _
Partial Class admin
Inherits System.Windows.Forms.Form
<System.Diagnostics.DebuggerNonUserCode()> _
Protected Overrides Sub Dispose(ByVal disposing As Boolean)
Try
If disposing AndAlso components IsNot Nothing Then
components.Dispose()
End If
Finally
MyBase.Dispose(disposing)
End Try
End Sub
Private components As System.ComponentModel.IContainer
<System.Diagnostics.DebuggerStepThrough()> _
Private Sub InitializeComponent()
PictureBox1 = New PictureBox()
Panel1 = New Panel()
txtBoxPassword = New TextBox()
txtBoxUsername = New TextBox()
Button1 = New Button()
PictureBox3 = New PictureBox()
PictureBox2 = New PictureBox()
Panel2 = New Panel()
Label1 = New Label()
CType(PictureBox1, ComponentModel.ISupportInitialize).BeginInit()
Panel1.SuspendLayout()
CType(PictureBox3, ComponentModel.ISupportInitialize).BeginInit()
CType(PictureBox2, ComponentModel.ISupportInitialize).BeginInit()
Panel2.SuspendLayout()
SuspendLayout()
PictureBox1.Image =
My.Resources.Resources._462536867_1210787480222630_3897406019901242136_n
PictureBox1.Location = New Point(-7, -5)
PictureBox1.Name = "PictureBox1"
PictureBox1.Size = New Size(751, 476)
PictureBox1.SizeMode = PictureBoxSizeMode.StretchImage
PictureBox1.TabIndex = 0
PictureBox1.TabStop = False
'
' Panel1
'
Panel1.Controls.Add(txtBoxPassword)
Panel1.Controls.Add(txtBoxUsername)
Panel1.Controls.Add(Button1)
Panel1.Controls.Add(PictureBox3)
Panel1.Controls.Add(PictureBox2)
Panel1.Location = New Point(185, 45)
Panel1.Name = "Panel1"
Panel1.Size = New Size(347, 360)
Panel1.TabIndex = 1
txtBoxPassword.Location = New Point(93, 166)
txtBoxPassword.Multiline = True
txtBoxPassword.Name = "txtBoxPassword"
txtBoxPassword.Size = New Size(214, 38)
txtBoxPassword.TabIndex = 6
txtBoxUsername.Location = New Point(94, 118)
txtBoxUsername.Multiline = True
txtBoxUsername.Name = "txtBoxUsername"
txtBoxUsername.Size = New Size(214, 38)
txtBoxUsername.TabIndex = 5
Button1.BackColor = Color.Maroon
Button1.Font = New Font("Poppins", 12F, FontStyle.Bold, GraphicsUnit.Point, CByte(0))
Button1.ForeColor = Color.White
Button1.Location = New Point(75, 230)
Button1.Name = "Button1"
Button1.Size = New Size(200, 49)
Button1.TabIndex = 4
Button1.Text = "LOGIN"
Button1.UseVisualStyleBackColor = False
PictureBox3.Image = My.Resources.Resources.passwordlock1
PictureBox3.Location = New Point(49, 166)
PictureBox3.Name = "PictureBox3"
PictureBox3.Size = New Size(45, 38)
PictureBox3.SizeMode = PictureBoxSizeMode.StretchImage
PictureBox3.TabIndex = 3
PictureBox3.TabStop = False
PictureBox2.Image = My.Resources.Resources.userrrr
PictureBox2.Location = New Point(49, 118)
PictureBox2.Name = "PictureBox2"
PictureBox2.Size = New Size(45, 38)
PictureBox2.SizeMode = PictureBoxSizeMode.StretchImage
PictureBox2.TabIndex = 2
PictureBox2.TabStop = False
Panel2.BackColor = Color.Maroon
Panel2.Controls.Add(Label1)
Panel2.Location = New Point(185, 45)
Panel2.Name = "Panel2"
Panel2.Size = New Size(348, 56)
Panel2.TabIndex = 0
Label1.AutoSize = True
Label1.Font = New Font("Poppins", 12F, FontStyle.Bold, GraphicsUnit.Point, CByte(0))
Label1.ForeColor = Color.White
Label1.Location = New Point(99, 14)
Label1.Name = "Label1"
Label1.Size = New Size(150, 36)
Label1.TabIndex = 0
Label1.Text = "ADMIN LOGIN"
AutoScaleDimensions = New SizeF(8F, 20F)
AutoScaleMode = AutoScaleMode.Font
ClientSize = New Size(735, 467)
ControlBox = False
Controls.Add(Panel2)
Controls.Add(Panel1)
Controls.Add(PictureBox1)
FormBorderStyle = FormBorderStyle.FixedSingle
Name = "admin"
StartPosition = FormStartPosition.CenterScreen
CType(PictureBox1, ComponentModel.ISupportInitialize).EndInit()
Panel1.ResumeLayout(False)
Panel1.PerformLayout()
CType(PictureBox3, ComponentModel.ISupportInitialize).EndInit()
CType(PictureBox2, ComponentModel.ISupportInitialize).EndInit()
Panel2.ResumeLayout(False)
Panel2.PerformLayout()
ResumeLayout(False)
End Sub
Friend WithEvents PictureBox1 As PictureBox
Friend WithEvents Panel1 As Panel
Friend WithEvents Panel2 As Panel
Friend WithEvents Label1 As Label
Friend WithEvents PictureBox3 As PictureBox
Friend WithEvents PictureBox2 As PictureBox
Friend WithEvents Button1 As Button
Friend WithEvents txtBoxUsername As TextBox
Friend WithEvents txtBoxPassword As TextBox
End Class
ADMIN
Imports MongoDB.Bson
Imports MongoDB.Driver
Public Class admin
Private _adminCollection As IMongoCollection(Of BsonDocument)
Public Sub New()
InitializeComponent()
txtBoxPassword.PasswordChar = "*"c
End Sub
Private Sub Button1_Click(sender As Object, e As EventArgs) Handles Button1.Click
ConnectToMongoDB()
End Sub
Private Sub ConnectToMongoDB()
Try
Dim connectionString As String =
"mongodb+srv://iamkiethesbo:Nuisanc3@cluster0.jutx2.mongodb.net/capstoneDb"
Dim client As MongoClient = New MongoClient(connectionString)
Dim database As IMongoDatabase = client.GetDatabase("capstoneDb")
_adminCollection = database.GetCollection(Of BsonDocument)("admin")
Dim enteredUsername As String = txtBoxUsername.Text
Dim enteredPassword As String = txtBoxPassword.Text
Dim filter = Builders(Of BsonDocument).Filter.Eq(Of String)("username", enteredUsername)
And
Builders(Of BsonDocument).Filter.Eq(Of String)("password", enteredPassword)
Dim user = _adminCollection.Find(filter).FirstOrDefault()
If user IsNot Nothing Then
MessageBox.Show("Login Success!")
Dim dashboard As New dashboard()
dashboard.Show()
Me.Hide()
Else
MessageBox.Show("Invalid Username or Password.")
End If
Catch ex As Exception
MessageBox.Show("Error: " & ex.Message)
End Try
End Sub
End Class
BOOKING DESIGNER CODE
<Global.Microsoft.VisualBasic.CompilerServices.DesignerGenerated()> _
Partial Class booking
Inherits System.Windows.Forms.Form
<System.Diagnostics.DebuggerNonUserCode()> _
Protected Overrides Sub Dispose(ByVal disposing As Boolean)
Try
If disposing AndAlso components IsNot Nothing Then
components.Dispose()
End If
Finally
MyBase.Dispose(disposing)
End Try
End Sub
Private components As System.ComponentModel.IContainer
<System.Diagnostics.DebuggerStepThrough()> _
Private Sub InitializeComponent()
Dim CustomizableEdges1 As Guna.UI2.WinForms.Suite.CustomizableEdges = New
Guna.UI2.WinForms.Suite.CustomizableEdges()
Dim CustomizableEdges2 As Guna.UI2.WinForms.Suite.CustomizableEdges = New
Guna.UI2.WinForms.Suite.CustomizableEdges()
Dim CustomizableEdges3 As Guna.UI2.WinForms.Suite.CustomizableEdges = New
Guna.UI2.WinForms.Suite.CustomizableEdges()
Dim CustomizableEdges4 As Guna.UI2.WinForms.Suite.CustomizableEdges = New
Guna.UI2.WinForms.Suite.CustomizableEdges()
Dim DataGridViewCellStyle1 As DataGridViewCellStyle = New DataGridViewCellStyle()
Dim DataGridViewCellStyle2 As DataGridViewCellStyle = New DataGridViewCellStyle()
Dim DataGridViewCellStyle3 As DataGridViewCellStyle = New DataGridViewCellStyle()
Label6 = New Label()
PictureBox1 = New PictureBox()
Label1 = New Label()
PictureBox2 = New PictureBox()
Guna2HtmlLabel1 = New Guna.UI2.WinForms.Guna2HtmlLabel()
Button5 = New Button()
Guna2Panel1 = New Guna.UI2.WinForms.Guna2Panel()
Button6 = New Button()
Button7 = New Button()
Button8 = New Button()
Button9 = New Button()
Button10 = New Button()
Guna2Panel2 = New Guna.UI2.WinForms.Guna2Panel()
Label2 = New Label()
Label3 = New Label()
Guna2DataGridView1 = New Guna.UI2.WinForms.Guna2DataGridView()
Column1 = New DataGridViewTextBoxColumn()
Column2 = New DataGridViewTextBoxColumn()
Column3 = New DataGridViewTextBoxColumn()
Column4 = New DataGridViewTextBoxColumn()
Column5 = New DataGridViewTextBoxColumn()
Column6 = New DataGridViewTextBoxColumn()
Column7 = New DataGridViewTextBoxColumn()
Column8 = New DataGridViewTextBoxColumn()
Column9 = New DataGridViewTextBoxColumn()
Column10 = New DataGridViewTextBoxColumn()
Column11 = New DataGridViewTextBoxColumn()
CType(PictureBox1, ComponentModel.ISupportInitialize).BeginInit()
CType(PictureBox2, ComponentModel.ISupportInitialize).BeginInit()
Guna2Panel1.SuspendLayout()
Guna2Panel2.SuspendLayout()
CType(Guna2DataGridView1, ComponentModel.ISupportInitialize).BeginInit()
SuspendLayout()
Label6.AutoSize = True
Label6.Font = New Font("Poppins", 13.8F, FontStyle.Bold, GraphicsUnit.Point, CByte(0))
Label6.ForeColor = Color.Maroon
Label6.Location = New Point(83, 22)
Label6.Name = "Label6"
Label6.Size = New Size(375, 40)
Label6.TabIndex = 6
Label6.Text = "COVERED COURT RESERVATION"
PictureBox1.Image = My.Resources.Resources.logo_png
PictureBox1.Location = New Point(8, 8)
PictureBox1.Name = "PictureBox1"
PictureBox1.Size = New Size(71, 64)
PictureBox1.SizeMode = PictureBoxSizeMode.StretchImage
PictureBox1.TabIndex = 7
PictureBox1.TabStop = False
Label1.AutoSize = True
Label1.Font = New Font("Poppins SemiBold", 9F, FontStyle.Bold, GraphicsUnit.Point, CByte(0))
Label1.ForeColor = Color.White
Label1.Location = New Point(66, 172)
Label1.Name = "Label1"
Label1.Size = New Size(62, 26)
Label1.TabIndex = 2
Label1.Text = "ADMIN"
PictureBox2.BackColor = Color.Transparent
PictureBox2.Image = My.Resources.Resources.user__1_
PictureBox2.Location = New Point(60, 84)
PictureBox2.Name = "PictureBox2"
PictureBox2.Size = New Size(82, 78)
PictureBox2.SizeMode = PictureBoxSizeMode.StretchImage
PictureBox2.TabIndex = 7
PictureBox2.TabStop = False
Guna2HtmlLabel1.BackColor = Color.Transparent
Guna2HtmlLabel1.Font = New Font("Poppins", 13.8F, FontStyle.Bold, GraphicsUnit.Point,
CByte(0))
Guna2HtmlLabel1.ForeColor = Color.White
Guna2HtmlLabel1.Location = New Point(37, 15)
Guna2HtmlLabel1.Name = "Guna2HtmlLabel1"
Guna2HtmlLabel1.Size = New Size(131, 42)
Guna2HtmlLabel1.TabIndex = 2
Guna2HtmlLabel1.Text = "CCR-RIZAL"
Button5.BackColor = Color.Maroon
Button5.FlatAppearance.BorderColor = Color.White
Button5.FlatAppearance.BorderSize = 0
Button5.FlatAppearance.MouseDownBackColor = Color.White
Button5.FlatStyle = FlatStyle.Flat
Button5.Font = New Font("Poppins", 10.8F, FontStyle.Regular, GraphicsUnit.Point, CByte(0))
Button5.ForeColor = Color.White
Button5.Image = My.Resources.Resources.logout__5_
Button5.ImageAlign = ContentAlignment.MiddleLeft
Button5.Location = New Point(0, 738)
Button5.Name = "Button5"
Button5.Padding = New Padding(5, 0, 0, 0)
Button5.Size = New Size(226, 44)
Button5.TabIndex = 6
Button5.Text = "Logout"
Button5.TextAlign = ContentAlignment.MiddleLeft
Button5.TextImageRelation = TextImageRelation.ImageBeforeText
Button5.UseVisualStyleBackColor = False
Guna2Panel1.AllowDrop = True
Guna2Panel1.BackColor = Color.Maroon
Guna2Panel1.Controls.Add(Button6)
Guna2Panel1.Controls.Add(Label1)
Guna2Panel1.Controls.Add(Button7)
Guna2Panel1.Controls.Add(PictureBox2)
Guna2Panel1.Controls.Add(Button8)
Guna2Panel1.Controls.Add(Guna2HtmlLabel1)
Guna2Panel1.Controls.Add(Button9)
Guna2Panel1.Controls.Add(Button5)
Guna2Panel1.Controls.Add(Button10)
Guna2Panel1.CustomizableEdges = CustomizableEdges1
Guna2Panel1.Dock = DockStyle.Left
Guna2Panel1.Location = New Point(0, 0)
Guna2Panel1.Name = "Guna2Panel1"
Guna2Panel1.ShadowDecoration.BorderRadius = 1000
Guna2Panel1.ShadowDecoration.CustomizableEdges = CustomizableEdges2
Guna2Panel1.Size = New Size(226, 797)
Guna2Panel1.TabIndex = 7
Button6.BackColor = Color.Maroon
Button6.FlatAppearance.BorderColor = Color.White
Button6.FlatAppearance.BorderSize = 0
Button6.FlatAppearance.MouseDownBackColor = Color.White
Button6.FlatStyle = FlatStyle.Flat
Button6.Font = New Font("Poppins", 12F, FontStyle.Regular, GraphicsUnit.Point, CByte(0))
Button6.ForeColor = Color.White
Button6.Image = My.Resources.Resources.cctv__2_
Button6.ImageAlign = ContentAlignment.MiddleLeft
Button6.Location = New Point(-1, 463)
Button6.Name = "Button6"
Button6.Padding = New Padding(5, 0, 0, 0)
Button6.Size = New Size(226, 45)
Button6.TabIndex = 16
Button6.Text = "CCTV"
Button6.TextAlign = ContentAlignment.MiddleLeft
Button6.TextImageRelation = TextImageRelation.ImageBeforeText
Button6.UseVisualStyleBackColor = False
Button7.BackColor = Color.Maroon
Button7.FlatAppearance.BorderColor = Color.RosyBrown
Button7.FlatAppearance.BorderSize = 0
Button7.FlatAppearance.MouseDownBackColor = Color.RosyBrown
Button7.FlatStyle = FlatStyle.Flat
Button7.Font = New Font("Poppins", 12F, FontStyle.Regular, GraphicsUnit.Point, CByte(0))
Button7.ForeColor = Color.White
Button7.Image = My.Resources.Resources.dashboard__3_
Button7.ImageAlign = ContentAlignment.MiddleLeft
Button7.Location = New Point(0, 239)
Button7.Name = "Button7"
Button7.Padding = New Padding(5, 0, 0, 0)
Button7.Size = New Size(226, 45)
Button7.TabIndex = 12
Button7.Text = "Dashboard"
Button7.TextAlign = ContentAlignment.MiddleLeft
Button7.TextImageRelation = TextImageRelation.ImageBeforeText
Button7.UseVisualStyleBackColor = False
Button8.BackColor = Color.Maroon
Button8.FlatAppearance.BorderColor = Color.White
Button8.FlatAppearance.BorderSize = 0
Button8.FlatAppearance.MouseDownBackColor = Color.White
Button8.FlatStyle = FlatStyle.Flat
Button8.Font = New Font("Poppins", 12F, FontStyle.Regular, GraphicsUnit.Point, CByte(0))
Button8.ForeColor = Color.White
Button8.Image = My.Resources.Resources.analysis
Button8.ImageAlign = ContentAlignment.MiddleLeft
Button8.Location = New Point(0, 407)
Button8.Name = "Button8"
Button8.Padding = New Padding(5, 0, 0, 0)
Button8.Size = New Size(226, 45)
Button8.TabIndex = 14
Button8.Text = "Inquire"
Button8.TextAlign = ContentAlignment.MiddleLeft
Button8.TextImageRelation = TextImageRelation.ImageBeforeText
Button8.UseVisualStyleBackColor = False
Button9.BackColor = Color.Maroon
Button9.FlatAppearance.BorderColor = Color.White
Button9.FlatAppearance.BorderSize = 0
Button9.FlatAppearance.MouseDownBackColor = Color.White
Button9.FlatStyle = FlatStyle.Flat
Button9.Font = New Font("Poppins", 12F, FontStyle.Regular, GraphicsUnit.Point, CByte(0))
Button9.ForeColor = Color.White
Button9.Image = My.Resources.Resources.calendar__2_
Button9.ImageAlign = ContentAlignment.MiddleLeft
Button9.Location = New Point(1, 351)
Button9.Name = "Button9"
Button9.Padding = New Padding(5, 0, 0, 0)
Button9.Size = New Size(226, 45)
Button9.TabIndex = 13
Button9.Text = "Bookings"
Button9.TextAlign = ContentAlignment.MiddleLeft
Button9.TextImageRelation = TextImageRelation.ImageBeforeText
Button9.UseVisualStyleBackColor = False
Button10.BackColor = Color.Maroon
Button10.FlatAppearance.BorderColor = Color.White
Button10.FlatAppearance.BorderSize = 0
Button10.FlatAppearance.MouseDownBackColor = Color.White
Button10.FlatStyle = FlatStyle.Flat
Button10.Font = New Font("Poppins", 12F, FontStyle.Regular, GraphicsUnit.Point, CByte(0))
Button10.ForeColor = Color.White
Button10.Image = My.Resources.Resources.add__1_
Button10.ImageAlign = ContentAlignment.MiddleLeft
Button10.Location = New Point(0, 296)
Button10.Name = "Button10"
Button10.Padding = New Padding(5, 0, 0, 0)
Button10.Size = New Size(226, 45)
Button10.TabIndex = 15
Button10.Text = "Registers"
Button10.TextAlign = ContentAlignment.MiddleLeft
Button10.TextImageRelation = TextImageRelation.ImageBeforeText
Button10.UseVisualStyleBackColor = False
Guna2Panel2.BackColor = Color.White
Guna2Panel2.Controls.Add(Label6)
Guna2Panel2.Controls.Add(PictureBox1)
Guna2Panel2.CustomizableEdges = CustomizableEdges3
Guna2Panel2.Location = New Point(223, -3)
Guna2Panel2.Name = "Guna2Panel2"
Guna2Panel2.ShadowDecoration.CustomizableEdges = CustomizableEdges4
Guna2Panel2.Size = New Size(1186, 75)
Guna2Panel2.TabIndex = 8
Label2.AutoSize = True
Label2.Font = New Font("Poppins", 12F, FontStyle.Bold, GraphicsUnit.Point, CByte(0))
Label2.ForeColor = Color.Maroon
Label2.Location = New Point(282, 126)
Label2.Name = "Label2"
Label2.Size = New Size(122, 36)
Label2.TabIndex = 10
Label2.Text = "BOOKINGS"
Label3.AutoSize = True
Label3.Font = New Font("Poppins", 9F, FontStyle.Regular, GraphicsUnit.Point, CByte(0))
Label3.Location = New Point(285, 157)
Label3.Name = "Label3"
Label3.Size = New Size(120, 26)
Label3.TabIndex = 11
Label3.Text = "List of booking"
DataGridViewCellStyle1.BackColor = Color.FromArgb(CByte(194), CByte(200), CByte(207))
Guna2DataGridView1.AlternatingRowsDefaultCellStyle = DataGridViewCellStyle1
Guna2DataGridView1.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.None
Guna2DataGridView1.BorderStyle = BorderStyle.Fixed3D
DataGridViewCellStyle2.Alignment = DataGridViewContentAlignment.MiddleLeft
DataGridViewCellStyle2.BackColor = Color.FromArgb(CByte(52), CByte(73), CByte(94))
DataGridViewCellStyle2.Font = New Font("Poppins", 7.8F, FontStyle.Regular, GraphicsUnit.Point,
CByte(0))
DataGridViewCellStyle2.ForeColor = Color.White
DataGridViewCellStyle2.SelectionBackColor = SystemColors.Highlight
DataGridViewCellStyle2.SelectionForeColor = SystemColors.HighlightText
DataGridViewCellStyle2.WrapMode = DataGridViewTriState.True
Guna2DataGridView1.ColumnHeadersDefaultCellStyle = DataGridViewCellStyle2
Guna2DataGridView1.ColumnHeadersHeight = 48
Guna2DataGridView1.ColumnHeadersHeightSizeMode =
DataGridViewColumnHeadersHeightSizeMode.EnableResizing
Guna2DataGridView1.Columns.AddRange(New DataGridViewColumn() {Column1, Column2,
Column3, Column4, Column5, Column6, Column7, Column8, Column9, Column10, Column11})
DataGridViewCellStyle3.Alignment = DataGridViewContentAlignment.MiddleLeft
DataGridViewCellStyle3.BackColor = Color.FromArgb(CByte(214), CByte(218), CByte(223))
DataGridViewCellStyle3.Font = New Font("Segoe UI", 9F)
DataGridViewCellStyle3.ForeColor = Color.Black
DataGridViewCellStyle3.SelectionBackColor = Color.FromArgb(CByte(119), CByte(133),
CByte(147))
DataGridViewCellStyle3.SelectionForeColor = Color.Black
DataGridViewCellStyle3.WrapMode = DataGridViewTriState.False
Guna2DataGridView1.DefaultCellStyle = DataGridViewCellStyle3
Guna2DataGridView1.GridColor = Color.FromArgb(CByte(193), CByte(199), CByte(206))
Guna2DataGridView1.Location = New Point(285, 228)
Guna2DataGridView1.Name = "Guna2DataGridView1"
Guna2DataGridView1.RowHeadersVisible = False
Guna2DataGridView1.RowHeadersWidth = 51
Guna2DataGridView1.RowTemplate.DefaultCellStyle.BackColor = Color.White
Guna2DataGridView1.RowTemplate.DefaultCellStyle.Font = New Font("Poppins", 7.8F,
FontStyle.Regular, GraphicsUnit.Point, CByte(0))
Guna2DataGridView1.RowTemplate.DefaultCellStyle.SelectionBackColor = Color.White
Guna2DataGridView1.Size = New Size(1090, 544)
Guna2DataGridView1.TabIndex = 15
Guna2DataGridView1.Theme =
Guna.UI2.WinForms.Enums.DataGridViewPresetThemes.WetAsphalt
Guna2DataGridView1.ThemeStyle.AlternatingRowsStyle.BackColor = Color.FromArgb(CByte(194),
CByte(200), CByte(207))
Guna2DataGridView1.ThemeStyle.AlternatingRowsStyle.Font = Nothing
Guna2DataGridView1.ThemeStyle.AlternatingRowsStyle.ForeColor = Color.Empty
Guna2DataGridView1.ThemeStyle.AlternatingRowsStyle.SelectionBackColor = Color.Empty
Guna2DataGridView1.ThemeStyle.AlternatingRowsStyle.SelectionForeColor = Color.Empty
Guna2DataGridView1.ThemeStyle.BackColor = Color.White
Guna2DataGridView1.ThemeStyle.GridColor = Color.FromArgb(CByte(193), CByte(199),
CByte(206))
Guna2DataGridView1.ThemeStyle.HeaderStyle.BackColor = Color.FromArgb(CByte(52), CByte(73),
CByte(94))
Guna2DataGridView1.ThemeStyle.HeaderStyle.BorderStyle =
DataGridViewHeaderBorderStyle.None
Guna2DataGridView1.ThemeStyle.HeaderStyle.Font = New Font("Poppins", 7.8F,
FontStyle.Regular, GraphicsUnit.Point, CByte(0))
Guna2DataGridView1.ThemeStyle.HeaderStyle.ForeColor = Color.White
Guna2DataGridView1.ThemeStyle.HeaderStyle.HeaightSizeMode =
DataGridViewColumnHeadersHeightSizeMode.EnableResizing
Guna2DataGridView1.ThemeStyle.HeaderStyle.Height = 48
Guna2DataGridView1.ThemeStyle.ReadOnly = False
Guna2DataGridView1.ThemeStyle.RowsStyle.BackColor = Color.FromArgb(CByte(214),
CByte(218), CByte(223))
Guna2DataGridView1.ThemeStyle.RowsStyle.BorderStyle =
DataGridViewCellBorderStyle.SingleHorizontal
Guna2DataGridView1.ThemeStyle.RowsStyle.Font = New Font("Segoe UI", 9F)
Guna2DataGridView1.ThemeStyle.RowsStyle.ForeColor = Color.Black
Guna2DataGridView1.ThemeStyle.RowsStyle.Height = 29
Guna2DataGridView1.ThemeStyle.RowsStyle.SelectionBackColor = Color.FromArgb(CByte(119),
CByte(133), CByte(147))
Guna2DataGridView1.ThemeStyle.RowsStyle.SelectionForeColor = Color.Black
Column1.HeaderText = "ID"
Column1.MinimumWidth = 6
Column1.Name = "Column1"
Column1.Width = 99
Column2.HeaderText = "Full Name"
Column2.MinimumWidth = 6
Column2.Name = "Column2"
Column2.Width = 99
Column3.HeaderText = "Email"
Column3.MinimumWidth = 6
Column3.Name = "Column3"
Column3.Width = 99
Column4.HeaderText = "Contact Number"
Column4.MinimumWidth = 6
Column4.Name = "Column4"
Column4.Width = 99
Column5.HeaderText = "Booking Date"
Column5.MinimumWidth = 6
Column5.Name = "Column5"
Column5.Width = 99
Column6.HeaderText = "Booking Time"
Column6.MinimumWidth = 6
Column6.Name = "Column6"
Column6.Width = 98
Column7.HeaderText = "Court Type"
Column7.MinimumWidth = 6
Column7.Name = "Column7"
Column7.Width = 99
Column8.HeaderText = "Court Variation"
Column8.MinimumWidth = 6
Column8.Name = "Column8"
Column8.Width = 99
Column9.HeaderText = " Price"
Column9.MinimumWidth = 6
Column9.Name = "Column9"
Column9.Width = 99
Column10.HeaderText = "Satatus"
Column10.MinimumWidth = 6
Column10.Name = "Column10"
Column10.Width = 99
Column11.HeaderText = "Payment Method"
Column11.MinimumWidth = 6
Column11.Name = "Column11"
Column11.Width = 99
AutoScaleDimensions = New SizeF(8F, 20F)
AutoScaleMode = AutoScaleMode.Font
ClientSize = New Size(1408, 797)
ControlBox = False
Controls.Add(Guna2DataGridView1)
Controls.Add(Label3)
Controls.Add(Label2)
Controls.Add(Guna2Panel1)
Controls.Add(Guna2Panel2)
FormBorderStyle = FormBorderStyle.FixedSingle
Name = "Booking"
StartPosition = FormStartPosition.CenterScreen
CType(PictureBox1, ComponentModel.ISupportInitialize).EndInit()
CType(PictureBox2, ComponentModel.ISupportInitialize).EndInit()
Guna2Panel1.ResumeLayout(False)
Guna2Panel1.PerformLayout()
Guna2Panel2.ResumeLayout(False)
Guna2Panel2.PerformLayout()
CType(Guna2DataGridView1, ComponentModel.ISupportInitialize).EndInit()
ResumeLayout(False)
PerformLayout()
End Sub
Friend WithEvents Label6 As Label
Friend WithEvents PictureBox1 As PictureBox
Friend WithEvents Label1 As Label
Friend WithEvents PictureBox2 As PictureBox
Friend WithEvents Guna2HtmlLabel1 As Guna.UI2.WinForms.Guna2HtmlLabel
Friend WithEvents Button5 As Button
Friend WithEvents Guna2Panel1 As Guna.UI2.WinForms.Guna2Panel
Friend WithEvents Guna2Panel2 As Guna.UI2.WinForms.Guna2Panel
Friend WithEvents Label2 As Label
Friend WithEvents Label3 As Label
Friend WithEvents Button6 As Button
Friend WithEvents Button7 As Button
Friend WithEvents Button8 As Button
Friend WithEvents Button9 As Button
Friend WithEvents Button10 As Button
Friend WithEvents Guna2DataGridView1 As Guna.UI2.WinForms.Guna2DataGridView
Friend WithEvents Column1 As DataGridViewTextBoxColumn
Friend WithEvents Column2 As DataGridViewTextBoxColumn
Friend WithEvents Column3 As DataGridViewTextBoxColumn
Friend WithEvents Column4 As DataGridViewTextBoxColumn
Friend WithEvents Column5 As DataGridViewTextBoxColumn
Friend WithEvents Column6 As DataGridViewTextBoxColumn
Friend WithEvents Column7 As DataGridViewTextBoxColumn
Friend WithEvents Column8 As DataGridViewTextBoxColumn
Friend WithEvents Column9 As DataGridViewTextBoxColumn
Friend WithEvents Column10 As DataGridViewTextBoxColumn
Friend WithEvents Column11 As DataGridViewTextBoxColumn
End Class
CCTV DESIGN CODE
<Global.Microsoft.VisualBasic.CompilerServices.DesignerGenerated()> _
Partial Class cctv
Inherits System.Windows.Forms.Form
<System.Diagnostics.DebuggerNonUserCode()> _
Protected Overrides Sub Dispose(ByVal disposing As Boolean)
Try
If disposing AndAlso components IsNot Nothing Then
components.Dispose()
End If
Finally
MyBase.Dispose(disposing)
End Try
End Sub
Private components As System.ComponentModel.IContainer
<System.Diagnostics.DebuggerStepThrough()> _
Private Sub InitializeComponent()
Dim CustomizableEdges1 As Guna.UI2.WinForms.Suite.CustomizableEdges = New
Guna.UI2.WinForms.Suite.CustomizableEdges()
Dim CustomizableEdges2 As Guna.UI2.WinForms.Suite.CustomizableEdges = New
Guna.UI2.WinForms.Suite.CustomizableEdges()
Dim CustomizableEdges3 As Guna.UI2.WinForms.Suite.CustomizableEdges = New
Guna.UI2.WinForms.Suite.CustomizableEdges()
Dim CustomizableEdges4 As Guna.UI2.WinForms.Suite.CustomizableEdges = New
Guna.UI2.WinForms.Suite.CustomizableEdges()
Label3 = New Label()
Label2 = New Label()
Button6 = New Button()
Button7 = New Button()
Button8 = New Button()
Button9 = New Button()
Button10 = New Button()
Guna2Panel1 = New Guna.UI2.WinForms.Guna2Panel()
Label1 = New Label()
PictureBox2 = New PictureBox()
Guna2HtmlLabel1 = New Guna.UI2.WinForms.Guna2HtmlLabel()
Button5 = New Button()
PictureBox1 = New PictureBox()
Guna2Panel2 = New Guna.UI2.WinForms.Guna2Panel()
Label6 = New Label()
Button1 = New Button()
VideoView1 = New LibVLCSharp.WinForms.VideoView()
Guna2Panel1.SuspendLayout()
CType(PictureBox2, ComponentModel.ISupportInitialize).BeginInit()
CType(PictureBox1, ComponentModel.ISupportInitialize).BeginInit()
Guna2Panel2.SuspendLayout()
CType(VideoView1, ComponentModel.ISupportInitialize).BeginInit()
SuspendLayout()
Label3.AutoSize = True
Label3.Font = New Font("Poppins", 9F, FontStyle.Regular, GraphicsUnit.Point, CByte(0))
Label3.Location = New Point(285, 158)
Label3.Name = "Label3"
Label3.Size = New Size(120, 26)
Label3.TabIndex = 19
Label3.Text = "List of booking"
Label2.AutoSize = True
Label2.Font = New Font("Poppins", 12F, FontStyle.Bold, GraphicsUnit.Point, CByte(0))
Label2.ForeColor = Color.Maroon
Label2.Location = New Point(282, 127)
Label2.Name = "Label2"
Label2.Size = New Size(72, 36)
Label2.TabIndex = 18
Label2.Text = "CCTV"
Button6.BackColor = Color.Maroon
Button6.FlatAppearance.BorderColor = Color.White
Button6.FlatAppearance.BorderSize = 0
Button6.FlatAppearance.MouseDownBackColor = Color.White
Button6.FlatStyle = FlatStyle.Flat
Button6.Font = New Font("Poppins", 12F, FontStyle.Regular, GraphicsUnit.Point, CByte(0))
Button6.ForeColor = Color.White
Button6.Image = My.Resources.Resources.cctv__2_
Button6.ImageAlign = ContentAlignment.MiddleLeft
Button6.Location = New Point(-1, 463)
Button6.Name = "Button6"
Button6.Padding = New Padding(5, 0, 0, 0)
Button6.Size = New Size(226, 45)
Button6.TabIndex = 16
Button6.Text = "CCTV"
Button6.TextAlign = ContentAlignment.MiddleLeft
Button6.TextImageRelation = TextImageRelation.ImageBeforeText
Button6.UseVisualStyleBackColor = False
Button7.BackColor = Color.Maroon
Button7.FlatAppearance.BorderColor = Color.RosyBrown
Button7.FlatAppearance.BorderSize = 0
Button7.FlatAppearance.MouseDownBackColor = Color.RosyBrown
Button7.FlatStyle = FlatStyle.Flat
Button7.Font = New Font("Poppins", 12F, FontStyle.Regular, GraphicsUnit.Point, CByte(0))
Button7.ForeColor = Color.White
Button7.Image = My.Resources.Resources.dashboard__3_
Button7.ImageAlign = ContentAlignment.MiddleLeft
Button7.Location = New Point(0, 239)
Button7.Name = "Button7"
Button7.Padding = New Padding(5, 0, 0, 0)
Button7.Size = New Size(226, 45)
Button7.TabIndex = 12
Button7.Text = "Dashboard"
Button7.TextAlign = ContentAlignment.MiddleLeft
Button7.TextImageRelation = TextImageRelation.ImageBeforeText
Button7.UseVisualStyleBackColor = False
Button8.BackColor = Color.Maroon
Button8.FlatAppearance.BorderColor = Color.White
Button8.FlatAppearance.BorderSize = 0
Button8.FlatAppearance.MouseDownBackColor = Color.White
Button8.FlatStyle = FlatStyle.Flat
Button8.Font = New Font("Poppins", 12F, FontStyle.Regular, GraphicsUnit.Point, CByte(0))
Button8.ForeColor = Color.White
Button8.Image = My.Resources.Resources.analysis
Button8.ImageAlign = ContentAlignment.MiddleLeft
Button8.Location = New Point(0, 407)
Button8.Name = "Button8"
Button8.Padding = New Padding(5, 0, 0, 0)
Button8.Size = New Size(226, 45)
Button8.TabIndex = 14
Button8.Text = "Inquire"
Button8.TextAlign = ContentAlignment.MiddleLeft
Button8.TextImageRelation = TextImageRelation.ImageBeforeText
Button8.UseVisualStyleBackColor = False
Button9.BackColor = Color.Maroon
Button9.FlatAppearance.BorderColor = Color.White
Button9.FlatAppearance.BorderSize = 0
Button9.FlatAppearance.MouseDownBackColor = Color.White
Button9.FlatStyle = FlatStyle.Flat
Button9.Font = New Font("Poppins", 12F, FontStyle.Regular, GraphicsUnit.Point, CByte(0))
Button9.ForeColor = Color.White
Button9.Image = My.Resources.Resources.calendar__2_
Button9.ImageAlign = ContentAlignment.MiddleLeft
Button9.Location = New Point(1, 351)
Button9.Name = "Button9"
Button9.Padding = New Padding(5, 0, 0, 0)
Button9.Size = New Size(226, 45)
Button9.TabIndex = 13
Button9.Text = "Bookings"
Button9.TextAlign = ContentAlignment.MiddleLeft
Button9.TextImageRelation = TextImageRelation.ImageBeforeText
Button9.UseVisualStyleBackColor = False
Button10.BackColor = Color.Maroon
Button10.FlatAppearance.BorderColor = Color.White
Button10.FlatAppearance.BorderSize = 0
Button10.FlatAppearance.MouseDownBackColor = Color.White
Button10.FlatStyle = FlatStyle.Flat
Button10.Font = New Font("Poppins", 12F, FontStyle.Regular, GraphicsUnit.Point, CByte(0))
Button10.ForeColor = Color.White
Button10.Image = My.Resources.Resources.add__1_
Button10.ImageAlign = ContentAlignment.MiddleLeft
Button10.Location = New Point(0, 296)
Button10.Name = "Button10"
Button10.Padding = New Padding(5, 0, 0, 0)
Button10.Size = New Size(226, 45)
Button10.TabIndex = 15
Button10.Text = "Registers"
Button10.TextAlign = ContentAlignment.MiddleLeft
Button10.TextImageRelation = TextImageRelation.ImageBeforeText
Button10.UseVisualStyleBackColor = False
Guna2Panel1.AllowDrop = True
Guna2Panel1.BackColor = Color.Maroon
Guna2Panel1.Controls.Add(Button6)
Guna2Panel1.Controls.Add(Label1)
Guna2Panel1.Controls.Add(Button7)
Guna2Panel1.Controls.Add(PictureBox2)
Guna2Panel1.Controls.Add(Button8)
Guna2Panel1.Controls.Add(Guna2HtmlLabel1)
Guna2Panel1.Controls.Add(Button9)
Guna2Panel1.Controls.Add(Button5)
Guna2Panel1.Controls.Add(Button10)
Guna2Panel1.CustomizableEdges = CustomizableEdges1
Guna2Panel1.Dock = DockStyle.Left
Guna2Panel1.Location = New Point(0, 0)
Guna2Panel1.Name = "Guna2Panel1"
Guna2Panel1.ShadowDecoration.BorderRadius = 1000
Guna2Panel1.ShadowDecoration.CustomizableEdges = CustomizableEdges2
Guna2Panel1.Size = New Size(226, 797)
Label1.AutoSize = True
Label1.Font = New Font("Poppins SemiBold", 9F, FontStyle.Bold, GraphicsUnit.Point, CByte(0))
Label1.ForeColor = Color.White
Label1.Location = New Point(66, 172)
Label1.Name = "Label1"
Label1.Size = New Size(62, 26)
Label1.TabIndex = 2
Label1.Text = "ADMIN"
PictureBox2.BackColor = Color.Transparent
PictureBox2.Image = My.Resources.Resources.user__1_
PictureBox2.Location = New Point(60, 84)
PictureBox2.Name = "PictureBox2"
PictureBox2.Size = New Size(82, 78)
PictureBox2.SizeMode = PictureBoxSizeMode.StretchImage
PictureBox2.TabIndex = 7
PictureBox2.TabStop = False
Guna2HtmlLabel1.BackColor = Color.Transparent
Guna2HtmlLabel1.Font = New Font("Poppins", 13.8F, FontStyle.Bold, GraphicsUnit.Point,
CByte(0))
Guna2HtmlLabel1.ForeColor = Color.White
Guna2HtmlLabel1.Location = New Point(37, 15)
Guna2HtmlLabel1.Name = "Guna2HtmlLabel1"
Guna2HtmlLabel1.Size = New Size(131, 42)
Guna2HtmlLabel1.TabIndex = 2
Guna2HtmlLabel1.Text = "CCR-RIZAL"
Button5.BackColor = Color.Maroon
Button5.FlatAppearance.BorderColor = Color.White
Button5.FlatAppearance.BorderSize = 0
Button5.FlatAppearance.MouseDownBackColor = Color.White
Button5.FlatStyle = FlatStyle.Flat
Button5.Font = New Font("Poppins", 10.8F, FontStyle.Regular, GraphicsUnit.Point, CByte(0))
Button5.ForeColor = Color.White
Button5.Image = My.Resources.Resources.logout__5_
Button5.ImageAlign = ContentAlignment.MiddleLeft
Button5.Location = New Point(0, 738)
Button5.Name = "Button5"
Button5.Padding = New Padding(5, 0, 0, 0)
Button5.Size = New Size(226, 44)
Button5.TabIndex = 6
Button5.Text = "Logout"
Button5.TextAlign = ContentAlignment.MiddleLeft
Button5.TextImageRelation = TextImageRelation.ImageBeforeText
Button5.UseVisualStyleBackColor = False
PictureBox1.Image = My.Resources.Resources.logo_png
PictureBox1.Location = New Point(8, 8)
PictureBox1.Name = "PictureBox1"
PictureBox1.Size = New Size(71, 64)
PictureBox1.SizeMode = PictureBoxSizeMode.StretchImage
PictureBox1.TabIndex = 7
PictureBox1.TabStop = False
Guna2Panel2.BackColor = Color.White
Guna2Panel2.Controls.Add(Label6)
Guna2Panel2.Controls.Add(PictureBox1)
Guna2Panel2.CustomizableEdges = CustomizableEdges3
Guna2Panel2.Location = New Point(223, -2)
Guna2Panel2.Name = "Guna2Panel2"
Guna2Panel2.ShadowDecoration.CustomizableEdges = CustomizableEdges4
Guna2Panel2.Size = New Size(1186, 75)
Guna2Panel2.TabIndex = 17
Label6.AutoSize = True
Label6.Font = New Font("Poppins", 13.8F, FontStyle.Bold, GraphicsUnit.Point, CByte(0))
Label6.ForeColor = Color.Maroon
Label6.Location = New Point(83, 22)
Label6.Name = "Label6"
Label6.Size = New Size(375, 40)
Label6.TabIndex = 6
Label6.Text = "COVERED COURT RESERVATION"
Button1.BackColor = Color.Maroon
Button1.Font = New Font("Poppins", 10.2F, FontStyle.Bold, GraphicsUnit.Point, CByte(0))
Button1.ForeColor = Color.White
Button1.Location = New Point(280, 711)
Button1.Name = "Button1"
Button1.Size = New Size(173, 46)
Button1.TabIndex = 21
Button1.Text = "START"
Button1.UseVisualStyleBackColor = False
VideoView1.BackColor = Color.Black
VideoView1.Location = New Point(286, 213)
VideoView1.MediaPlayer = Nothing
VideoView1.Name = "VideoView1"
VideoView1.Size = New Size(1067, 462)
VideoView1.TabIndex = 22
VideoView1.Text = "VideoView1"
AutoScaleDimensions = New SizeF(8F, 20F)
AutoScaleMode = AutoScaleMode.Font
ClientSize = New Size(1408, 797)
ControlBox = False
Controls.Add(VideoView1)
Controls.Add(Button1)
Controls.Add(Label3)
Controls.Add(Label2)
Controls.Add(Guna2Panel1)
Controls.Add(Guna2Panel2)
FormBorderStyle = FormBorderStyle.FixedSingle
Name = "cctv"
StartPosition = FormStartPosition.CenterScreen
Guna2Panel1.ResumeLayout(False)
Guna2Panel1.PerformLayout()
CType(PictureBox2, ComponentModel.ISupportInitialize).EndInit()
CType(PictureBox1, ComponentModel.ISupportInitialize).EndInit()
Guna2Panel2.ResumeLayout(False)
Guna2Panel2.PerformLayout()
CType(VideoView1, ComponentModel.ISupportInitialize).EndInit()
ResumeLayout(False)
PerformLayout()
End Sub
Friend WithEvents Label3 As Label
Friend WithEvents Label2 As Label
Friend WithEvents Button6 As Button
Friend WithEvents Button7 As Button
Friend WithEvents Button8 As Button
Friend WithEvents Button9 As Button
Friend WithEvents Button10 As Button
Friend WithEvents Guna2Panel1 As Guna.UI2.WinForms.Guna2Panel
Friend WithEvents Label1 As Label
Friend WithEvents PictureBox2 As PictureBox
Friend WithEvents Guna2HtmlLabel1 As Guna.UI2.WinForms.Guna2HtmlLabel
Friend WithEvents Button5 As Button
Friend WithEvents PictureBox1 As PictureBox
Friend WithEvents Guna2Panel2 As Guna.UI2.WinForms.Guna2Panel
Friend WithEvents Label6 As Label
Friend WithEvents Button1 As Button
Friend WithEvents VideoView1 As LibVLCSharp.WinForms.VideoView
End Class




ADMIN DESIGN 

<Global.Microsoft.VisualBasic.CompilerServices.DesignerGenerated()> _
Partial Class admin
    Inherits System.Windows.Forms.Form

    
    <System.Diagnostics.DebuggerNonUserCode()> _
    Protected Overrides Sub Dispose(ByVal disposing As Boolean)
        Try
            If disposing AndAlso components IsNot Nothing Then
                components.Dispose()
            End If
        Finally
            MyBase.Dispose(disposing)
        End Try
    End Sub

  
    Private components As System.ComponentModel.IContainer

   
    <System.Diagnostics.DebuggerStepThrough()> _
    Private Sub InitializeComponent()
        PictureBox1 = New PictureBox()
        Panel1 = New Panel()
        txtBoxPassword = New TextBox()
        txtBoxUsername = New TextBox()
        Button1 = New Button()
        PictureBox3 = New PictureBox()
        PictureBox2 = New PictureBox()
        Panel2 = New Panel()
        Label1 = New Label()
        CType(PictureBox1, ComponentModel.ISupportInitialize).BeginInit()
        Panel1.SuspendLayout()
        CType(PictureBox3, ComponentModel.ISupportInitialize).BeginInit()
        CType(PictureBox2, ComponentModel.ISupportInitialize).BeginInit()
        Panel2.SuspendLayout()
        SuspendLayout()
       
        PictureBox1.Image = My.Resources.Resources._462536867_1210787480222630_3897406019901242136_n
        PictureBox1.Location = New Point(-7, -5)
        PictureBox1.Name = "PictureBox1"
        PictureBox1.Size = New Size(751, 476)
        PictureBox1.SizeMode = PictureBoxSizeMode.StretchImage
        PictureBox1.TabIndex = 0
        PictureBox1.TabStop = False
        ' 
        ' Panel1
        ' 
        Panel1.Controls.Add(txtBoxPassword)
        Panel1.Controls.Add(txtBoxUsername)
        Panel1.Controls.Add(Button1)
        Panel1.Controls.Add(PictureBox3)
        Panel1.Controls.Add(PictureBox2)
        Panel1.Location = New Point(185, 45)
        Panel1.Name = "Panel1"
        Panel1.Size = New Size(347, 360)
        Panel1.TabIndex = 1
       
        txtBoxPassword.Location = New Point(93, 166)
        txtBoxPassword.Multiline = True
        txtBoxPassword.Name = "txtBoxPassword"
        txtBoxPassword.Size = New Size(214, 38)
        txtBoxPassword.TabIndex = 6
      
        txtBoxUsername.Location = New Point(94, 118)
        txtBoxUsername.Multiline = True
        txtBoxUsername.Name = "txtBoxUsername"
        txtBoxUsername.Size = New Size(214, 38)
        txtBoxUsername.TabIndex = 5
        
        Button1.BackColor = Color.Maroon
        Button1.Font = New Font("Poppins", 12F, FontStyle.Bold, GraphicsUnit.Point, CByte(0))
        Button1.ForeColor = Color.White
        Button1.Location = New Point(75, 230)
        Button1.Name = "Button1"
        Button1.Size = New Size(200, 49)
        Button1.TabIndex = 4
        Button1.Text = "LOGIN"
        Button1.UseVisualStyleBackColor = False
        
        PictureBox3.Image = My.Resources.Resources.passwordlock1
        PictureBox3.Location = New Point(49, 166)
        PictureBox3.Name = "PictureBox3"
        PictureBox3.Size = New Size(45, 38)
        PictureBox3.SizeMode = PictureBoxSizeMode.StretchImage
        PictureBox3.TabIndex = 3
        PictureBox3.TabStop = False
        
        PictureBox2.Image = My.Resources.Resources.userrrr
        PictureBox2.Location = New Point(49, 118)
        PictureBox2.Name = "PictureBox2"
        PictureBox2.Size = New Size(45, 38)
        PictureBox2.SizeMode = PictureBoxSizeMode.StretchImage
        PictureBox2.TabIndex = 2
        PictureBox2.TabStop = False
        
        Panel2.BackColor = Color.Maroon
        Panel2.Controls.Add(Label1)
        Panel2.Location = New Point(185, 45)
        Panel2.Name = "Panel2"
        Panel2.Size = New Size(348, 56)
        Panel2.TabIndex = 0
      
        Label1.AutoSize = True
        Label1.Font = New Font("Poppins", 12F, FontStyle.Bold, GraphicsUnit.Point, CByte(0))
        Label1.ForeColor = Color.White
        Label1.Location = New Point(99, 14)
        Label1.Name = "Label1"
        Label1.Size = New Size(150, 36)
        Label1.TabIndex = 0
        Label1.Text = "ADMIN LOGIN"
        
        AutoScaleDimensions = New SizeF(8F, 20F)
        AutoScaleMode = AutoScaleMode.Font
        ClientSize = New Size(735, 467)
        ControlBox = False
        Controls.Add(Panel2)
        Controls.Add(Panel1)
        Controls.Add(PictureBox1)
        FormBorderStyle = FormBorderStyle.FixedSingle
        Name = "admin"
        StartPosition = FormStartPosition.CenterScreen
        CType(PictureBox1, ComponentModel.ISupportInitialize).EndInit()
        Panel1.ResumeLayout(False)
        Panel1.PerformLayout()
        CType(PictureBox3, ComponentModel.ISupportInitialize).EndInit()
        CType(PictureBox2, ComponentModel.ISupportInitialize).EndInit()
        Panel2.ResumeLayout(False)
        Panel2.PerformLayout()
        ResumeLayout(False)
    End Sub

    Friend WithEvents PictureBox1 As PictureBox
    Friend WithEvents Panel1 As Panel
    Friend WithEvents Panel2 As Panel
    Friend WithEvents Label1 As Label
    Friend WithEvents PictureBox3 As PictureBox
    Friend WithEvents PictureBox2 As PictureBox
    Friend WithEvents Button1 As Button
    Friend WithEvents txtBoxUsername As TextBox
    Friend WithEvents txtBoxPassword As TextBox
End Class

ADMIN

Imports MongoDB.Bson
Imports MongoDB.Driver

Public Class admin
    Private _adminCollection As IMongoCollection(Of BsonDocument)

    Public Sub New()
        InitializeComponent()

        txtBoxPassword.PasswordChar = "*"c
    End Sub

    Private Sub Button1_Click(sender As Object, e As EventArgs) Handles Button1.Click
        ConnectToMongoDB()
    End Sub

    Private Sub ConnectToMongoDB()
        Try

            Dim connectionString As String = "mongodb+srv://iamkiethesbo:Nuisanc3@cluster0.jutx2.mongodb.net/capstoneDb"

            Dim client As MongoClient = New MongoClient(connectionString)

            Dim database As IMongoDatabase = client.GetDatabase("capstoneDb")

            _adminCollection = database.GetCollection(Of BsonDocument)("admin")

            Dim enteredUsername As String = txtBoxUsername.Text
            Dim enteredPassword As String = txtBoxPassword.Text

            Dim filter = Builders(Of BsonDocument).Filter.Eq(Of String)("username", enteredUsername) And
                         Builders(Of BsonDocument).Filter.Eq(Of String)("password", enteredPassword)

            Dim user = _adminCollection.Find(filter).FirstOrDefault()

            If user IsNot Nothing Then

                MessageBox.Show("Login Success!")
                Dim dashboard As New dashboard()
                dashboard.Show()
                Me.Hide()
            Else

                MessageBox.Show("Invalid Username or Password.")
            End If
        Catch ex As Exception

            MessageBox.Show("Error: " & ex.Message)
        End Try
    End Sub
End Class

BOOKING DESIGNER CODE



<Global.Microsoft.VisualBasic.CompilerServices.DesignerGenerated()> _
Partial Class booking
    Inherits System.Windows.Forms.Form

   
    <System.Diagnostics.DebuggerNonUserCode()> _
    Protected Overrides Sub Dispose(ByVal disposing As Boolean)
        Try
            If disposing AndAlso components IsNot Nothing Then
                components.Dispose()
            End If
        Finally
            MyBase.Dispose(disposing)
        End Try
    End Sub

  
    Private components As System.ComponentModel.IContainer

   
    <System.Diagnostics.DebuggerStepThrough()> _
    Private Sub InitializeComponent()
        Dim CustomizableEdges1 As Guna.UI2.WinForms.Suite.CustomizableEdges = New Guna.UI2.WinForms.Suite.CustomizableEdges()
        Dim CustomizableEdges2 As Guna.UI2.WinForms.Suite.CustomizableEdges = New Guna.UI2.WinForms.Suite.CustomizableEdges()
        Dim CustomizableEdges3 As Guna.UI2.WinForms.Suite.CustomizableEdges = New Guna.UI2.WinForms.Suite.CustomizableEdges()
        Dim CustomizableEdges4 As Guna.UI2.WinForms.Suite.CustomizableEdges = New Guna.UI2.WinForms.Suite.CustomizableEdges()
        Dim DataGridViewCellStyle1 As DataGridViewCellStyle = New DataGridViewCellStyle()
        Dim DataGridViewCellStyle2 As DataGridViewCellStyle = New DataGridViewCellStyle()
        Dim DataGridViewCellStyle3 As DataGridViewCellStyle = New DataGridViewCellStyle()
        Label6 = New Label()
        PictureBox1 = New PictureBox()
        Label1 = New Label()
        PictureBox2 = New PictureBox()
        Guna2HtmlLabel1 = New Guna.UI2.WinForms.Guna2HtmlLabel()
        Button5 = New Button()
        Guna2Panel1 = New Guna.UI2.WinForms.Guna2Panel()
        Button6 = New Button()
        Button7 = New Button()
        Button8 = New Button()
        Button9 = New Button()
        Button10 = New Button()
        Guna2Panel2 = New Guna.UI2.WinForms.Guna2Panel()
        Label2 = New Label()
        Label3 = New Label()
        Guna2DataGridView1 = New Guna.UI2.WinForms.Guna2DataGridView()
        Column1 = New DataGridViewTextBoxColumn()
        Column2 = New DataGridViewTextBoxColumn()
        Column3 = New DataGridViewTextBoxColumn()
        Column4 = New DataGridViewTextBoxColumn()
        Column5 = New DataGridViewTextBoxColumn()
        Column6 = New DataGridViewTextBoxColumn()
        Column7 = New DataGridViewTextBoxColumn()
        Column8 = New DataGridViewTextBoxColumn()
        Column9 = New DataGridViewTextBoxColumn()
        Column10 = New DataGridViewTextBoxColumn()
        Column11 = New DataGridViewTextBoxColumn()
        CType(PictureBox1, ComponentModel.ISupportInitialize).BeginInit()
        CType(PictureBox2, ComponentModel.ISupportInitialize).BeginInit()
        Guna2Panel1.SuspendLayout()
        Guna2Panel2.SuspendLayout()
        CType(Guna2DataGridView1, ComponentModel.ISupportInitialize).BeginInit()
        SuspendLayout()
       
        Label6.AutoSize = True
        Label6.Font = New Font("Poppins", 13.8F, FontStyle.Bold, GraphicsUnit.Point, CByte(0))
        Label6.ForeColor = Color.Maroon
        Label6.Location = New Point(83, 22)
        Label6.Name = "Label6"
        Label6.Size = New Size(375, 40)
        Label6.TabIndex = 6
        Label6.Text = "COVERED COURT RESERVATION"
       
        PictureBox1.Image = My.Resources.Resources.logo_png
        PictureBox1.Location = New Point(8, 8)
        PictureBox1.Name = "PictureBox1"
        PictureBox1.Size = New Size(71, 64)
        PictureBox1.SizeMode = PictureBoxSizeMode.StretchImage
        PictureBox1.TabIndex = 7
        PictureBox1.TabStop = False
       
        Label1.AutoSize = True
        Label1.Font = New Font("Poppins SemiBold", 9F, FontStyle.Bold, GraphicsUnit.Point, CByte(0))
        Label1.ForeColor = Color.White
        Label1.Location = New Point(66, 172)
        Label1.Name = "Label1"
        Label1.Size = New Size(62, 26)
        Label1.TabIndex = 2
        Label1.Text = "ADMIN"
        
        PictureBox2.BackColor = Color.Transparent
        PictureBox2.Image = My.Resources.Resources.user__1_
        PictureBox2.Location = New Point(60, 84)
        PictureBox2.Name = "PictureBox2"
        PictureBox2.Size = New Size(82, 78)
        PictureBox2.SizeMode = PictureBoxSizeMode.StretchImage
        PictureBox2.TabIndex = 7
        PictureBox2.TabStop = False
       
        Guna2HtmlLabel1.BackColor = Color.Transparent
        Guna2HtmlLabel1.Font = New Font("Poppins", 13.8F, FontStyle.Bold, GraphicsUnit.Point, CByte(0))
        Guna2HtmlLabel1.ForeColor = Color.White
        Guna2HtmlLabel1.Location = New Point(37, 15)
        Guna2HtmlLabel1.Name = "Guna2HtmlLabel1"
        Guna2HtmlLabel1.Size = New Size(131, 42)
        Guna2HtmlLabel1.TabIndex = 2
        Guna2HtmlLabel1.Text = "CCR-RIZAL"
        
        Button5.BackColor = Color.Maroon
        Button5.FlatAppearance.BorderColor = Color.White
        Button5.FlatAppearance.BorderSize = 0
        Button5.FlatAppearance.MouseDownBackColor = Color.White
        Button5.FlatStyle = FlatStyle.Flat
        Button5.Font = New Font("Poppins", 10.8F, FontStyle.Regular, GraphicsUnit.Point, CByte(0))
        Button5.ForeColor = Color.White
        Button5.Image = My.Resources.Resources.logout__5_
        Button5.ImageAlign = ContentAlignment.MiddleLeft
        Button5.Location = New Point(0, 738)
        Button5.Name = "Button5"
        Button5.Padding = New Padding(5, 0, 0, 0)
        Button5.Size = New Size(226, 44)
        Button5.TabIndex = 6
        Button5.Text = "Logout"
        Button5.TextAlign = ContentAlignment.MiddleLeft
        Button5.TextImageRelation = TextImageRelation.ImageBeforeText
        Button5.UseVisualStyleBackColor = False
       
        Guna2Panel1.AllowDrop = True
        Guna2Panel1.BackColor = Color.Maroon
        Guna2Panel1.Controls.Add(Button6)
        Guna2Panel1.Controls.Add(Label1)
        Guna2Panel1.Controls.Add(Button7)
        Guna2Panel1.Controls.Add(PictureBox2)
        Guna2Panel1.Controls.Add(Button8)
        Guna2Panel1.Controls.Add(Guna2HtmlLabel1)
        Guna2Panel1.Controls.Add(Button9)
        Guna2Panel1.Controls.Add(Button5)
        Guna2Panel1.Controls.Add(Button10)
        Guna2Panel1.CustomizableEdges = CustomizableEdges1
        Guna2Panel1.Dock = DockStyle.Left
        Guna2Panel1.Location = New Point(0, 0)
        Guna2Panel1.Name = "Guna2Panel1"
        Guna2Panel1.ShadowDecoration.BorderRadius = 1000
        Guna2Panel1.ShadowDecoration.CustomizableEdges = CustomizableEdges2
        Guna2Panel1.Size = New Size(226, 797)
        Guna2Panel1.TabIndex = 7
        
        Button6.BackColor = Color.Maroon
        Button6.FlatAppearance.BorderColor = Color.White
        Button6.FlatAppearance.BorderSize = 0
        Button6.FlatAppearance.MouseDownBackColor = Color.White
        Button6.FlatStyle = FlatStyle.Flat
        Button6.Font = New Font("Poppins", 12F, FontStyle.Regular, GraphicsUnit.Point, CByte(0))
        Button6.ForeColor = Color.White
        Button6.Image = My.Resources.Resources.cctv__2_
        Button6.ImageAlign = ContentAlignment.MiddleLeft
        Button6.Location = New Point(-1, 463)
        Button6.Name = "Button6"
        Button6.Padding = New Padding(5, 0, 0, 0)
        Button6.Size = New Size(226, 45)
        Button6.TabIndex = 16
        Button6.Text = "CCTV"
        Button6.TextAlign = ContentAlignment.MiddleLeft
        Button6.TextImageRelation = TextImageRelation.ImageBeforeText
        Button6.UseVisualStyleBackColor = False
      
        Button7.BackColor = Color.Maroon
        Button7.FlatAppearance.BorderColor = Color.RosyBrown
        Button7.FlatAppearance.BorderSize = 0
        Button7.FlatAppearance.MouseDownBackColor = Color.RosyBrown
        Button7.FlatStyle = FlatStyle.Flat
        Button7.Font = New Font("Poppins", 12F, FontStyle.Regular, GraphicsUnit.Point, CByte(0))
        Button7.ForeColor = Color.White
        Button7.Image = My.Resources.Resources.dashboard__3_
        Button7.ImageAlign = ContentAlignment.MiddleLeft
        Button7.Location = New Point(0, 239)
        Button7.Name = "Button7"
        Button7.Padding = New Padding(5, 0, 0, 0)
        Button7.Size = New Size(226, 45)
        Button7.TabIndex = 12
        Button7.Text = "Dashboard"
        Button7.TextAlign = ContentAlignment.MiddleLeft
        Button7.TextImageRelation = TextImageRelation.ImageBeforeText
        Button7.UseVisualStyleBackColor = False
       
        Button8.BackColor = Color.Maroon
        Button8.FlatAppearance.BorderColor = Color.White
        Button8.FlatAppearance.BorderSize = 0
        Button8.FlatAppearance.MouseDownBackColor = Color.White
        Button8.FlatStyle = FlatStyle.Flat
        Button8.Font = New Font("Poppins", 12F, FontStyle.Regular, GraphicsUnit.Point, CByte(0))
        Button8.ForeColor = Color.White
        Button8.Image = My.Resources.Resources.analysis
        Button8.ImageAlign = ContentAlignment.MiddleLeft
        Button8.Location = New Point(0, 407)
        Button8.Name = "Button8"
        Button8.Padding = New Padding(5, 0, 0, 0)
        Button8.Size = New Size(226, 45)
        Button8.TabIndex = 14
        Button8.Text = "Inquire"
        Button8.TextAlign = ContentAlignment.MiddleLeft
        Button8.TextImageRelation = TextImageRelation.ImageBeforeText
        Button8.UseVisualStyleBackColor = False
        
        Button9.BackColor = Color.Maroon
        Button9.FlatAppearance.BorderColor = Color.White
        Button9.FlatAppearance.BorderSize = 0
        Button9.FlatAppearance.MouseDownBackColor = Color.White
        Button9.FlatStyle = FlatStyle.Flat
        Button9.Font = New Font("Poppins", 12F, FontStyle.Regular, GraphicsUnit.Point, CByte(0))
        Button9.ForeColor = Color.White
        Button9.Image = My.Resources.Resources.calendar__2_
        Button9.ImageAlign = ContentAlignment.MiddleLeft
        Button9.Location = New Point(1, 351)
        Button9.Name = "Button9"
        Button9.Padding = New Padding(5, 0, 0, 0)
        Button9.Size = New Size(226, 45)
        Button9.TabIndex = 13
        Button9.Text = "Bookings"
        Button9.TextAlign = ContentAlignment.MiddleLeft
        Button9.TextImageRelation = TextImageRelation.ImageBeforeText
        Button9.UseVisualStyleBackColor = False
         
        Button10.BackColor = Color.Maroon
        Button10.FlatAppearance.BorderColor = Color.White
        Button10.FlatAppearance.BorderSize = 0
        Button10.FlatAppearance.MouseDownBackColor = Color.White
        Button10.FlatStyle = FlatStyle.Flat
        Button10.Font = New Font("Poppins", 12F, FontStyle.Regular, GraphicsUnit.Point, CByte(0))
        Button10.ForeColor = Color.White
        Button10.Image = My.Resources.Resources.add__1_
        Button10.ImageAlign = ContentAlignment.MiddleLeft
        Button10.Location = New Point(0, 296)
        Button10.Name = "Button10"
        Button10.Padding = New Padding(5, 0, 0, 0)
        Button10.Size = New Size(226, 45)
        Button10.TabIndex = 15
        Button10.Text = "Registers"
        Button10.TextAlign = ContentAlignment.MiddleLeft
        Button10.TextImageRelation = TextImageRelation.ImageBeforeText
        Button10.UseVisualStyleBackColor = False
       
        Guna2Panel2.BackColor = Color.White
        Guna2Panel2.Controls.Add(Label6)
        Guna2Panel2.Controls.Add(PictureBox1)
        Guna2Panel2.CustomizableEdges = CustomizableEdges3
        Guna2Panel2.Location = New Point(223, -3)
        Guna2Panel2.Name = "Guna2Panel2"
        Guna2Panel2.ShadowDecoration.CustomizableEdges = CustomizableEdges4
        Guna2Panel2.Size = New Size(1186, 75)
        Guna2Panel2.TabIndex = 8
       
        Label2.AutoSize = True
        Label2.Font = New Font("Poppins", 12F, FontStyle.Bold, GraphicsUnit.Point, CByte(0))
        Label2.ForeColor = Color.Maroon
        Label2.Location = New Point(282, 126)
        Label2.Name = "Label2"
        Label2.Size = New Size(122, 36)
        Label2.TabIndex = 10
        Label2.Text = "BOOKINGS"
         
        Label3.AutoSize = True
        Label3.Font = New Font("Poppins", 9F, FontStyle.Regular, GraphicsUnit.Point, CByte(0))
        Label3.Location = New Point(285, 157)
        Label3.Name = "Label3"
        Label3.Size = New Size(120, 26)
        Label3.TabIndex = 11
        Label3.Text = "List of booking"
       
        DataGridViewCellStyle1.BackColor = Color.FromArgb(CByte(194), CByte(200), CByte(207))
        Guna2DataGridView1.AlternatingRowsDefaultCellStyle = DataGridViewCellStyle1
        Guna2DataGridView1.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.None
        Guna2DataGridView1.BorderStyle = BorderStyle.Fixed3D
        DataGridViewCellStyle2.Alignment = DataGridViewContentAlignment.MiddleLeft
        DataGridViewCellStyle2.BackColor = Color.FromArgb(CByte(52), CByte(73), CByte(94))
        DataGridViewCellStyle2.Font = New Font("Poppins", 7.8F, FontStyle.Regular, GraphicsUnit.Point, CByte(0))
        DataGridViewCellStyle2.ForeColor = Color.White
        DataGridViewCellStyle2.SelectionBackColor = SystemColors.Highlight
        DataGridViewCellStyle2.SelectionForeColor = SystemColors.HighlightText
        DataGridViewCellStyle2.WrapMode = DataGridViewTriState.True
        Guna2DataGridView1.ColumnHeadersDefaultCellStyle = DataGridViewCellStyle2
        Guna2DataGridView1.ColumnHeadersHeight = 48
        Guna2DataGridView1.ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode.EnableResizing
        Guna2DataGridView1.Columns.AddRange(New DataGridViewColumn() {Column1, Column2, Column3, Column4, Column5, Column6, Column7, Column8, Column9, Column10, Column11})
        DataGridViewCellStyle3.Alignment = DataGridViewContentAlignment.MiddleLeft
        DataGridViewCellStyle3.BackColor = Color.FromArgb(CByte(214), CByte(218), CByte(223))
        DataGridViewCellStyle3.Font = New Font("Segoe UI", 9F)
        DataGridViewCellStyle3.ForeColor = Color.Black
        DataGridViewCellStyle3.SelectionBackColor = Color.FromArgb(CByte(119), CByte(133), CByte(147))
        DataGridViewCellStyle3.SelectionForeColor = Color.Black
        DataGridViewCellStyle3.WrapMode = DataGridViewTriState.False
        Guna2DataGridView1.DefaultCellStyle = DataGridViewCellStyle3
        Guna2DataGridView1.GridColor = Color.FromArgb(CByte(193), CByte(199), CByte(206))
        Guna2DataGridView1.Location = New Point(285, 228)
        Guna2DataGridView1.Name = "Guna2DataGridView1"
        Guna2DataGridView1.RowHeadersVisible = False
        Guna2DataGridView1.RowHeadersWidth = 51
        Guna2DataGridView1.RowTemplate.DefaultCellStyle.BackColor = Color.White
        Guna2DataGridView1.RowTemplate.DefaultCellStyle.Font = New Font("Poppins", 7.8F, FontStyle.Regular, GraphicsUnit.Point, CByte(0))
        Guna2DataGridView1.RowTemplate.DefaultCellStyle.SelectionBackColor = Color.White
        Guna2DataGridView1.Size = New Size(1090, 544)
        Guna2DataGridView1.TabIndex = 15
        Guna2DataGridView1.Theme = Guna.UI2.WinForms.Enums.DataGridViewPresetThemes.WetAsphalt
        Guna2DataGridView1.ThemeStyle.AlternatingRowsStyle.BackColor = Color.FromArgb(CByte(194), CByte(200), CByte(207))
        Guna2DataGridView1.ThemeStyle.AlternatingRowsStyle.Font = Nothing
        Guna2DataGridView1.ThemeStyle.AlternatingRowsStyle.ForeColor = Color.Empty
        Guna2DataGridView1.ThemeStyle.AlternatingRowsStyle.SelectionBackColor = Color.Empty
        Guna2DataGridView1.ThemeStyle.AlternatingRowsStyle.SelectionForeColor = Color.Empty
        Guna2DataGridView1.ThemeStyle.BackColor = Color.White
        Guna2DataGridView1.ThemeStyle.GridColor = Color.FromArgb(CByte(193), CByte(199), CByte(206))
        Guna2DataGridView1.ThemeStyle.HeaderStyle.BackColor = Color.FromArgb(CByte(52), CByte(73), CByte(94))
        Guna2DataGridView1.ThemeStyle.HeaderStyle.BorderStyle = DataGridViewHeaderBorderStyle.None
        Guna2DataGridView1.ThemeStyle.HeaderStyle.Font = New Font("Poppins", 7.8F, FontStyle.Regular, GraphicsUnit.Point, CByte(0))
        Guna2DataGridView1.ThemeStyle.HeaderStyle.ForeColor = Color.White
        Guna2DataGridView1.ThemeStyle.HeaderStyle.HeaightSizeMode = DataGridViewColumnHeadersHeightSizeMode.EnableResizing
        Guna2DataGridView1.ThemeStyle.HeaderStyle.Height = 48
        Guna2DataGridView1.ThemeStyle.ReadOnly = False
        Guna2DataGridView1.ThemeStyle.RowsStyle.BackColor = Color.FromArgb(CByte(214), CByte(218), CByte(223))
        Guna2DataGridView1.ThemeStyle.RowsStyle.BorderStyle = DataGridViewCellBorderStyle.SingleHorizontal
        Guna2DataGridView1.ThemeStyle.RowsStyle.Font = New Font("Segoe UI", 9F)
        Guna2DataGridView1.ThemeStyle.RowsStyle.ForeColor = Color.Black
        Guna2DataGridView1.ThemeStyle.RowsStyle.Height = 29
        Guna2DataGridView1.ThemeStyle.RowsStyle.SelectionBackColor = Color.FromArgb(CByte(119), CByte(133), CByte(147))
        Guna2DataGridView1.ThemeStyle.RowsStyle.SelectionForeColor = Color.Black
       
        Column1.HeaderText = "ID"
        Column1.MinimumWidth = 6
        Column1.Name = "Column1"
        Column1.Width = 99
        
        Column2.HeaderText = "Full Name"
        Column2.MinimumWidth = 6
        Column2.Name = "Column2"
        Column2.Width = 99
        
        Column3.HeaderText = "Email"
        Column3.MinimumWidth = 6
        Column3.Name = "Column3"
        Column3.Width = 99
       
        Column4.HeaderText = "Contact Number"
        Column4.MinimumWidth = 6
        Column4.Name = "Column4"
        Column4.Width = 99
        
        Column5.HeaderText = "Booking Date"
        Column5.MinimumWidth = 6
        Column5.Name = "Column5"
        Column5.Width = 99
       
        Column6.HeaderText = "Booking Time"
        Column6.MinimumWidth = 6
        Column6.Name = "Column6"
        Column6.Width = 98
       
        Column7.HeaderText = "Court Type"
        Column7.MinimumWidth = 6
        Column7.Name = "Column7"
        Column7.Width = 99
       
        Column8.HeaderText = "Court Variation"
        Column8.MinimumWidth = 6
        Column8.Name = "Column8"
        Column8.Width = 99
       
        Column9.HeaderText = " Price"
        Column9.MinimumWidth = 6
        Column9.Name = "Column9"
        Column9.Width = 99
        
        Column10.HeaderText = "Satatus"
        Column10.MinimumWidth = 6
        Column10.Name = "Column10"
        Column10.Width = 99
        
        Column11.HeaderText = "Payment Method"
        Column11.MinimumWidth = 6
        Column11.Name = "Column11"
        Column11.Width = 99
        
        AutoScaleDimensions = New SizeF(8F, 20F)
        AutoScaleMode = AutoScaleMode.Font
        ClientSize = New Size(1408, 797)
        ControlBox = False
        Controls.Add(Guna2DataGridView1)
        Controls.Add(Label3)
        Controls.Add(Label2)
        Controls.Add(Guna2Panel1)
        Controls.Add(Guna2Panel2)
        FormBorderStyle = FormBorderStyle.FixedSingle
        Name = "Booking"
        StartPosition = FormStartPosition.CenterScreen
        CType(PictureBox1, ComponentModel.ISupportInitialize).EndInit()
        CType(PictureBox2, ComponentModel.ISupportInitialize).EndInit()
        Guna2Panel1.ResumeLayout(False)
        Guna2Panel1.PerformLayout()
        Guna2Panel2.ResumeLayout(False)
        Guna2Panel2.PerformLayout()
        CType(Guna2DataGridView1, ComponentModel.ISupportInitialize).EndInit()
        ResumeLayout(False)
        PerformLayout()
    End Sub

    Friend WithEvents Label6 As Label
    Friend WithEvents PictureBox1 As PictureBox
    Friend WithEvents Label1 As Label
    Friend WithEvents PictureBox2 As PictureBox
    Friend WithEvents Guna2HtmlLabel1 As Guna.UI2.WinForms.Guna2HtmlLabel
    Friend WithEvents Button5 As Button
    Friend WithEvents Guna2Panel1 As Guna.UI2.WinForms.Guna2Panel
    Friend WithEvents Guna2Panel2 As Guna.UI2.WinForms.Guna2Panel
    Friend WithEvents Label2 As Label
    Friend WithEvents Label3 As Label
    Friend WithEvents Button6 As Button
    Friend WithEvents Button7 As Button
    Friend WithEvents Button8 As Button
    Friend WithEvents Button9 As Button
    Friend WithEvents Button10 As Button
    Friend WithEvents Guna2DataGridView1 As Guna.UI2.WinForms.Guna2DataGridView
    Friend WithEvents Column1 As DataGridViewTextBoxColumn
    Friend WithEvents Column2 As DataGridViewTextBoxColumn
    Friend WithEvents Column3 As DataGridViewTextBoxColumn
    Friend WithEvents Column4 As DataGridViewTextBoxColumn
    Friend WithEvents Column5 As DataGridViewTextBoxColumn
    Friend WithEvents Column6 As DataGridViewTextBoxColumn
    Friend WithEvents Column7 As DataGridViewTextBoxColumn
    Friend WithEvents Column8 As DataGridViewTextBoxColumn
    Friend WithEvents Column9 As DataGridViewTextBoxColumn
    Friend WithEvents Column10 As DataGridViewTextBoxColumn
    Friend WithEvents Column11 As DataGridViewTextBoxColumn
End Class

CCTV DESIGN CODE


<Global.Microsoft.VisualBasic.CompilerServices.DesignerGenerated()> _
Partial Class cctv
    Inherits System.Windows.Forms.Form

    <System.Diagnostics.DebuggerNonUserCode()> _
    Protected Overrides Sub Dispose(ByVal disposing As Boolean)
        Try
            If disposing AndAlso components IsNot Nothing Then
                components.Dispose()
            End If
        Finally
            MyBase.Dispose(disposing)
        End Try
    End Sub

    
    Private components As System.ComponentModel.IContainer

    <System.Diagnostics.DebuggerStepThrough()> _
    Private Sub InitializeComponent()
        Dim CustomizableEdges1 As Guna.UI2.WinForms.Suite.CustomizableEdges = New Guna.UI2.WinForms.Suite.CustomizableEdges()
        Dim CustomizableEdges2 As Guna.UI2.WinForms.Suite.CustomizableEdges = New Guna.UI2.WinForms.Suite.CustomizableEdges()
        Dim CustomizableEdges3 As Guna.UI2.WinForms.Suite.CustomizableEdges = New Guna.UI2.WinForms.Suite.CustomizableEdges()
        Dim CustomizableEdges4 As Guna.UI2.WinForms.Suite.CustomizableEdges = New Guna.UI2.WinForms.Suite.CustomizableEdges()
        Label3 = New Label()
        Label2 = New Label()
        Button6 = New Button()
        Button7 = New Button()
        Button8 = New Button()
        Button9 = New Button()
        Button10 = New Button()
        Guna2Panel1 = New Guna.UI2.WinForms.Guna2Panel()
        Label1 = New Label()
        PictureBox2 = New PictureBox()
        Guna2HtmlLabel1 = New Guna.UI2.WinForms.Guna2HtmlLabel()
        Button5 = New Button()
        PictureBox1 = New PictureBox()
        Guna2Panel2 = New Guna.UI2.WinForms.Guna2Panel()
        Label6 = New Label()
        Button1 = New Button()
        VideoView1 = New LibVLCSharp.WinForms.VideoView()
        Guna2Panel1.SuspendLayout()
        CType(PictureBox2, ComponentModel.ISupportInitialize).BeginInit()
        CType(PictureBox1, ComponentModel.ISupportInitialize).BeginInit()
        Guna2Panel2.SuspendLayout()
        CType(VideoView1, ComponentModel.ISupportInitialize).BeginInit()
        SuspendLayout()
       
        Label3.AutoSize = True
        Label3.Font = New Font("Poppins", 9F, FontStyle.Regular, GraphicsUnit.Point, CByte(0))
        Label3.Location = New Point(285, 158)
        Label3.Name = "Label3"
        Label3.Size = New Size(120, 26)
        Label3.TabIndex = 19
        Label3.Text = "List of booking"
       
        Label2.AutoSize = True
        Label2.Font = New Font("Poppins", 12F, FontStyle.Bold, GraphicsUnit.Point, CByte(0))
        Label2.ForeColor = Color.Maroon
        Label2.Location = New Point(282, 127)
        Label2.Name = "Label2"
        Label2.Size = New Size(72, 36)
        Label2.TabIndex = 18
        Label2.Text = "CCTV"
       
        Button6.BackColor = Color.Maroon
        Button6.FlatAppearance.BorderColor = Color.White
        Button6.FlatAppearance.BorderSize = 0
        Button6.FlatAppearance.MouseDownBackColor = Color.White
        Button6.FlatStyle = FlatStyle.Flat
        Button6.Font = New Font("Poppins", 12F, FontStyle.Regular, GraphicsUnit.Point, CByte(0))
        Button6.ForeColor = Color.White
        Button6.Image = My.Resources.Resources.cctv__2_
        Button6.ImageAlign = ContentAlignment.MiddleLeft
        Button6.Location = New Point(-1, 463)
        Button6.Name = "Button6"
        Button6.Padding = New Padding(5, 0, 0, 0)
        Button6.Size = New Size(226, 45)
        Button6.TabIndex = 16
        Button6.Text = "CCTV"
        Button6.TextAlign = ContentAlignment.MiddleLeft
        Button6.TextImageRelation = TextImageRelation.ImageBeforeText
        Button6.UseVisualStyleBackColor = False
       
        Button7.BackColor = Color.Maroon
        Button7.FlatAppearance.BorderColor = Color.RosyBrown
        Button7.FlatAppearance.BorderSize = 0
        Button7.FlatAppearance.MouseDownBackColor = Color.RosyBrown
        Button7.FlatStyle = FlatStyle.Flat
        Button7.Font = New Font("Poppins", 12F, FontStyle.Regular, GraphicsUnit.Point, CByte(0))
        Button7.ForeColor = Color.White
        Button7.Image = My.Resources.Resources.dashboard__3_
        Button7.ImageAlign = ContentAlignment.MiddleLeft
        Button7.Location = New Point(0, 239)
        Button7.Name = "Button7"
        Button7.Padding = New Padding(5, 0, 0, 0)
        Button7.Size = New Size(226, 45)
        Button7.TabIndex = 12
        Button7.Text = "Dashboard"
        Button7.TextAlign = ContentAlignment.MiddleLeft
        Button7.TextImageRelation = TextImageRelation.ImageBeforeText
        Button7.UseVisualStyleBackColor = False
        
        Button8.BackColor = Color.Maroon
        Button8.FlatAppearance.BorderColor = Color.White
        Button8.FlatAppearance.BorderSize = 0
        Button8.FlatAppearance.MouseDownBackColor = Color.White
        Button8.FlatStyle = FlatStyle.Flat
        Button8.Font = New Font("Poppins", 12F, FontStyle.Regular, GraphicsUnit.Point, CByte(0))
        Button8.ForeColor = Color.White
        Button8.Image = My.Resources.Resources.analysis
        Button8.ImageAlign = ContentAlignment.MiddleLeft
        Button8.Location = New Point(0, 407)
        Button8.Name = "Button8"
        Button8.Padding = New Padding(5, 0, 0, 0)
        Button8.Size = New Size(226, 45)
        Button8.TabIndex = 14
        Button8.Text = "Inquire"
        Button8.TextAlign = ContentAlignment.MiddleLeft
        Button8.TextImageRelation = TextImageRelation.ImageBeforeText
        Button8.UseVisualStyleBackColor = False
       
        Button9.BackColor = Color.Maroon
        Button9.FlatAppearance.BorderColor = Color.White
        Button9.FlatAppearance.BorderSize = 0
        Button9.FlatAppearance.MouseDownBackColor = Color.White
        Button9.FlatStyle = FlatStyle.Flat
        Button9.Font = New Font("Poppins", 12F, FontStyle.Regular, GraphicsUnit.Point, CByte(0))
        Button9.ForeColor = Color.White
        Button9.Image = My.Resources.Resources.calendar__2_
        Button9.ImageAlign = ContentAlignment.MiddleLeft
        Button9.Location = New Point(1, 351)
        Button9.Name = "Button9"
        Button9.Padding = New Padding(5, 0, 0, 0)
        Button9.Size = New Size(226, 45)
        Button9.TabIndex = 13
        Button9.Text = "Bookings"
        Button9.TextAlign = ContentAlignment.MiddleLeft
        Button9.TextImageRelation = TextImageRelation.ImageBeforeText
        Button9.UseVisualStyleBackColor = False
        
        Button10.BackColor = Color.Maroon
        Button10.FlatAppearance.BorderColor = Color.White
        Button10.FlatAppearance.BorderSize = 0
        Button10.FlatAppearance.MouseDownBackColor = Color.White
        Button10.FlatStyle = FlatStyle.Flat
        Button10.Font = New Font("Poppins", 12F, FontStyle.Regular, GraphicsUnit.Point, CByte(0))
        Button10.ForeColor = Color.White
        Button10.Image = My.Resources.Resources.add__1_
        Button10.ImageAlign = ContentAlignment.MiddleLeft
        Button10.Location = New Point(0, 296)
        Button10.Name = "Button10"
        Button10.Padding = New Padding(5, 0, 0, 0)
        Button10.Size = New Size(226, 45)
        Button10.TabIndex = 15
        Button10.Text = "Registers"
        Button10.TextAlign = ContentAlignment.MiddleLeft
        Button10.TextImageRelation = TextImageRelation.ImageBeforeText
        Button10.UseVisualStyleBackColor = False
        
        Guna2Panel1.AllowDrop = True
        Guna2Panel1.BackColor = Color.Maroon
        Guna2Panel1.Controls.Add(Button6)
        Guna2Panel1.Controls.Add(Label1)
        Guna2Panel1.Controls.Add(Button7)
        Guna2Panel1.Controls.Add(PictureBox2)
        Guna2Panel1.Controls.Add(Button8)
        Guna2Panel1.Controls.Add(Guna2HtmlLabel1)
        Guna2Panel1.Controls.Add(Button9)
        Guna2Panel1.Controls.Add(Button5)
        Guna2Panel1.Controls.Add(Button10)
        Guna2Panel1.CustomizableEdges = CustomizableEdges1
        Guna2Panel1.Dock = DockStyle.Left
        Guna2Panel1.Location = New Point(0, 0)
        Guna2Panel1.Name = "Guna2Panel1"
        Guna2Panel1.ShadowDecoration.BorderRadius = 1000
        Guna2Panel1.ShadowDecoration.CustomizableEdges = CustomizableEdges2
        Guna2Panel1.Size = New Size(226, 797)
       
        Label1.AutoSize = True
        Label1.Font = New Font("Poppins SemiBold", 9F, FontStyle.Bold, GraphicsUnit.Point, CByte(0))
        Label1.ForeColor = Color.White
        Label1.Location = New Point(66, 172)
        Label1.Name = "Label1"
        Label1.Size = New Size(62, 26)
        Label1.TabIndex = 2
        Label1.Text = "ADMIN"
        
        PictureBox2.BackColor = Color.Transparent
        PictureBox2.Image = My.Resources.Resources.user__1_
        PictureBox2.Location = New Point(60, 84)
        PictureBox2.Name = "PictureBox2"
        PictureBox2.Size = New Size(82, 78)
        PictureBox2.SizeMode = PictureBoxSizeMode.StretchImage
        PictureBox2.TabIndex = 7
        PictureBox2.TabStop = False
        
        Guna2HtmlLabel1.BackColor = Color.Transparent
        Guna2HtmlLabel1.Font = New Font("Poppins", 13.8F, FontStyle.Bold, GraphicsUnit.Point, CByte(0))
        Guna2HtmlLabel1.ForeColor = Color.White
        Guna2HtmlLabel1.Location = New Point(37, 15)
        Guna2HtmlLabel1.Name = "Guna2HtmlLabel1"
        Guna2HtmlLabel1.Size = New Size(131, 42)
        Guna2HtmlLabel1.TabIndex = 2
        Guna2HtmlLabel1.Text = "CCR-RIZAL"
        
        Button5.BackColor = Color.Maroon
        Button5.FlatAppearance.BorderColor = Color.White
        Button5.FlatAppearance.BorderSize = 0
        Button5.FlatAppearance.MouseDownBackColor = Color.White
        Button5.FlatStyle = FlatStyle.Flat
        Button5.Font = New Font("Poppins", 10.8F, FontStyle.Regular, GraphicsUnit.Point, CByte(0))
        Button5.ForeColor = Color.White
        Button5.Image = My.Resources.Resources.logout__5_
        Button5.ImageAlign = ContentAlignment.MiddleLeft
        Button5.Location = New Point(0, 738)
        Button5.Name = "Button5"
        Button5.Padding = New Padding(5, 0, 0, 0)
        Button5.Size = New Size(226, 44)
        Button5.TabIndex = 6
        Button5.Text = "Logout"
        Button5.TextAlign = ContentAlignment.MiddleLeft
        Button5.TextImageRelation = TextImageRelation.ImageBeforeText
        Button5.UseVisualStyleBackColor = False
       
        PictureBox1.Image = My.Resources.Resources.logo_png
        PictureBox1.Location = New Point(8, 8)
        PictureBox1.Name = "PictureBox1"
        PictureBox1.Size = New Size(71, 64)
        PictureBox1.SizeMode = PictureBoxSizeMode.StretchImage
        PictureBox1.TabIndex = 7
        PictureBox1.TabStop = False
         
        Guna2Panel2.BackColor = Color.White
        Guna2Panel2.Controls.Add(Label6)
        Guna2Panel2.Controls.Add(PictureBox1)
        Guna2Panel2.CustomizableEdges = CustomizableEdges3
        Guna2Panel2.Location = New Point(223, -2)
        Guna2Panel2.Name = "Guna2Panel2"
        Guna2Panel2.ShadowDecoration.CustomizableEdges = CustomizableEdges4
        Guna2Panel2.Size = New Size(1186, 75)
        Guna2Panel2.TabIndex = 17
         
        Label6.AutoSize = True
        Label6.Font = New Font("Poppins", 13.8F, FontStyle.Bold, GraphicsUnit.Point, CByte(0))
        Label6.ForeColor = Color.Maroon
        Label6.Location = New Point(83, 22)
        Label6.Name = "Label6"
        Label6.Size = New Size(375, 40)
        Label6.TabIndex = 6
        Label6.Text = "COVERED COURT RESERVATION"
         
        Button1.BackColor = Color.Maroon
        Button1.Font = New Font("Poppins", 10.2F, FontStyle.Bold, GraphicsUnit.Point, CByte(0))
        Button1.ForeColor = Color.White
        Button1.Location = New Point(280, 711)
        Button1.Name = "Button1"
        Button1.Size = New Size(173, 46)
        Button1.TabIndex = 21
        Button1.Text = "START"
        Button1.UseVisualStyleBackColor = False
        
        VideoView1.BackColor = Color.Black
        VideoView1.Location = New Point(286, 213)
        VideoView1.MediaPlayer = Nothing
        VideoView1.Name = "VideoView1"
        VideoView1.Size = New Size(1067, 462)
        VideoView1.TabIndex = 22
        VideoView1.Text = "VideoView1"
       
        AutoScaleDimensions = New SizeF(8F, 20F)
        AutoScaleMode = AutoScaleMode.Font
        ClientSize = New Size(1408, 797)
        ControlBox = False
        Controls.Add(VideoView1)
        Controls.Add(Button1)
        Controls.Add(Label3)
        Controls.Add(Label2)
        Controls.Add(Guna2Panel1)
        Controls.Add(Guna2Panel2)
        FormBorderStyle = FormBorderStyle.FixedSingle
        Name = "cctv"
        StartPosition = FormStartPosition.CenterScreen
        Guna2Panel1.ResumeLayout(False)
        Guna2Panel1.PerformLayout()
        CType(PictureBox2, ComponentModel.ISupportInitialize).EndInit()
        CType(PictureBox1, ComponentModel.ISupportInitialize).EndInit()
        Guna2Panel2.ResumeLayout(False)
        Guna2Panel2.PerformLayout()
        CType(VideoView1, ComponentModel.ISupportInitialize).EndInit()
        ResumeLayout(False)
        PerformLayout()
    End Sub

    Friend WithEvents Label3 As Label
    Friend WithEvents Label2 As Label
    Friend WithEvents Button6 As Button
    Friend WithEvents Button7 As Button
    Friend WithEvents Button8 As Button
    Friend WithEvents Button9 As Button
    Friend WithEvents Button10 As Button
    Friend WithEvents Guna2Panel1 As Guna.UI2.WinForms.Guna2Panel
    Friend WithEvents Label1 As Label
    Friend WithEvents PictureBox2 As PictureBox
    Friend WithEvents Guna2HtmlLabel1 As Guna.UI2.WinForms.Guna2HtmlLabel
    Friend WithEvents Button5 As Button
    Friend WithEvents PictureBox1 As PictureBox
    Friend WithEvents Guna2Panel2 As Guna.UI2.WinForms.Guna2Panel
    Friend WithEvents Label6 As Label
    Friend WithEvents Button1 As Button
    Friend WithEvents VideoView1 As LibVLCSharp.WinForms.VideoView
End Class

WEBSITE HTML 

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>COVERED COURT RESERVATION</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="courts.css" rel="stylesheet">
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-maroon">
        <div class="container">
            <a class="navbar-brand" href="#">
                <img src="images/logo.png.png" alt="Covered Court Reservation Logo" width="50" height="50" class="d-inline-block align-top">
                COVERED COURT RESERVATION
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="home.php">HOME</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="courts.php">COURTS</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="aboutus.php">ABOUT US</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="inquire.php">INQUIRE</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <div class="container mt-5">
        <h1 class="text-center mb-5">AVAILABLE COURTS</h1>
        
        <div class="row">
          
            <div class="col-md-4 mb-4">
                <div class="card court-card">
                    <img src="images/basketball-court.png" class="card-img-top" alt="Basketball Court">
                    <div class="card-body">
                        <h5 class="card-title">BASKETBALL COURT</h5>
                        <p class="card-text">Available for whole court and half court bookings.</p>
                        <p class="card-text"><small class="text-muted">1HR - Whole Court ₱500.00 | Half Court ₱300.00</small></p>
                    </div>
                </div>
            </div>
            
          
            <div class="col-md-4 mb-4">
                <div class="card court-card">
                    <img src="images/badminton-court.png" class="card-img-top" alt="Badminton Court">
                    <div class="card-body">
                        <h5 class="card-title">BADMINTON COURT</h5>
                        <p class="card-text">Available for whole court and half court bookings.</p>
                        <p class="card-text"><small class="text-muted">1HR - Whole Court ₱500.00 | Half Court ₱300.00</small></p>
                    </div>
                </div>
            </div>
            
          
            <div class="col-md-4 mb-4">
                <div class="card court-card">
                    <img src="images/volleyball-court.png" class="card-img-top" alt="Volleyball Court">
                    <div class="card-body">
                        <h5 class="card-title">VOLLEYBALL COURT</h5>
                        <p class="card-text">Available for whole court and half court bookings.</p>
                        <p class="card-text"><small class="text-muted">1HR - Whole Court ₱500.00 | Half Court ₱300.00</small></p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <footer class="footer py-5">
        <div class="container">
            <div class="row">
                <div class="col-md-6">
                    <h5>SEARCH</h5>
                    <ul class="list-unstyled">
                        <li><a href="#">ALL BASKETBALL COURTS IN MONTALBAN RIZAL</a></li>
                        <li><a href="#">PRIVACY POLICY</a></li>
                        <li><a href="#">TERMS OF SERVICE</a></li>
                    </ul>
                </div>
                <div class="col-md-6">
                    <h5>SIGN UP FOR UPDATES</h5>
                    <p>Get notified with news and updates on court listings</p>
                    <form id="subscribe-form">
                        <div class="input-group mb-3">
                            <input type="email" class="form-control" placeholder="My email address" aria-label="Email address" aria-describedby="subscribe-button">
                            <button class="btn btn-outline-light" type="submit" id="subscribe-button">SUBSCRIBE</button>
                        </div>
                    </form>
                </div>
            </div>
            <div class="row mt-4">
                <div class="col-md-6">
                    <div class="social-icons">
                        <a href="#" class="me-3"><i class="bi bi-facebook"></i></a>
                        <a href="#" class="me-3"><i class="bi bi-twitter"></i></a>
                        <a href="#"><i class="bi bi-instagram"></i></a>
                    </div>
                </div>
                <div class="col-md-6 text-md-end">
                    <p>&copy; 2024 @COR-RIZAL</p>
                </div>
            </div>
        </div>
    </footer>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>

CSS

:root {
  --maroon: #800000;
  --white: #ffffff;
  --gray: #808080;
  --black: #000000;
}

body {
  font-family: Poppins, sans-serif;
  color: var(--black);
  background-image: linear-gradient(rgba(128, 0, 0, 0), rgba(128, 0, 0, 0.7)),
    url("images/background.jpg");
  background-size: cover;
  background-attachment: fixed;
  background-position: center;
}

.container {
  text-align: center;
}

.container h1 {
  font-weight: bold;
}

.container p {
  font-weight: bold;
  color: white;
}

/*NAVBAR - SECTION*/
.bg-maroon {
  background-color: white;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.navbar-brand {
  color: black;
  font-weight: bold;
}

.navbar-brand img {
  margin-right: 5px;
}

.nav-link {
  color: black;
}

.nav-link:hover {
  color: var(--gray);
}

h1 {
  color: var(--white);
}

main {
  background-color: rgba(255, 255, 255, 0);
  padding: 20px;
  border-radius: 5px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0);
  margin-bottom: 3rem;
}

/*CAROUSEL - SECTION*/
.carousel-item {
  height: 400px;
  width: 100%;
}

.carousel-item img {
  object-fit: cover;
  height: 100%;
  border-radius: 10px;
}

.carousel-caption {
  background-color: rgba(0, 0, 0, 0.5);
  padding: 20px;
  border-radius: 5px;
}

.carousel-caption h5 {
  color: var(--white);
  font-weight: bold;
}

.carousel-caption p {
  color: var(--white);
}

#courtCarousel {
  margin-bottom: 3rem;
  width: 100%;
  max-width: 1200px;
  margin-left: auto;
  margin-right: auto;
  border-radius: 10px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  overflow: hidden;
}

p {
  color: var(--black);
}

@media (max-width: 768px) {
  .carousel-item {
    height: 56.25vw;
    min-height: 200px;
  }
}

.ratio {
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  border-radius: 10px;
  overflow: hidden;
}

/*PLAY STORE AND AP STORE LOGO-SECTION*/
.app-store-links img {
  transition: transform 0.3s ease;
}

.app-store-links img:hover {
  transform: scale(1.05);
}

@media (max-width: 768px) {
  .app-store-links {
    flex-direction: column;
    align-items: center;
  }

  .app-store-links a {
    margin-bottom: 1rem;
  }
}
.text-center {
  text-align: center !important;
  color: white;
}

/*LIVE STREAMING-SECTION*/
.live-streaming {
  background-color: #ffffff9f;
  padding: 4rem 0;
}

.live-streaming h2 {
  color: #ffffff;
  font-size: 2.5rem;
  margin-bottom: 2rem;
}

.live-streaming h2 span {
  color: #8b0000;
}

.text-primary {
  --bs-text-opacity: 1;
  color: maroon !important;
}

.live-stream-container {
  background-color: #fff;
  border-radius: 1rem;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  overflow: hidden;
}

.live-stream-placeholder {
  background-color: #000;
  aspect-ratio: 16 / 9;
  display: flex;
  align-items: center;
  justify-content: center;
  color: #fff;
  font-size: 1.5rem;
  position: relative;
}

.live-indicator {
  position: absolute;
  top: 1rem;
  left: 1rem;
  background-color: #dc3545;
  color: #fff;
  padding: 0.25rem 0.5rem;
  border-radius: 0.25rem;
  font-size: 0.875rem;
  font-weight: bold;
}

.live-stream-info {
  padding: 1.5rem;
}

.live-stream-info h3 {
  margin-bottom: 1rem;
  color: #333;
}

.live-stream-info p {
  color: #666;
  margin-bottom: 1rem;
}

.stream-stats {
  display: flex;
  justify-content: space-between;
  margin-top: 1rem;
  font-size: 0.875rem;
  color: #666;
}

.upcoming-streams {
  margin-top: 2rem;
}

.upcoming-stream-item {
  border-bottom: 1px solid #e9ecef;
  padding: 1rem 0;
}

.upcoming-stream-item:last-child {
  border-bottom: none;
}

.btn-primary {
  --bs-btn-color: #fff;
  --bs-btn-bg: #63121a;
  --bs-btn-border-color: #ffffff;
  --bs-btn-hover-color: #fff;
  --bs-btn-hover-bg: #7a0914;
  --bs-btn-hover-border-color: #ffffff;
  --bs-btn-focus-shadow-rgb: 49, 132, 253;
  --bs-btn-active-color: #fff;
  --bs-btn-active-bg: #ffffff;
  --bs-btn-active-border-color: #ffffff;
  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
  --bs-btn-disabled-color: #fff;
  --bs-btn-disabled-bg: #ffffff;
  --bs-btn-disabled-border-color: #ffffff;
}

/*FOOTER-SECTION*/
.footer {
  background-color: rgba(128, 0, 0, 0.481);
  color: white;
}

.footer a {
  color: white;
  text-decoration: none;
}

.footer a:hover {
  text-decoration: underline;
}

.footer h5 {
  font-weight: bold;
  margin-bottom: 1rem;
}

.footer ul {
  padding-left: 0;
}

.footer li {
  margin-bottom: 0.5rem;
}

.footer-links a {
  text-decoration: none;
}

.footer-links a:hover {
  text-decoration: none;
  opacity: 0.8;
}

.social-icons a {
  font-size: 1.5rem;
}

.col-md-6 {
  color: white;
}

.text-md-end {
  color: white;
}

ABOUT US 
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>COVERED COURT RESERVATION</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="aboutus.css" rel="stylesheet">
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-maroon">
        <div class="container">
            <a class="navbar-brand" href="#">
                <img src="images/logo.png.png" alt="Covered Court Reservation Logo" width="50" height="50" class="d-inline-block align-top">
                COVERED COURT RESERVATION
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="home.php">HOME</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="courts.php">COURTS</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="aboutus.php">ABOUT US</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="inquire.php">INQUIRE</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <header class="hero-section">
        <div class="container h-100">
            <div class="row h-100 align-items-center">
                <div class="col-12 text-center">
                    <h1 class="fw-light">COVERED COURT RESERVATION</h1>
                    <p class="lead"></p>
                </div>
            </div>
        </div>
    </header>

    <main class="container my-5">
        <section class="row">
            <div class="col-lg-6">
                <h2 class="mb-4">ABOUT US</h2>
                <p>At Covered Court Reservation, we believe everyone should have access to quality indoor courts. Our user-friendly online reservation system puts you in control of your game time, allowing you to choose the perfect date and time for your next game or event.
                </p>
                <p>Whether you're organizing a casual pick-up game with friends or hosting a tournament, we have the space you need. With our flexible booking options, you can easily find a time slot that fits your busy schedule. Our online system provides upfront court availability and facility details, making it easy to make informed decisions.</p>
            </div>
            <div class="col-lg-6">
                <img src="images/logo.png.png" alt="Elegant interior design" class="img-fluid rounded shadow">
            </div>
        </section>

        <section class="row mt-5">
            <div class="col-12 text-center">
                <h2 class="mb-4">Our Values</h2>
            </div>
            <div class="col-md-4">
                <div class="card mb-4">
                    <div class="card-body text-center">
                        <h3 class="card-title h4">Innovation</h3>
                        <p class="card-text">We're constantly innovating to make your court reservation experience smoother and more enjoyable.</p>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card mb-4">
                    <div class="card-body text-center">
                        <h3 class="card-title h4">Accessibility</h3>
                        <p class="card-text"> We believe everyone deserves access to convenient court reservations, regardless of their abilities.</p>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card mb-4">
                    <div class="card-body text-center">
                        <h3 class="card-title h4">Reliability</h3>
                        <p class="card-text">Our team works tirelessly to ensure that your experience on our platform is not just reliable but also seamless.</p>
                    </div>
                </div>
            </div>
        </section>

        <section class="row mt-5">
    <div class="col-12 text-center">
        <h2 class="mb-4">Meet Our Team</h2>
    </div>
    <div class="col-md-3 col-sm-6">
        <div class="team-member text-center">
            <img src="images/garcia.jpg" alt="Team member 1" class="rounded-circle mb-3">
            <h3 class="h5">Christian Garcia</h3>
            <p class="text-muted"></p>App Developer</p>
        </div>
    </div>
    <div class="col-md-3 col-sm-6">
        <div class="team-member text-center">
            <img src="images/kieth.jpg" alt="Team member 2" class="rounded-circle mb-3">
            <h3 class="h5">Kieth Eusebio</h3>
            <p class="text-muted">Lead Designer & Web Developer</p>
        </div>
    </div>
    <div class="col-md-3 col-sm-6">
        <div class="team-member text-center">
            <img src="images/roque.jpg" alt="Team member 3" class="rounded-circle mb-3">
            <h3 class="h5">Diana Roque</h3>
            <p class="text-muted">Assistant Designer & Manu Script</Script></p>
        </div>
    </div>
    <div class="col-md-3 col-sm-6">
        <div class="team-member text-center">
            <img src="images/silvestre.jpg" alt="Team member 4" class="rounded-circle mb-3">
            <h3 class="h5">Jimwell Silvestre</h3>
            <p class="text-muted">Desktop Developer</p>
        </div>
    </div>
</section>
    </main>

    <footer class="footer py-5">
        <div class="container">
            <div class="row">
                <div class="col-md-6">
                    <h5>SEARCH</h5>
                    <ul class="list-unstyled">
                        <li><a href="#">ALL BASKETBALL COURTS IN MONTALBAN RIZAL</a></li>
                        <li><a href="#">PRIVACY POLICY</a></li>
                        <li><a href="#">TERMS OF SERVICE</a></li>
                    </ul>
                </div>
                <div class="col-md-6">
                    <h5>SIGN UP FOR UPDATES</h5>
                    <p>Get notified with news and updates on court listings</p>
                    <form id="subscribe-form">
                        <div class="input-group mb-3">
                            <input type="email" class="form-control" placeholder="My email address" aria-label="Email address" aria-describedby="subscribe-button">
                            <button class="btn btn-outline-light" type="submit" id="subscribe-button">SUBSCRIBE</button>
                        </div>
                    </form>
                </div>
            </div>
            <div class="row mt-4">
                <div class="col-md-6">
                    <div class="social-icons">
                        <a href="#" class="me-3"><i class="bi bi-facebook"></i></a>
                        <a href="#" class="me-3"><i class="bi bi-twitter"></i></a>
                        <a href="#"><i class="bi bi-instagram"></i></a>
                    </div>
                </div>
                <div class="col-md-6 text-md-end">
                    <p>&copy; 2024 @COR-RIZAL</p>
                </div>
            </div>
        </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>

CSS

:root {
  --maroon: #800000;
  --white: #ffffff;
  --gray: #808080;
  --black: #000000;
}

body {
  font-family: "Popins", sans-serif;
  color: var(--black);
  background-image: linear-gradient(
      rgba(255, 255, 255, 0),
      rgba(122, 0, 0, 0.7)
    ),
    url("images/background.jpg");
  background-size: cover;
  background-attachment: fixed;
  background-position: center;
}

.bg-maroon {
  background-color: white;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.navbar-brand {
  color: black;
  font-weight: bold;
}

.navbar-brand img {
  margin-right: 5px;
}

.nav-link {
  color: black;
}

.nav-link:hover {
  color: var(--gray);
}

.footer {
  background-color: rgba(128, 0, 0, 0.481);
  color: white;
}

.footer a {
  color: white;
  text-decoration: none;
}

.footer a:hover {
  text-decoration: underline;
}

.footer h5 {
  font-weight: bold;
  margin-bottom: 1rem;
}

.footer ul {
  padding-left: 0;
}

.footer li {
  margin-bottom: 0.5rem;
}

.footer-links a {
  text-decoration: none;
}

.footer-links a:hover {
  text-decoration: none;
  opacity: 0.8;
}

.social-icons a {
  font-size: 1.5rem;
}

.col-md-6 {
  color: white;
}

.text-md-end {
  color: white;
}

body {
  font-family: "Poppins", serif;
  color: #333;
}

.navbar {
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.navbar-brand {
  font-family: "Poppins", serif;
  font-size: 1.5rem;
}

body {
  font-family: "Poppins", serif;
  color: #ffffff;
}

.hero-section {
  background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)),
    url("images/background.jpg");
  background-size: cover;
  background-position: center;
  height: 60vh;
  color: #fff;
}

.hero-section h1 {
  font-size: 3.5rem;
  font-weight: 300;
  text-shadow: 2px 2px 4px rgba(255, 253, 253, 0.5);
}

.hero-section p {
  font-size: 1.5rem;
  text-shadow: 1px 1px 2px rgba(255, 255, 255, 0.5);
}

h2 {
  font-family: "Poppins", serif;
  color: #ffffff;
  margin-bottom: 1.5rem;
}

.card {
  border: none;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  transition: transform 0.3s ease-in-out;
}

.card:hover {
  transform: translateY(-5px);
}

.team-member {
  margin-bottom: 2rem;
}

.team-member img {
  width: 200px;
  height: 200px;
  object-fit: cover;
  border: 5px solid #fff;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.team-member h3 {
  margin-top: 1rem;
  font-family: "Poppins", serif;
}

@media (max-width: 767px) {
  .team-member {
    margin-bottom: 3rem;
  }
}

.row h2 {
  font-family: "Poppins", serif;
  color: #ffffff;
  margin-bottom: 2rem;
}

.team-member p {
  color: #fcfcfc;
  font-size: 0.9rem;
}
@media (max-width: 768px) {
  .hero-section h1 {
    font-size: 2.5rem;
  }

  .hero-section p {
    font-size: 1.2rem;
  }
}

.text-muted {
  --bs-text-opacity: 1;
  color: white !important;
}

COURTS 


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>COVERED COURT RESERVATION</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="courts.css" rel="stylesheet">
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-maroon">
        <div class="container">
            <a class="navbar-brand" href="#">
                <img src="images/logo.png.png" alt="Covered Court Reservation Logo" width="50" height="50" class="d-inline-block align-top">
                COVERED COURT RESERVATION
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="home.php">HOME</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="courts.php">COURTS</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="aboutus.php">ABOUT US</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="inquire.php">INQUIRE</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <div class="container mt-5">
        <h1 class="text-center mb-5">AVAILABLE COURTS</h1>
        
        <div class="row">
          
            <div class="col-md-4 mb-4">
                <div class="card court-card">
                    <img src="images/basketball-court.png" class="card-img-top" alt="Basketball Court">
                    <div class="card-body">
                        <h5 class="card-title">BASKETBALL COURT</h5>
                        <p class="card-text">Available for whole court and half court bookings.</p>
                        <p class="card-text"><small class="text-muted">1HR - Whole Court ₱500.00 | Half Court ₱300.00</small></p>
                    </div>
                </div>
            </div>
            
          
            <div class="col-md-4 mb-4">
                <div class="card court-card">
                    <img src="images/badminton-court.png" class="card-img-top" alt="Badminton Court">
                    <div class="card-body">
                        <h5 class="card-title">BADMINTON COURT</h5>
                        <p class="card-text">Available for whole court and half court bookings.</p>
                        <p class="card-text"><small class="text-muted">1HR - Whole Court ₱500.00 | Half Court ₱300.00</small></p>
                    </div>
                </div>
            </div>
            
          
            <div class="col-md-4 mb-4">
                <div class="card court-card">
                    <img src="images/volleyball-court.png" class="card-img-top" alt="Volleyball Court">
                    <div class="card-body">
                        <h5 class="card-title">VOLLEYBALL COURT</h5>
                        <p class="card-text">Available for whole court and half court bookings.</p>
                        <p class="card-text"><small class="text-muted">1HR - Whole Court ₱500.00 | Half Court ₱300.00</small></p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <footer class="footer py-5">
        <div class="container">
            <div class="row">
                <div class="col-md-6">
                    <h5>SEARCH</h5>
                    <ul class="list-unstyled">
                        <li><a href="#">ALL BASKETBALL COURTS IN MONTALBAN RIZAL</a></li>
                        <li><a href="#">PRIVACY POLICY</a></li>
                        <li><a href="#">TERMS OF SERVICE</a></li>
                    </ul>
                </div>
                <div class="col-md-6">
                    <h5>SIGN UP FOR UPDATES</h5>
                    <p>Get notified with news and updates on court listings</p>
                    <form id="subscribe-form">
                        <div class="input-group mb-3">
                            <input type="email" class="form-control" placeholder="My email address" aria-label="Email address" aria-describedby="subscribe-button">
                            <button class="btn btn-outline-light" type="submit" id="subscribe-button">SUBSCRIBE</button>
                        </div>
                    </form>
                </div>
            </div>
            <div class="row mt-4">
                <div class="col-md-6">
                    <div class="social-icons">
                        <a href="#" class="me-3"><i class="bi bi-facebook"></i></a>
                        <a href="#" class="me-3"><i class="bi bi-twitter"></i></a>
                        <a href="#"><i class="bi bi-instagram"></i></a>
                    </div>
                </div>
                <div class="col-md-6 text-md-end">
                    <p>&copy; 2024 @COR-RIZAL</p>
                </div>
            </div>
        </div>
    </footer>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>

CSS

:root {
  --maroon: #800000;
  --white: #ffffff;
  --gray: #808080;
  --black: #000000;
}

body {
  font-family: Poppins, sans-serif;
  color: var(--black);
  background-image: linear-gradient(rgba(128, 0, 0, 0), rgba(128, 0, 0, 0.7)),
    url("images/background.jpg");
  background-size: cover;
  background-attachment: fixed;
  background-position: center;
}

.text-center {
  text-align: center !important;
  color: white;
}


.bg-maroon {
  background-color: white;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.navbar-brand {
  color: black;
  font-weight: bold;
}

.navbar-brand img {
  margin-right: 5px;
}

.nav-link {
  color: black;
}

.nav-link:hover {
  color: var(--gray);
}

body {
  background-color: #f8f9fa;
}

.court-card {
  transition: transform 0.3s ease-in-out;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.court-card:hover {
  transform: translateY(-5px);
}

.card-img-top {
  height: 200px;
  object-fit: cover;
}

.card-title {
  color: #080808;
  font-weight: bold;
}

.card-text {
  color: #6c757d;
}

.text-muted {
  font-style: italic;
}

.footer {
  background-color: rgba(128, 0, 0, 0.481);
  color: white;
}

.footer a {
  color: white;
  text-decoration: none;
}

.footer a:hover {
  text-decoration: underline;
}

.footer h5 {
  font-weight: bold;
  margin-bottom: 1rem;
}

.footer ul {
  padding-left: 0;
}

.footer li {
  margin-bottom: 0.5rem;
}

.footer-links a {
  text-decoration: none;
}

.footer-links a:hover {
  text-decoration: none;
  opacity: 0.8;
}

.social-icons a {
  font-size: 1.5rem;
}

.col-md-6 {
  color: white;
}

.text-md-end {
  color: white;
}





